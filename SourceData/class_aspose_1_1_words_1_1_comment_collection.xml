<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_comment_collection" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::CommentCollection</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_node_collection" prot="public" virt="non-virtual">Aspose::Words::NodeCollection</basecompoundref>
    <includes refid="_comment_collection_8h" local="no">Aspose.Words.Cpp/CommentCollection.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_comment_collection_1a849d83c6083dd623746311e66e8761a5" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_node_collection" kindref="compound">Aspose::Words::NodeCollection</ref></type>
        <definition>typedef Aspose::Words::NodeCollection Aspose::Words::CommentCollection::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::CommentCollection::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/CommentCollection.h" line="66" column="43" bodyfile="Aspose.Words.Cpp/CommentCollection.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_comment_collection_1ac85f7d6e878e89e5b5cec3e0a463216c" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_comment_collection" kindref="compound">CommentCollection</ref></type>
        <definition>typedef CommentCollection Aspose::Words::CommentCollection::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::CommentCollection::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/CommentCollection.h" line="65" column="31" bodyfile="Aspose.Words.Cpp/CommentCollection.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_comment_collection_1ac667ba90e7ece1f06b06826cc4488dff" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node_collection" kindref="compound">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::CommentCollection::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::CommentCollection::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/CommentCollection.h" line="68" column="37" bodyfile="Aspose.Words.Cpp/CommentCollection.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_comment_collection_1a37f50db0e6b54eae68dd5338fe5cc3f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::CommentCollection::~CommentCollection</definition>
        <argsstring>()</argsstring>
        <name>~CommentCollection</name>
        <qualifiedname>Aspose::Words::CommentCollection::~CommentCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/CommentCollection.h" line="119" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_comment_collection_1a033a20c6773eb5542d3bc3f244262b7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::CommentCollection::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::CommentCollection::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/CommentCollection.h" line="69" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_comment_collection_1a137bac0781f49a216956f10f2e90d963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_comment" kindref="compound">Aspose::Words::Comment</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Comment &gt; Aspose::Words::CommentCollection::idx_get</definition>
        <argsstring>(int32_t index)</argsstring>
        <name>idx_get</name>
        <qualifiedname>Aspose::Words::CommentCollection::idx_get</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Retrieves a <bold>Comment</bold> at the given index. </para>
        </briefdescription>
        <detaileddescription>
<para>The index is zero-based.</para>
<para>Negative indexes are allowed and indicate access from the back of the collection. For example -1 means the last item, -2 means the second before last and so on.</para>
<para>If index is greater than or equal to the number of items in the list, this returns a null reference.</para>
<para>If index is negative and its absolute value is greater than the number of items in the list, this returns a null reference.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>An index into the collection.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to remove comment replies. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comment<sp/>=<sp/>MakeObject&lt;Comment&gt;(doc,<sp/>u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;J.D.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">comment-&gt;SetText(u</highlight><highlight class="stringliteral">&quot;My<sp/>comment.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(comment);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">comment-&gt;AddReply(u</highlight><highlight class="stringliteral">&quot;Joe<sp/>Bloggs&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;J.B.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>(),<sp/>u</highlight><highlight class="stringliteral">&quot;New<sp/>reply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">comment-&gt;AddReply(u</highlight><highlight class="stringliteral">&quot;Joe<sp/>Bloggs&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;J.B.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>(),<sp/>u</highlight><highlight class="stringliteral">&quot;Another<sp/>reply&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>comment-&gt;get_Replies()-&gt;LINQ_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>removing<sp/>replies<sp/>from<sp/>a<sp/>comment.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Use<sp/>the<sp/>&quot;RemoveReply&quot;<sp/>method<sp/>to<sp/>remove<sp/>replies<sp/>from<sp/>a<sp/>comment<sp/>individually:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">comment-&gt;RemoveReply(comment-&gt;get_Replies()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>comment-&gt;get_Replies()-&gt;LINQ_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Use<sp/>the<sp/>&quot;RemoveAllReplies&quot;<sp/>method<sp/>to<sp/>remove<sp/>all<sp/>replies<sp/>from<sp/>a<sp/>comment<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">comment-&gt;RemoveAllReplies();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>comment-&gt;get_Replies()-&gt;LINQ_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/CommentCollection.h" line="115" column="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides typed access to a collection of <ref refid="class_aspose_1_1_words_1_1_comment" kindref="compound">Comment</ref> nodes. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to mark a comment as &quot;done&quot;. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Helo<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>comment<sp/>to<sp/>point<sp/>out<sp/>an<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>comment<sp/>=<sp/>MakeObject&lt;Comment&gt;(doc,<sp/>u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;J.D.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">comment-&gt;SetText(u</highlight><highlight class="stringliteral">&quot;Fix<sp/>the<sp/>spelling<sp/>error!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(comment);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comments<sp/>have<sp/>a<sp/>&quot;Done&quot;<sp/>flag,<sp/>which<sp/>is<sp/>set<sp/>to<sp/>&quot;false&quot;<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>comment<sp/>suggests<sp/>that<sp/>we<sp/>make<sp/>a<sp/>change<sp/>within<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>apply<sp/>the<sp/>change,<sp/>and<sp/>then<sp/>also<sp/>set<sp/>the<sp/>&quot;Done&quot;<sp/>flag<sp/>afterwards<sp/>to<sp/>indicate<sp/>the<sp/>correction.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(comment-&gt;get_Done());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">comment-&gt;set_Done(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comments<sp/>that<sp/>are<sp/>&quot;done&quot;<sp/>will<sp/>differentiate<sp/>themselves</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>ones<sp/>that<sp/>are<sp/>not<sp/>&quot;done&quot;<sp/>with<sp/>a<sp/>faded<sp/>text<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">comment<sp/>=<sp/>MakeObject&lt;Comment&gt;(doc,<sp/>u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;J.D.&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">comment-&gt;SetText(u</highlight><highlight class="stringliteral">&quot;Add<sp/>text<sp/>to<sp/>this<sp/>paragraph.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CurrentParagraph()-&gt;AppendChild(comment);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Comment.Done.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::CommentCollection</label>
        <link refid="class_aspose_1_1_words_1_1_comment_collection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Aspose::Words::INodeCollection</label>
      </node>
      <node id="2">
        <label>Aspose::Words::NodeCollection</label>
        <link refid="class_aspose_1_1_words_1_1_node_collection"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Node &gt; &gt;</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::CommentCollection</label>
        <link refid="class_aspose_1_1_words_1_1_comment_collection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Aspose::Words::INodeCollection</label>
      </node>
      <node id="2">
        <label>Aspose::Words::NodeCollection</label>
        <link refid="class_aspose_1_1_words_1_1_node_collection"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Node &gt; &gt;</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/CommentCollection.h" line="63" column="1" bodyfile="Aspose.Words.Cpp/CommentCollection.h" bodystart="64" bodyend="121"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a068f070b5bbd81992e895bd3a9b7a909" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>Add</name></member>
      <member refid="class_aspose_1_1_words_1_1_comment_collection_1a849d83c6083dd623746311e66e8761a5" prot="private" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a5c84bf176a96e3f048ff328ef0ef67aa" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>Clear</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1afb103bc9c0ef36a0593141c957dec4ad" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>Contains</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a08e6dd6c87c6f40972781651e176742a" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>get_Count</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a8d9e67dd4a36be575fdce2a6802cb917" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>GetEnumerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_comment_collection_1a137bac0781f49a216956f10f2e90d963" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>idx_get</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a99ff7fa6245f5be6b1830877cc6e641c" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>IndexOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1ae0e08870652837402e08e2e56647795c" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>Insert</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a86977ff4ddee5f0781a774868b8ad5a8" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a9c1ce160d192c038c1e740c3ddc309eb" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>RemoveAt</name></member>
      <member refid="class_aspose_1_1_words_1_1_comment_collection_1a033a20c6773eb5542d3bc3f244262b7f" prot="private" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_comment_collection_1ac85f7d6e878e89e5b5cec3e0a463216c" prot="private" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_comment_collection_1ac667ba90e7ece1f06b06826cc4488dff" prot="private" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_collection_1a468767664c9faee9f914a1620525f7c4" prot="public" virt="non-virtual"><scope>Aspose::Words::CommentCollection</scope><name>ToArray</name></member>
      <member refid="class_aspose_1_1_words_1_1_comment_collection_1a37f50db0e6b54eae68dd5338fe5cc3f6" prot="private" virt="virtual"><scope>Aspose::Words::CommentCollection</scope><name>~CommentCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
