<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::BuildingBlocks::BuildingBlock</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_composite_node" prot="public" virt="non-virtual">Aspose::Words::CompositeNode</basecompoundref>
    <includes refid="_building_block_8h" local="no">Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb84760a8db3bbaa8666cb0f5e16ac9b" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_composite_node" kindref="compound">Aspose::Words::CompositeNode</ref></type>
        <definition>typedef Aspose::Words::CompositeNode Aspose::Words::BuildingBlocks::BuildingBlock::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="157" column="42" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1adf912974d82e2157c3f0e6416d7592db" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref></type>
        <definition>typedef BuildingBlock Aspose::Words::BuildingBlocks::BuildingBlock::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="156" column="27" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae1b1c6067a8eb7d9893239b53859ff5f" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_composite_node" kindref="compound">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::BuildingBlocks::BuildingBlock::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="159" column="37" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a62d6b271e90d647ad5bfea3220817dc1" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1506" column="20" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a268c81502fa8dfecc04a07d0f5a42bc7" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::BuildingBlocks::BuildingBlock::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1507" column="23" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae0877c005333c140fcc6803e9ab3182d" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.guid/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid</ref></type>
        <definition>System::Guid Aspose::Words::BuildingBlocks::BuildingBlock::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1508" column="18" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a50f442cd9bc5f766e4fa5e30866f2f72" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1509" column="20" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae7b335d94d36dc52eb9082a6dc1db0d8" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::BuildingBlocks::BuildingBlock::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1510" column="23" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae97ec0c801c4a4d260f162c55b4910d8" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1511" column="20" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7e8d94987acec83bc2d32ca847947119" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::BuildingBlocks::BuildingBlock::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1512" column="23" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a381bca33811115322dbb650d35c2794e" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1513" column="20" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a2b996e2c2fb90dacf59a436d89337b22" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::BuildingBlocks::BuildingBlock::mField8</definition>
        <argsstring></argsstring>
        <name>mField8</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1514" column="23" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1514" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a91cb875116344301493acc39f67148c3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::BuildingBlocks::BuildingBlock::mField9</definition>
        <argsstring></argsstring>
        <name>mField9</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::mField9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1515" column="23" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="1515" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ac89ba48061bf11111c53da76bfa54e23" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::BuildingBlocks::BuildingBlock::~BuildingBlock</definition>
        <argsstring>()</argsstring>
        <name>~BuildingBlock</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::~BuildingBlock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1502" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9dccde48fb4766f57c7fe9f07618e7cb" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member">Aspose::Words::VisitorAction</ref></type>
        <definition>Aspose::Words::VisitorAction Aspose::Words::BuildingBlocks::BuildingBlock::AcceptEnd</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt;) override</argsstring>
        <name>AcceptEnd</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::AcceptEnd</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1acfce958aecccd97d02b9ce640c71adb0">AcceptEnd</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1498" column="37"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1abc1f54e37f5170f6347a28f7b531f4a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member">Aspose::Words::VisitorAction</ref></type>
        <definition>Aspose::Words::VisitorAction Aspose::Words::BuildingBlocks::BuildingBlock::AcceptStart</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt;) override</argsstring>
        <name>AcceptStart</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::AcceptStart</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1a4161179423c4ab1bd74fe8825dc06e2f">AcceptStart</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1497" column="37"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab9e6bdb534bcce437fac2f06df7f7b65" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::BuildingBlocks::BuildingBlock::CanInsert</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Node &gt;) override</argsstring>
        <name>CanInsert</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::CanInsert</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1a06d62fddfb918b33b307b9201c7951aa">CanInsert</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1500" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ad0ccc346f2673f4847663613a27e3b56" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Node &gt; Aspose::Words::BuildingBlocks::BuildingBlock::Clone</definition>
        <argsstring>(bool, System::SharedPtr&lt; Aspose::Words::INodeCloningListener &gt;) override</argsstring>
        <name>Clone</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::Clone</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a53bf7103c6ec9da7872f99f68ef13ae4">Clone</reimplements>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::INodeCloningListener &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1499" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1586c6f1e06d927658b4cc502cf1d15e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">ThisType</ref> *</type>
        <definition>ThisType * Aspose::Words::BuildingBlocks::BuildingBlock::CppMemberwiseClone</definition>
        <argsstring>() const override</argsstring>
        <name>CppMemberwiseClone</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::CppMemberwiseClone</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a9358fb4208d077e8411fdf0d4e8553e5">CppMemberwiseClone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1517" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a35139aa208ffe14db74fa6b82872db10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::BuildingBlocks::BuildingBlock::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="160" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1b6dd4af7e41b29e98591e6c61201056" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::BuildingBlocks::BuildingBlock::BuildingBlock</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::BuildingBlocks::GlossaryDocument &gt; &amp;glossaryDoc)</argsstring>
        <name>BuildingBlock</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::BuildingBlock</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_glossary_document" kindref="compound">Aspose::Words::BuildingBlocks::GlossaryDocument</ref> &gt; &amp;</type>
          <declname>glossaryDoc</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of this class. </para>
        </briefdescription>
        <detaileddescription>
<para>When <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref> is created, it belongs to the specified glossary document, but is not yet part of the glossary document and <ref refid="class_aspose_1_1_words_1_1_node_1ab9e608488885c65a2a165dea6645d15e" kindref="member">ParentNode</ref> is <computeroutput>null</computeroutput>.</para>
<para>To append <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref> to a <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_glossary_document" kindref="compound">GlossaryDocument</ref> use <ref refid="" kindref="compound">AppendChild()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glossaryDoc</parametername>
</parameternamelist>
<parameterdescription>
<para>The owner document.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1377" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab96d89583f307042df057c22170409d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::BuildingBlocks::BuildingBlock::Accept</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt; visitor) override</argsstring>
        <name>Accept</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::Accept</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a556472e35a86820cf189f10594933f3e">Accept</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Accepts a visitor. </para>
        </briefdescription>
        <detaileddescription>
<para>Enumerates over this node and all of its children. Each node calls a corresponding method on <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">DocumentVisitor</ref>.</para>
<para>For more info see the Visitor design pattern.</para>
<para>Calls <ref refid="" kindref="compound">VisitBuildingBlockStart()</ref>, then calls <ref refid="class_aspose_1_1_words_1_1_node_1a556472e35a86820cf189f10594933f3e" kindref="member">Accept()</ref> for all child nodes of this building block, then calls <ref refid="" kindref="compound">VisitBuildingBlockEnd()</ref>.</para>
<para>Note: A building block node and its children are not visited when you execute a Visitor over a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref>. If you want to execute a Visitor over a building block, you need to execute the visitor over <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_glossary_document" kindref="compound">GlossaryDocument</ref> or call <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab96d89583f307042df057c22170409d6" kindref="member">Accept()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The visitor that will visit the nodes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if all nodes were visited; false if <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">DocumentVisitor</ref> stopped the operation before visiting all nodes.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1493" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a99b35759baf3f78b4a76307bcd40232a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlockBehavior</ref></type>
        <definition>Aspose::Words::BuildingBlocks::BuildingBlockBehavior Aspose::Words::BuildingBlocks::BuildingBlock::get_Behavior</definition>
        <argsstring>() const</argsstring>
        <name>get_Behavior</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Behavior</qualifiedname>
        <briefdescription>
<para>Specifies the behavior that shall be applied when the contents of the building block is inserted into the main document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1160" column="61"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::get_Category</definition>
        <argsstring>() const</argsstring>
        <name>get_Category</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Category</qualifiedname>
        <briefdescription>
<para>Specifies the second-level categorization for the building block. </para>
        </briefdescription>
        <detaileddescription>
<para>Building blocks in Microsoft Word user interface are arranged into Galleries. Each <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" kindref="member">Gallery</ref> can have multiple Categories. Each block within a <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" kindref="member">Category</ref> has a <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" kindref="member">Name</ref>.</para>
<para>Cannot be <computeroutput>null</computeroutput> and cannot be an empty string.</para>
<para>Corresponds to the <bold>docPartPr.category.name</bold> element in OOXML.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Gallery</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Name</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1057" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ac598bc76e2e09bd0758204a8293f55db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::get_Description</definition>
        <argsstring>() const</argsstring>
        <name>get_Description</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Description</qualifiedname>
        <briefdescription>
<para>Gets or sets the description associated with this building block. </para>
        </briefdescription>
        <detaileddescription>
<para>The description may contain any string content, usually additional information.</para>
<para>Cannot be <computeroutput>null</computeroutput>, but can be an empty string.</para>
<para>Corresponds to the <bold>docPartPr.description</bold> element in OOXML.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="832" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a2e37c55befdae7d76f78183ec4e8caa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_section" kindref="compound">Aspose::Words::Section</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Section &gt; Aspose::Words::BuildingBlocks::BuildingBlock::get_FirstSection</definition>
        <argsstring>()</argsstring>
        <name>get_FirstSection</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_FirstSection</qualifiedname>
        <briefdescription>
<para>Gets the first section in the building block. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="409" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlockGallery</ref></type>
        <definition>Aspose::Words::BuildingBlocks::BuildingBlockGallery Aspose::Words::BuildingBlocks::BuildingBlock::get_Gallery</definition>
        <argsstring>() const</argsstring>
        <name>get_Gallery</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Gallery</qualifiedname>
        <briefdescription>
<para>Specifies the first-level categorization for the building block for the purposes of classification or user interface sorting. </para>
        </briefdescription>
        <detaileddescription>
<para>Building blocks in Microsoft Word user interface are arranged into Galleries. Each <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" kindref="member">Gallery</ref> can have multiple Categories. Each block within a <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" kindref="member">Category</ref> has a <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" kindref="member">Name</ref>.</para>
<para>Corresponds to the <bold>docPartPr.category.gallery</bold> element in OOXML.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Category</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Name</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="944" column="60"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1368ac3648f09d05d67c20c63621e80c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.guid/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid</ref></type>
        <definition>System::Guid Aspose::Words::BuildingBlocks::BuildingBlock::get_Guid</definition>
        <argsstring>() const</argsstring>
        <name>get_Guid</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Guid</qualifiedname>
        <briefdescription>
<para>Gets or sets an identifier (a 128-bit GUID) that uniquely identifies this building block. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be used by an application to uniquely reference a building block regardless of different naming due to localization.</para>
<para>Corresponds to the <bold>docPartPr.guid</bold> element in OOXML.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="724" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a05c610a48e5f84b12160a992fb9bdfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_section" kindref="compound">Aspose::Words::Section</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Section &gt; Aspose::Words::BuildingBlocks::BuildingBlock::get_LastSection</definition>
        <argsstring>()</argsstring>
        <name>get_LastSection</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_LastSection</qualifiedname>
        <briefdescription>
<para>Gets the last section in the building block. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="508" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::BuildingBlocks::BuildingBlock::get_Name</definition>
        <argsstring>() const</argsstring>
        <name>get_Name</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Name</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of this building block. </para>
        </briefdescription>
        <detaileddescription>
<para>The name may contain any string content, usually a friendly identifier. Multiple building blocks can have the same name.</para>
<para>Cannot be <computeroutput>null</computeroutput> and cannot be an empty string.</para>
<para>Corresponds to the <bold>docPartPr.name</bold> element in OOXML.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Gallery</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Category</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="617" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae24368a8daeeb5bdf53f99b4a7607eed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379" kindref="member">Aspose::Words::NodeType</ref></type>
        <definition>Aspose::Words::NodeType Aspose::Words::BuildingBlocks::BuildingBlock::get_NodeType</definition>
        <argsstring>() const override</argsstring>
        <name>get_NodeType</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_NodeType</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a7f80e8d96b7a072fca14157b25ae025e">get_NodeType</reimplements>
        <briefdescription>
<para>Returns the <ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a846dc53a0b4b06de2cfd1c705dfff289" kindref="member">BuildingBlock</ref> value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to traverse a composite node&apos;s tree of child nodes. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RecurseChildren()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>node<sp/>that<sp/>can<sp/>contain<sp/>child<sp/>nodes,<sp/>such<sp/>as<sp/>the<sp/>document<sp/>itself,<sp/>is<sp/>composite.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(doc-&gt;get_IsComposite());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>the<sp/>recursive<sp/>function<sp/>that<sp/>will<sp/>go<sp/>through<sp/>and<sp/>print<sp/>all<sp/>the<sp/>child<sp/>nodes<sp/>of<sp/>a<sp/>composite<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TraverseAllNodes(doc,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TraverseAllNodes(SharedPtr&lt;CompositeNode&gt;<sp/>parentNode,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(SharedPtr&lt;Node&gt;<sp/>childNode<sp/>=<sp/>parentNode-&gt;get_FirstChild();<sp/>childNode<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/>childNode<sp/>=<sp/>childNode-&gt;get_NextSibling())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">,<sp/>depth))<sp/>&lt;&lt;<sp/><ref refid="class_aspose_1_1_words_1_1_node_1a0e46189d6dfa7a81c8fa2e2bd2354d61" kindref="member" tooltip="A utility method that converts a node type enum value into a user friendly string.">Node::NodeTypeToString</ref>(childNode-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recurse<sp/>into<sp/>the<sp/>node<sp/>if<sp/>it<sp/>is<sp/>a<sp/>composite<sp/>node.<sp/>Otherwise,<sp/>print<sp/>its<sp/>contents<sp/>if<sp/>it<sp/>is<sp/>an<sp/>inline<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(childNode-&gt;get_IsComposite())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TraverseAllNodes(System::DynamicCast&lt;CompositeNode&gt;(childNode),<sp/>depth<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(System::ObjectExt::Is&lt;Inline&gt;(childNode))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>childNode-&gt;GetText().Trim()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="211" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae0c03649bbdf36ea99dc5498766c26ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_section_collection" kindref="compound">Aspose::Words::SectionCollection</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::SectionCollection &gt; Aspose::Words::BuildingBlocks::BuildingBlock::get_Sections</definition>
        <argsstring>()</argsstring>
        <name>get_Sections</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Sections</qualifiedname>
        <briefdescription>
<para>Returns a collection that represents all sections in the building block. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="310" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a997426fcf931ac52bce97d5f74a70121" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eae" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlockType</ref></type>
        <definition>Aspose::Words::BuildingBlocks::BuildingBlockType Aspose::Words::BuildingBlocks::BuildingBlock::get_Type</definition>
        <argsstring>() const</argsstring>
        <name>get_Type</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::get_Type</qualifiedname>
        <briefdescription>
<para>Specifies the building block type. </para>
        </briefdescription>
        <detaileddescription>
<para>The building block type can influence the visibility and behavior of the building block in Microsoft Word.</para>
<para>Corresponds to the <bold>docPartPr.types</bold> element in OOXML.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1267" column="57"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a65aa55d702f98a69a79efed83177455d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Behavior</definition>
        <argsstring>(Aspose::Words::BuildingBlocks::BuildingBlockBehavior value)</argsstring>
        <name>set_Behavior</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Behavior</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlockBehavior</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a99b35759baf3f78b4a76307bcd40232a" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Behavior</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1163" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a4f6c929e23a1a49032bbddc59172baa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Category</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Category</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Category</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Category</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1060" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aa561b9817ed18bad63558308c9fbf10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Description</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Description</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Description</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ac598bc76e2e09bd0758204a8293f55db" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Description</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="835" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a51d70c864c1a305a3ef15e93dab6b9ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Gallery</definition>
        <argsstring>(Aspose::Words::BuildingBlocks::BuildingBlockGallery value)</argsstring>
        <name>set_Gallery</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Gallery</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlockGallery</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Gallery</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="947" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a2da7ccf679d557ddce617b65ae83e00e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Guid</definition>
        <argsstring>(System::Guid value)</argsstring>
        <name>set_Guid</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Guid</qualifiedname>
        <param>
          <type><ref refid="class/system.guid/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1368ac3648f09d05d67c20c63621e80c" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Guid</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="727" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1830e8d789948ecdd0dcc4a871eee9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Name</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Name</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Name</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Name</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="620" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab50b6b1a5436b3069e3aee96e701127a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::BuildingBlocks::BuildingBlock::set_Type</definition>
        <argsstring>(Aspose::Words::BuildingBlocks::BuildingBlockType value)</argsstring>
        <name>set_Type</name>
        <qualifiedname>Aspose::Words::BuildingBlocks::BuildingBlock::set_Type</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eae" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlockType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a997426fcf931ac52bce97d5f74a70121" kindref="member">Aspose::Words::BuildingBlocks::BuildingBlock::get_Type</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="1270" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a glossary document entry such as a Building Block, AutoText or an AutoCorrect entry. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref> can contain only <ref refid="class_aspose_1_1_words_1_1_section" kindref="compound">Section</ref> nodes.</para>
<para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref> can only be a child of <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_glossary_document" kindref="compound">GlossaryDocument</ref>.</para>
<para>You can create new building blocks and insert them into a glossary document. You can modify or delete existing building blocks. You can copy or move building blocks between documents. You can insert content of a building block into a document.</para>
<para>Corresponds to the <bold>docPart</bold>, <bold>docPartPr</bold> and <bold>docPartBody</bold> elements in OOXML.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_glossary_document" kindref="compound">Aspose::Words::BuildingBlocks::GlossaryDocument</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a custom building block to a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateAndInsert()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>document&apos;s<sp/>glossary<sp/>document<sp/>stores<sp/>building<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>glossaryDoc<sp/>=<sp/>MakeObject&lt;GlossaryDocument&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_GlossaryDocument(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block,<sp/>name<sp/>it,<sp/>and<sp/>then<sp/>add<sp/>it<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>block<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>glossaryDoc-&gt;AppendChild(block);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>new<sp/>building<sp/>block<sp/>GUIDs<sp/>have<sp/>the<sp/>same<sp/>zero<sp/>value<sp/>by<sp/>default,<sp/>and<sp/>we<sp/>can<sp/>give<sp/>them<sp/>a<sp/>new<sp/>unique<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;00000000-0000-0000-0000-000000000000&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(block-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;set_Guid(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>properties<sp/>categorize<sp/>building<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>menu<sp/>we<sp/>can<sp/>access<sp/>in<sp/>Microsoft<sp/>Word<sp/>via<sp/>&quot;Insert&quot;<sp/>-&gt;<sp/>&quot;Quick<sp/>Parts&quot;<sp/>-&gt;<sp/>&quot;Building<sp/>Blocks<sp/>Organizer&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;(Empty<sp/>Category)&quot;</highlight><highlight class="normal">,<sp/>block-&gt;get_Category());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a4e90f5cd1592c29225630c831f035eaea6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="No type information is specified for the building block.">BuildingBlockType::None</ref>,<sp/>block-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">BuildingBlockGallery::All</ref>,<sp/>block-&gt;get_Gallery());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">BuildingBlockBehavior::Content</ref>,<sp/>block-&gt;get_Behavior());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>we<sp/>can<sp/>add<sp/>this<sp/>building<sp/>block<sp/>to<sp/>our<sp/>document,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>give<sp/>it<sp/>some<sp/>contents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>we<sp/>will<sp/>do<sp/>using<sp/>a<sp/>document<sp/>visitor.<sp/>This<sp/>visitor<sp/>will<sp/>also<sp/>set<sp/>a<sp/>category,<sp/>gallery,<sp/>and<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExBuildingBlocks::BuildingBlockVisitor&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>block<sp/>that<sp/>we<sp/>just<sp/>made<sp/>from<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuildingBlock&gt;<sp/>customBlock<sp/>=<sp/>glossaryDoc-&gt;GetBuildingBlock(<ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08aab6f92d73a7df27f0c99d4146c4107d2" kindref="member">BuildingBlockGallery::QuickParts</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>block<sp/>itself<sp/>is<sp/>a<sp/>section<sp/>that<sp/>contains<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>{0}\f&quot;</highlight><highlight class="normal">,<sp/>customBlock-&gt;get_Name()),<sp/>customBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(customBlock-&gt;get_FirstSection(),<sp/>customBlock-&gt;get_LastSection());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;void()&gt;<sp/>parseGuid<sp/>=<sp/>[&amp;customBlock]()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.guid/_1a514508d9dd63f7eeb65ae305493f2411" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Guid::Parse</ref>(<ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(customBlock-&gt;get_Guid()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>we<sp/>can<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>as<sp/>a<sp/>new<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;AppendChild(doc-&gt;ImportNode(customBlock-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>find<sp/>it<sp/>in<sp/>Microsoft<sp/>Word&apos;s<sp/>Building<sp/>Blocks<sp/>Organizer<sp/>and<sp/>place<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;BuildingBlocks.CreateAndInsert.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">BuildingBlockVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>BuildingBlockVisitor(SharedPtr&lt;GlossaryDocument&gt;<sp/>ownerGlossaryDoc)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGlossaryDoc<sp/>=<sp/>ownerGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockStart(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>building<sp/>block<sp/>as<sp/>a<sp/>quick<sp/>part,<sp/>and<sp/>add<sp/>properties<sp/>used<sp/>by<sp/>Building<sp/>Blocks<sp/>Organizer.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>custom<sp/>building<sp/>blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;Using<sp/>this<sp/>block<sp/>in<sp/>the<sp/>Quick<sp/>Parts<sp/>section<sp/>of<sp/>word<sp/>will<sp/>place<sp/>its<sp/>contents<sp/>at<sp/>the<sp/>cursor.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;set_Gallery(BuildingBlockGallery::QuickParts);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>section<sp/>with<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>the<sp/>block<sp/>into<sp/>the<sp/>document<sp/>will<sp/>append<sp/>this<sp/>section<sp/>with<sp/>its<sp/>child<sp/>nodes<sp/>at<sp/>the<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>section<sp/>=<sp/>MakeObject&lt;Section&gt;(mGlossaryDoc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;AppendChild(section);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>MakeObject&lt;Run&gt;(mGlossaryDoc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Text<sp/>inside<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(run);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitBuildingBlockEnd(SharedPtr&lt;BuildingBlock&gt;<sp/>block)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Visited<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>block-&gt;get_Name()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;GlossaryDocument&gt;<sp/>mGlossaryDoc;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::BuildingBlocks::BuildingBlock</label>
        <link refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::CompositeNode</label>
        <link refid="class_aspose_1_1_words_1_1_composite_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Aspose::Words::INodeCollection</label>
      </node>
      <node id="3">
        <label>Aspose::Words::Node</label>
        <link refid="class_aspose_1_1_words_1_1_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Node &gt; &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::BuildingBlocks::BuildingBlock</label>
        <link refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::CompositeNode</label>
        <link refid="class_aspose_1_1_words_1_1_composite_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Aspose::Words::INodeCollection</label>
      </node>
      <node id="3">
        <label>Aspose::Words::Node</label>
        <link refid="class_aspose_1_1_words_1_1_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Node &gt; &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" line="154" column="1" bodyfile="Aspose.Words.Cpp/BuildingBlocks/BuildingBlock.h" bodystart="155" bodyend="1519"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab96d89583f307042df057c22170409d6" prot="public" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>Accept</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9dccde48fb4766f57c7fe9f07618e7cb" prot="private" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>AcceptEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1abc1f54e37f5170f6347a28f7b531f4a1" prot="private" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>AcceptStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1af74bc4213aebbe5fd01d2fc0f08b2bec" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>AppendChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb84760a8db3bbaa8666cb0f5e16ac9b" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1b6dd4af7e41b29e98591e6c61201056" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>BuildingBlock</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab9e6bdb534bcce437fac2f06df7f7b65" prot="private" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>CanInsert</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ad0ccc346f2673f4847663613a27e3b56" prot="private" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>Clone</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a81dedd9b241b09760112b5e5068f1daa" prot="public" virt="non-virtual" ambiguityscope="Aspose::Words::Node::"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>Clone</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1586c6f1e06d927658b4cc502cf1d15e" prot="private" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>CppMemberwiseClone</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a99b35759baf3f78b4a76307bcd40232a" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Behavior</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aeb59d3db3ca8bece9f992de660f986ad" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Category</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a98d9935dcf818989566431ab3b75bbed" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_ChildNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a801d3d549eb73e216df5b7a64d9e1c68" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Count</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a941120df17372b25f9a7127a9d9b3816" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_CustomNodeId</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ac598bc76e2e09bd0758204a8293f55db" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Description</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a2a69f84e3ccd323199299c999ab32d46" prot="public" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Document</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a052d0e4560975f6c19c77bf19d82eedf" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_FirstChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a2e37c55befdae7d76f78183ec4e8caa7" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_FirstSection</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7808353bb18b44d37b463f9df7111364" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Gallery</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1368ac3648f09d05d67c20c63621e80c" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Guid</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a4b939686e9a6a245a31cf392d202316d" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_HasChildNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a96cf2dd90a284fe9939d1d90780d2d4b" prot="public" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_IsComposite</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a58fae512d8549219b7c3a17ef2d46439" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_LastChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a05c610a48e5f84b12160a992fb9bdfba" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_LastSection</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Name</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a938ff32d060619d89ecefdf57984abf8" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_NextSibling</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae24368a8daeeb5bdf53f99b4a7607eed" prot="public" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_NodeType</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ab9e608488885c65a2a165dea6645d15e" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_ParentNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a6013fe75e5859c54d12a87f9b97fa7f3" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_PreviousSibling</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0f8077bf80409ba331148095b95bc3e5" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Range</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae0c03649bbdf36ea99dc5498766c26ac" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Sections</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a997426fcf931ac52bce97d5f74a70121" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a951706cfa681573e79a56204a2029e9e" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>GetAncestor</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ae19991f4d5aa7ccb60ce6d7207495f1c" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>GetAncestorOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a6d961b080681f8dc6ee551c6c0ce44da" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>GetChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1ae1fc746cc70cea4c9ab30caf39aec146" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>GetChildNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a6d3cc4280067e07fd504c11e6c968419" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>GetEnumerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a08b4d2cc617495b60d85a550422e2d8f" prot="public" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>GetText</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1ac0cfce6ca5295fe714f5da1e8e244d9e" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>IndexOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a2b6e91eabfc75b02062ae6714cd95ec2" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>InsertAfter</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a247cedb3f1fe5474c87f5b5fa0dcd995" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>InsertBefore</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a62d6b271e90d647ad5bfea3220817dc1" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a268c81502fa8dfecc04a07d0f5a42bc7" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae0877c005333c140fcc6803e9ab3182d" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a50f442cd9bc5f766e4fa5e30866f2f72" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae7b335d94d36dc52eb9082a6dc1db0d8" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae97ec0c801c4a4d260f162c55b4910d8" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a7e8d94987acec83bc2d32ca847947119" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a381bca33811115322dbb650d35c2794e" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a2b996e2c2fb90dacf59a436d89337b22" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField8</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a91cb875116344301493acc39f67148c3" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>mField9</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a4f6979e06a5914aeb37a9cb8448658a6" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>NextPreOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0e46189d6dfa7a81c8fa2e2bd2354d61" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>NodeTypeToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1abae3ff6d970ba209cf4eb1c539b205ee" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>PrependChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1af40f9573daf950d978d211d3e75c6a95" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>PreviousPreOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a75a9cc0fda5ec9c8aaa1c4910af8f28c" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a4afce861f4df13714988e44419374f21" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>RemoveAllChildren</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a28888dd687866f66b3bb221e63b5063c" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>RemoveChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a5a00bfd5d2e04d5752d96e226a3f5849" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>RemoveSmartTags</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a35139aa208ffe14db74fa6b82872db10" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a553923ba5225bd3d28f1960b72b45f4f" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>SelectNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1aa2eb340deba06c3dcb7cc29dfeca5a99" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>SelectSingleNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a65aa55d702f98a69a79efed83177455d" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Behavior</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a4f6c929e23a1a49032bbddc59172baa7" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Category</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0d412cc05de7836acb92332e55eea267" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_CustomNodeId</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1aa561b9817ed18bad63558308c9fbf10c" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Description</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a51d70c864c1a305a3ef15e93dab6b9ad" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Gallery</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a2da7ccf679d557ddce617b65ae83e00e" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Guid</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a1830e8d789948ecdd0dcc4a871eee9ae" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Name</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ab50b6b1a5436b3069e3aee96e701127a" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>set_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a29e186f28a68773c7c7679079c77d827" prot="public" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>SetTemplateWeakPtr</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1adf912974d82e2157c3f0e6416d7592db" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ae1b1c6067a8eb7d9893239b53859ff5f" prot="private" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1af7aa71ab5f185ee2463406dab7727595" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ad18f64c5586b84a071957824b24426a2" prot="public" virt="non-virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1ac89ba48061bf11111c53da76bfa54e23" prot="private" virt="virtual"><scope>Aspose::Words::BuildingBlocks::BuildingBlock</scope><name>~BuildingBlock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
