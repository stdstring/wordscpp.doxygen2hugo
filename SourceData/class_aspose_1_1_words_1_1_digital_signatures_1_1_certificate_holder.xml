<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::DigitalSignatures::CertificateHolder</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_certificate_holder_8h" local="no">Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1aa30da12084f41ac64cdcafaa38db3910" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::DigitalSignatures::CertificateHolder::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="223" column="28" bodyfile="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a1f05ff8d2e0cbac2f88bba729dcd368e" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref></type>
        <definition>typedef CertificateHolder Aspose::Words::DigitalSignatures::CertificateHolder::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="222" column="31" bodyfile="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a6776fd9da387f021f4879dc386001fee" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::DigitalSignatures::CertificateHolder::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="225" column="37" bodyfile="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a21f77bbf67100459f3c8b8aeb831f46a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::DigitalSignatures::CertificateHolder::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="336" column="23" bodyfile="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a3c0b3728922409dc01660407523f0cbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::DigitalSignatures::CertificateHolder::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="226" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a56c1f1e0b553a943aff9110e8cf33b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.security.cryptography.x509_certificates.x509_certificate2/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Security::Cryptography::X509Certificates::X509Certificate2</ref> &gt;</type>
        <definition>System::SharedPtr&lt; System::Security::Cryptography::X509Certificates::X509Certificate2 &gt; Aspose::Words::DigitalSignatures::CertificateHolder::get_Certificate</definition>
        <argsstring>()</argsstring>
        <name>get_Certificate</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::get_Certificate</qualifiedname>
        <briefdescription>
<para>Returns the instance of <bold>X509Certificate2</bold> which holds private, public keys and certificate chain. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="class/system.security.cryptography.x509_certificates.x509_certificate2/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">X509Certificate2</ref> instance</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to validate and display information about each signature in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Digitally<sp/>signed.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>signature<sp/>:<sp/>doc-&gt;get_DigitalSignatures())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(signature-&gt;get_IsValid()<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Valid&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Invalid&quot;</highlight><highlight class="normal">))<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>signature:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tReason:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>signature-&gt;get_Comments()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tType:\t{0}&quot;</highlight><highlight class="normal">,<sp/>signature-&gt;get_SignatureType())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tSign<sp/>time:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>signature-&gt;get_SignTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tSubject<sp/>name:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>signature-&gt;get_CertificateHolder()-&gt;get_Certificate()-&gt;get_SubjectName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tIssuer<sp/>name:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>signature-&gt;get_CertificateHolder()-&gt;get_Certificate()-&gt;get_IssuerName()-&gt;get_Name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="252" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a0fd6423e6d95a9b92a170da169d3fa25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">Aspose::Words::DigitalSignatures::CertificateHolder</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::DigitalSignatures::CertificateHolder &gt; Aspose::Words::DigitalSignatures::CertificateHolder::Create</definition>
        <argsstring>(const System::ArrayPtr&lt; uint8_t &gt; &amp;certBytes, const System::SharedPtr&lt; System::Security::SecureString &gt; &amp;password)</argsstring>
        <name>Create</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::Create</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>certBytes</declname>
        </param>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.security.secure_string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Security::SecureString</ref> &gt; &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Creates <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref> object using byte array of PKCS12 store and its password. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>certBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>A byte array that contains data from an X.509 certificate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password required to access the X.509 certificate data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>certBytes</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>password</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::Security::SecurityException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if PKCS12 store contains no aliases </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::IO::IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is wrong password or corrupted file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="265" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a5c60a1b2bf9efbbefd3e108ffef076c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">Aspose::Words::DigitalSignatures::CertificateHolder</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::DigitalSignatures::CertificateHolder &gt; Aspose::Words::DigitalSignatures::CertificateHolder::Create</definition>
        <argsstring>(const System::ArrayPtr&lt; uint8_t &gt; &amp;certBytes, const System::String &amp;password)</argsstring>
        <name>Create</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::Create</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>certBytes</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Creates <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref> object using byte array of PKCS12 store and its password. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>certBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>A byte array that contains data from an X.509 certificate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password required to access the X.509 certificate data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>certBytes</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>password</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::Security::SecurityException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if PKCS12 store contains no aliases </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::IO::IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is wrong password or corrupted file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="278" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1ae03ed8c6a1b8ffcf9ea1aef4d699b3b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">Aspose::Words::DigitalSignatures::CertificateHolder</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::DigitalSignatures::CertificateHolder &gt; Aspose::Words::DigitalSignatures::CertificateHolder::Create</definition>
        <argsstring>(const System::String &amp;fileName, const System::String &amp;password)</argsstring>
        <name>Create</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::Create</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Creates <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref> object using path to PKCS12 store and its password. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of a certificate file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password required to access the X.509 certificate data.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>fileName</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>password</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::Security::SecurityException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if PKCS12 store contains no aliases </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::IO::IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is wrong password or corrupted file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to digitally sign documents. <programlisting><codeline><highlight class="comment">//<sp/>Create<sp/>an<sp/>X.509<sp/>certificate<sp/>from<sp/>a<sp/>PKCS#12<sp/>store,<sp/>which<sp/>should<sp/>contain<sp/>a<sp/>private<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a0fd6423e6d95a9b92a170da169d3fa25" kindref="member" tooltip="Creates CertificateHolder object using byte array of PKCS12 store and its password.">CertificateHolder::Create</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>comment<sp/>and<sp/>date<sp/>which<sp/>will<sp/>be<sp/>applied<sp/>with<sp/>our<sp/>new<sp/>digital<sp/>signature.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_Comments(u</highlight><highlight class="stringliteral">&quot;My<sp/>comment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Take<sp/>an<sp/>unsigned<sp/>document<sp/>from<sp/>the<sp/>local<sp/>file<sp/>system<sp/>via<sp/>a<sp/>file<sp/>stream,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>create<sp/>a<sp/>signed<sp/>copy<sp/>of<sp/>it<sp/>determined<sp/>by<sp/>the<sp/>filename<sp/>of<sp/>the<sp/>output<sp/>file<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>streamIn<sp/>=<sp/>MakeObject&lt;System::IO::FileStream&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>System::IO::FileMode::Open);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>streamOut<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DigitalSignatureUtil.SignDocument.docx&quot;</highlight><highlight class="normal">,<sp/>System::IO::FileMode::OpenOrCreate);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_digital_signature_util_1af869532f846e545c8cd7436d45af6530" kindref="member" tooltip="Signs source document using given CertificateHolder and SignOptions with digital signature and writes...">DigitalSignatureUtil::Sign</ref>(streamIn,<sp/>streamOut,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="315" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a3b3efb868124a5e93243157dbb2268f2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">Aspose::Words::DigitalSignatures::CertificateHolder</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::DigitalSignatures::CertificateHolder &gt; Aspose::Words::DigitalSignatures::CertificateHolder::Create</definition>
        <argsstring>(const System::String &amp;fileName, const System::String &amp;password, const System::String &amp;alias)</argsstring>
        <name>Create</name>
        <qualifiedname>Aspose::Words::DigitalSignatures::CertificateHolder::Create</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>password</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>alias</declname>
        </param>
        <briefdescription>
<para>Creates <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref> object using path to PKCS12 store, its password and the alias by using which private key and certificate will be found. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of a certificate file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password required to access the X.509 certificate data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alias</parametername>
</parameternamelist>
<parameterdescription>
<para>The associated alias for a certificate and its private key</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An instance of <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder" kindref="compound">CertificateHolder</ref></para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>fileName</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Org::BouncyCastle::Security::InvalidParameterException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if <bold>password</bold> is null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::Security::SecurityException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if PKCS12 store contains no aliases </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::IO::IOException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is wrong password or corrupted file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>System::Security::SecurityException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is no private key with the given alias </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="330" column="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a holder of <bold>X509Certificate2</bold> instance. </para>
    </briefdescription>
    <detaileddescription>
<para><bold>CertificateHolder</bold> can be created by static factory methods only. It contains an instance of <bold>X509Certificate2</bold> which is used to introduce private, public keys and certificate chains into the system. This class is applied in <ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_digital_signature_util" kindref="compound">DigitalSignatureUtil</ref> and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_pdf_digital_signature_details" kindref="compound">PdfDigitalSignatureDetails</ref> instead of obsolete methods with <ref refid="class/system.security.cryptography.x509_certificates.x509_certificate2/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">X509Certificate2</ref> as parameters.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to digitally sign documents. <programlisting><codeline><highlight class="comment">//<sp/>Create<sp/>an<sp/>X.509<sp/>certificate<sp/>from<sp/>a<sp/>PKCS#12<sp/>store,<sp/>which<sp/>should<sp/>contain<sp/>a<sp/>private<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a0fd6423e6d95a9b92a170da169d3fa25" kindref="member" tooltip="Creates CertificateHolder object using byte array of PKCS12 store and its password.">CertificateHolder::Create</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>comment<sp/>and<sp/>date<sp/>which<sp/>will<sp/>be<sp/>applied<sp/>with<sp/>our<sp/>new<sp/>digital<sp/>signature.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_Comments(u</highlight><highlight class="stringliteral">&quot;My<sp/>comment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Take<sp/>an<sp/>unsigned<sp/>document<sp/>from<sp/>the<sp/>local<sp/>file<sp/>system<sp/>via<sp/>a<sp/>file<sp/>stream,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>create<sp/>a<sp/>signed<sp/>copy<sp/>of<sp/>it<sp/>determined<sp/>by<sp/>the<sp/>filename<sp/>of<sp/>the<sp/>output<sp/>file<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>streamIn<sp/>=<sp/>MakeObject&lt;System::IO::FileStream&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>System::IO::FileMode::Open);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>streamOut<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DigitalSignatureUtil.SignDocument.docx&quot;</highlight><highlight class="normal">,<sp/>System::IO::FileMode::OpenOrCreate);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_digital_signature_util_1af869532f846e545c8cd7436d45af6530" kindref="member" tooltip="Signs source document using given CertificateHolder and SignOptions with digital signature and writes...">DigitalSignatureUtil::Sign</ref>(streamIn,<sp/>streamOut,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Shows how to sign encrypted document file. <programlisting><codeline><highlight class="comment">//<sp/>Create<sp/>an<sp/>X.509<sp/>certificate<sp/>from<sp/>a<sp/>PKCS#12<sp/>store,<sp/>which<sp/>should<sp/>contain<sp/>a<sp/>private<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a0fd6423e6d95a9b92a170da169d3fa25" kindref="member" tooltip="Creates CertificateHolder object using byte array of PKCS12 store and its password.">CertificateHolder::Create</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>comment,<sp/>date,<sp/>and<sp/>decryption<sp/>password<sp/>which<sp/>will<sp/>be<sp/>applied<sp/>with<sp/>our<sp/>new<sp/>digital<sp/>signature.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_Comments(u</highlight><highlight class="stringliteral">&quot;Comment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_DecryptionPassword(u</highlight><highlight class="stringliteral">&quot;docPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>local<sp/>system<sp/>filename<sp/>for<sp/>the<sp/>unsigned<sp/>input<sp/>document,<sp/>and<sp/>an<sp/>output<sp/>filename<sp/>for<sp/>its<sp/>new<sp/>digitally<sp/>signed<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>inputFileName<sp/>=<sp/>MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outputFileName<sp/>=<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DigitalSignatureUtil.DecryptionPassword.docx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_digital_signature_util_1af869532f846e545c8cd7436d45af6530" kindref="member" tooltip="Signs source document using given CertificateHolder and SignOptions with digital signature and writes...">DigitalSignatureUtil::Sign</ref>(inputFileName,<sp/>outputFileName,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
</programlisting></para>
<para>Shows how to add a signature line to a document, and then sign it using a digital certificate. <programlisting><codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Sign()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>signeeName<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Ron<sp/>Williams&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>srcDocumentPath<sp/>=<sp/>MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>dstDocumentPath<sp/>=<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SignDocumentCustom.Sign.docx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>certificatePath<sp/>=<sp/>MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>certificatePassword<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CreateSignees();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signeeInfo<sp/>=<sp/>mSignees-&gt;Find(<ref refid="class/system.multicast_delegate/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Predicate</ref>&lt;SharedPtr&lt;Signee&gt;&gt;([&amp;](SharedPtr&lt;Signee&gt;<sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c-&gt;get_Name()<sp/>==<sp/>signeeName;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signeeInfo<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SignDocument(srcDocumentPath,<sp/>dstDocumentPath,<sp/>signeeInfo,<sp/>certificatePath,<sp/>certificatePassword);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FAIL()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Signee<sp/>does<sp/>not<sp/>exist.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Signee<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class/system.guid/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid</ref><sp/>get_PersonId()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_PersonId;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_PersonId(<ref refid="class/system.guid/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid</ref><sp/>value)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_PersonId<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>get_Name()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_Name;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_Name(String<sp/>value)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_Name<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>get_Position()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_Position;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_Position(String<sp/>value)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_Position<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayPtr&lt;uint8_t&gt;<sp/>get_Image()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_Image;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_Image(ArrayPtr&lt;uint8_t&gt;<sp/>value)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_Image<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Signee(<ref refid="class/system.guid/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid</ref><sp/>guid,<sp/>String<sp/>name,<sp/>String<sp/>position,<sp/>ArrayPtr&lt;uint8_t&gt;<sp/>image)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_PersonId(guid);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_Name(name);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_Position(position);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_Image(image);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class/system.guid/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid</ref><sp/>pr_PersonId;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>pr_Name;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>pr_Position;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayPtr&lt;uint8_t&gt;<sp/>pr_Image;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SignDocument(String<sp/>srcDocumentPath,<sp/>String<sp/>dstDocumentPath,<sp/>SharedPtr&lt;ExSignDocumentCustom::Signee&gt;<sp/>signeeInfo,<sp/>String<sp/>certificatePath,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>certificatePassword)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>document<sp/>=<sp/>MakeObject&lt;Document&gt;(srcDocumentPath);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(document);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>and<sp/>insert<sp/>a<sp/>signature<sp/>line,<sp/>an<sp/>object<sp/>in<sp/>the<sp/>document<sp/>that<sp/>will<sp/>display<sp/>a<sp/>signature<sp/>that<sp/>we<sp/>sign<sp/>it<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signatureLineOptions<sp/>=<sp/>MakeObject&lt;SignatureLineOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>signatureLineOptions-&gt;set_Signer(signeeInfo-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>signatureLineOptions-&gt;set_SignerTitle(signeeInfo-&gt;get_Position());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;SignatureLine&gt;<sp/>signatureLine<sp/>=<sp/>builder-&gt;InsertSignatureLine(signatureLineOptions)-&gt;get_SignatureLine();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>signatureLine-&gt;set_Id(signeeInfo-&gt;get_PersonId());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>we<sp/>will<sp/>save<sp/>an<sp/>unsigned<sp/>version<sp/>of<sp/>our<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;Save(dstDocumentPath);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a0fd6423e6d95a9b92a170da169d3fa25" kindref="member" tooltip="Creates CertificateHolder object using byte array of PKCS12 store and its password.">CertificateHolder::Create</ref>(certificatePath,<sp/>certificatePassword);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>signOptions-&gt;set_SignatureLineId(signeeInfo-&gt;get_PersonId());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>signOptions-&gt;set_SignatureLineImage(signeeInfo-&gt;get_Image());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>the<sp/>unsigned<sp/>document<sp/>we<sp/>saved<sp/>above<sp/>with<sp/>a<sp/>version<sp/>signed<sp/>using<sp/>the<sp/>certificate.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_digital_signature_util_1af869532f846e545c8cd7436d45af6530" kindref="member" tooltip="Signs source document using given CertificateHolder and SignOptions with digital signature and writes...">DigitalSignatureUtil::Sign</ref>(dstDocumentPath,<sp/>dstDocumentPath,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ArrayPtr&lt;uint8_t&gt;<sp/>ImageToByteArray(SharedPtr&lt;System::Drawing::Image&gt;<sp/>imageIn)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/>MakeObject&lt;System::IO::MemoryStream&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageIn-&gt;Save(ms,<sp/><ref refid="class/system.drawing.imaging.image_format/_1a854fe6ac4c8bb96087464e4e59112df5" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Imaging::ImageFormat::get_Png</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ms-&gt;ToArray();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateSignees()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mSignees<sp/>=<sp/>MakeObject&lt;System::Collections::Generic::List&lt;SharedPtr&lt;ExSignDocumentCustom::Signee&gt;&gt;&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mSignees-&gt;Add(MakeObject&lt;ExSignDocumentCustom::Signee&gt;(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>(),<sp/>u</highlight><highlight class="stringliteral">&quot;Ron<sp/>Williams&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Chief<sp/>Executive<sp/>Officer&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageToByteArray(<ref refid="class/system.drawing.image/_1a744ad35e2fcb00393fb7ce4e24e59263" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Image::FromFile</ref>(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Logo.jpg&quot;</highlight><highlight class="normal">))));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mSignees-&gt;Add(MakeObject&lt;ExSignDocumentCustom::Signee&gt;(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>(),<sp/>u</highlight><highlight class="stringliteral">&quot;Stephen<sp/>Morse&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Head<sp/>of<sp/>Compliance&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ImageToByteArray(<ref refid="class/system.drawing.image/_1a744ad35e2fcb00393fb7ce4e24e59263" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Image::FromFile</ref>(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Logo.jpg&quot;</highlight><highlight class="normal">))));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;ExSignDocumentCustom::Signee&gt;&gt;&gt;<sp/>mSignees;</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::DigitalSignatures::CertificateHolder</label>
        <link refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::DigitalSignatures::CertificateHolder</label>
        <link refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" line="220" column="1" bodyfile="Aspose.Words.Cpp/DigitalSignatures/CertificateHolder.h" bodystart="221" bodyend="338"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1aa30da12084f41ac64cdcafaa38db3910" prot="private" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a0fd6423e6d95a9b92a170da169d3fa25" prot="public" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>Create</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a5c60a1b2bf9efbbefd3e108ffef076c3" prot="public" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>Create</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1ae03ed8c6a1b8ffcf9ea1aef4d699b3b8" prot="public" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>Create</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a3b3efb868124a5e93243157dbb2268f2" prot="public" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>Create</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a56c1f1e0b553a943aff9110e8cf33b8f" prot="public" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>get_Certificate</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a21f77bbf67100459f3c8b8aeb831f46a" prot="private" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a3c0b3728922409dc01660407523f0cbf" prot="private" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a1f05ff8d2e0cbac2f88bba729dcd368e" prot="private" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_digital_signatures_1_1_certificate_holder_1a6776fd9da387f021f4879dc386001fee" prot="private" virt="non-virtual"><scope>Aspose::Words::DigitalSignatures::CertificateHolder</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
