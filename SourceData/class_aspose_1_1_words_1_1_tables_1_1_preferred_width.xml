<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Aspose::Words::Tables::PreferredWidth</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_preferred_width_8h" local="no">Aspose.Words.Cpp/Tables/PreferredWidth.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a8319b177c54199c4d8494a882cb6310a" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Tables::PreferredWidth::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="93" column="28" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a0f53181a0e207d631be09ed8812c802e" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">PreferredWidth</ref></type>
        <definition>typedef PreferredWidth Aspose::Words::Tables::PreferredWidth::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="92" column="28" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1af647c00817e3953a0d9c4bdffb9748ba" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Tables::PreferredWidth::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="95" column="37" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a0dd60eec485e14a4f33e368b3e6a751d" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Tables::PreferredWidth::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="445" column="23" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="445" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a31a9383f562d9d14550679e81f11f701" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Tables::PreferredWidth::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="446" column="23" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6f6c2961bd8efa87c9d1b0c419b756a2" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Tables::PreferredWidth::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="447" column="23" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="447" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a1d532f0e3229a2790669af4a56bb91a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Tables::PreferredWidth::~PreferredWidth</definition>
        <argsstring>()</argsstring>
        <name>~PreferredWidth</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::~PreferredWidth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="441" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adddfea6edec09fbf1a23e149af0b1a62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Tables::PreferredWidth::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="96" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">Aspose::Words::Tables::PreferredWidth</ref> &gt; &amp;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::Tables::PreferredWidth &gt; &amp; Aspose::Words::Tables::PreferredWidth::Auto</definition>
        <argsstring>()</argsstring>
        <name>Auto</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::Auto</qualifiedname>
        <briefdescription>
<para>Returns an instance that represents the &quot;preferred width is not specified&quot; value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="137" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">Aspose::Words::Tables::PreferredWidth</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::Tables::PreferredWidth &gt; Aspose::Words::Tables::PreferredWidth::FromPercent</definition>
        <argsstring>(double percent)</argsstring>
        <name>FromPercent</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::FromPercent</qualifiedname>
        <param>
          <type>double</type>
          <declname>percent</declname>
        </param>
        <briefdescription>
<para>A creation method that returns a new instance that represents a preferred width specified as a percentage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>percent</parametername>
</parameternamelist>
<parameterdescription>
<para>The value must be from 0 to 100.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a table to auto fit to 50% of the width of the page. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>#1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>#2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>#3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(50));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertTableWithPreferredWidth.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="228" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">Aspose::Words::Tables::PreferredWidth</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::Tables::PreferredWidth &gt; Aspose::Words::Tables::PreferredWidth::FromPoints</definition>
        <argsstring>(double points)</argsstring>
        <name>FromPoints</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::FromPoints</qualifiedname>
        <param>
          <type>double</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>A creation method that returns a new instance that represents a preferred width specified using a number of points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>points</parametername>
</parameternamelist>
<parameterdescription>
<para>The value must be from 0 to 22 inches (22 * 72 points).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to use unit conversion tools while specifying a preferred width for a cell. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(<ref refid="class_aspose_1_1_words_1_1_convert_util_1afa94489d60d0d68b41facecd760899da" kindref="member" tooltip="Converts inches to points.">ConvertUtil::InchToPoint</ref>(3)));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(216.0,<sp/>table-&gt;get_FirstRow()-&gt;get_FirstCell()-&gt;get_CellFormat()-&gt;get_PreferredWidth()-&gt;get_Value());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="281" column="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a7a91599f4e27853c27f0a3cf4c9f3c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Tables::PreferredWidth::Equals</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Tables::PreferredWidth &gt; &amp;other)</argsstring>
        <name>Equals</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::Equals</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">Aspose::Words::Tables::PreferredWidth</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Determines whether the specified <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">PreferredWidth</ref> is equal in value to the current <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width" kindref="compound">PreferredWidth</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="320" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1ab8afb4cf787f61ec6bcd55c411eeed82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Tables::PreferredWidth::Equals</definition>
        <argsstring>(System::SharedPtr&lt; System::Object &gt; obj) override</argsstring>
        <name>Equals</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::Equals</qualifiedname>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Determines whether the specified object is equal in value to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="359" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a775642f8c0586837adb4b89e43a4763c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_tables_1a3348b09538e376cd9f07d9c38ae22e3e" kindref="member">Aspose::Words::Tables::PreferredWidthType</ref></type>
        <definition>Aspose::Words::Tables::PreferredWidthType Aspose::Words::Tables::PreferredWidth::get_Type</definition>
        <argsstring>() const</argsstring>
        <name>get_Type</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::get_Type</qualifiedname>
        <briefdescription>
<para>Gets the unit of measure used for this preferred width value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to verify the preferred width type and value of a table cell. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Tables.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Tables()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Cell&gt;<sp/>firstCell<sp/>=<sp/>table-&gt;get_FirstRow()-&gt;get_FirstCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a3348b09538e376cd9f07d9c38ae22e3eaadaaee4b22041c27198d410c68d952c9" kindref="member" tooltip="Measure the current item width using a specified percentage.">PreferredWidthType::Percent</ref>,<sp/>firstCell-&gt;get_CellFormat()-&gt;get_PreferredWidth()-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(11.16,<sp/>firstCell-&gt;get_CellFormat()-&gt;get_PreferredWidth()-&gt;get_Value());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="153" column="50"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a70918540327e8e30647bfa888ef0f787" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Aspose::Words::Tables::PreferredWidth::get_Value</definition>
        <argsstring>() const</argsstring>
        <name>get_Value</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::get_Value</qualifiedname>
        <briefdescription>
<para>Gets the preferred width value. The unit of measure is specified in the <ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a775642f8c0586837adb4b89e43a4763c" kindref="member">Type</ref> property. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to verify the preferred width type and value of a table cell. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Tables.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Tables()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Cell&gt;<sp/>firstCell<sp/>=<sp/>table-&gt;get_FirstRow()-&gt;get_FirstCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a3348b09538e376cd9f07d9c38ae22e3eaadaaee4b22041c27198d410c68d952c9" kindref="member" tooltip="Measure the current item width using a specified percentage.">PreferredWidthType::Percent</ref>,<sp/>firstCell-&gt;get_CellFormat()-&gt;get_PreferredWidth()-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(11.16,<sp/>firstCell-&gt;get_CellFormat()-&gt;get_PreferredWidth()-&gt;get_Value());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="169" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1ad0782a7f4d7d01a2f9c8d7b5d5459875" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Tables::PreferredWidth::GetHashCode</definition>
        <argsstring>() const override</argsstring>
        <name>GetHashCode</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::GetHashCode</qualifiedname>
        <reimplements refid="class/system.object/_1a00ddaaa824a71dbaa2b3a0f688d044a9">GetHashCode</reimplements>
        <briefdescription>
<para>Serves as a hash function for this type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="398" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adee9787a271df3be16d1650904acbbe0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Tables::PreferredWidth::ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <qualifiedname>Aspose::Words::Tables::PreferredWidth::ToString</qualifiedname>
        <reimplements refid="class/system.object/_1a5f519d7ae99b64426cc20862bd6211fa">ToString</reimplements>
        <briefdescription>
<para>Returns a user-friendly string that displays the value of this object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="437" column="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a value and its unit of measure that is used to specify the preferred width of a table or a cell. </para>
    </briefdescription>
    <detaileddescription>
<para>Preferred width can be specified as a percentage, number of points or a special &quot;none/auto&quot; value.</para>
<para>The instances of this class are immutable.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_tables_1_1_table_1abf4a32219d6cc1ef507a55cce87436da" kindref="member">Aspose::Words::Tables::Table::get_PreferredWidth</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_tables_1_1_cell_format_1aee37c78572011e51c58e0dce7ec4a90a" kindref="member">Aspose::Words::Tables::CellFormat::get_PreferredWidth</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set a table to auto fit to 50% of the width of the page. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>#1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>#2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>#3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(50));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertTableWithPreferredWidth.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to set a preferred width for table cells. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>applying<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>class<sp/>to<sp/>table<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>an<sp/>absolute<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>points:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified using a num...">PreferredWidth::FromPoints</ref>(40));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a199339199c8bf5f857dc439fb9d291d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Set<sp/>a<sp/>relative<sp/>preferred<sp/>width<sp/>based<sp/>on<sp/>percent<sp/>of<sp/>the<sp/>table&apos;s<sp/>width:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" kindref="member" tooltip="A creation method that returns a new instance that represents a preferred width specified as a percen...">PreferredWidth::FromPercent</ref>(20));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a989243916cf2bfbe0fc140d29ec2ea2e" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightBlue</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;Cell<sp/>with<sp/>a<sp/>width<sp/>of<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>cell<sp/>with<sp/>no<sp/>preferred<sp/>width<sp/>specified<sp/>will<sp/>take<sp/>up<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>available<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_PreferredWidth(<ref refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" kindref="member" tooltip="Returns an instance that represents the &quot;preferred width is not specified&quot; value.">PreferredWidth::Auto</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>configuration<sp/>of<sp/>the<sp/>&quot;PreferredWidth&quot;<sp/>property<sp/>creates<sp/>a<sp/>new<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NE(<ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(table-&gt;get_FirstRow()-&gt;get_Cells()-&gt;idx_get(1)-&gt;get_CellFormat()-&gt;get_PreferredWidth()),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.object_ext/_1a911fa57b654ba73ed1f1fd24389ea94b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetHashCode</ref>(builder-&gt;get_CellFormat()-&gt;get_PreferredWidth()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ade19139d99999253a0c54558020c90d3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGreen</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Automatically<sp/>sized<sp/>cell.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertCellsWithPreferredWidths.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Tables::PreferredWidth</label>
        <link refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Tables::PreferredWidth</label>
        <link refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Tables/PreferredWidth.h" line="90" column="1" bodyfile="Aspose.Words.Cpp/Tables/PreferredWidth.h" bodystart="91" bodyend="453"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adebc822a2114926b2d725a763863172b" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>Auto</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a8319b177c54199c4d8494a882cb6310a" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a7a91599f4e27853c27f0a3cf4c9f3c22" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>Equals</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1ab8afb4cf787f61ec6bcd55c411eeed82" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>Equals</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a181872057b1b2a54cb5d0e660b23353e" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>FromPercent</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6ade9ec15a397cbfcc193503ac606245" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>FromPoints</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a775642f8c0586837adb4b89e43a4763c" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a70918540327e8e30647bfa888ef0f787" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>get_Value</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1ad0782a7f4d7d01a2f9c8d7b5d5459875" prot="public" virt="virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>GetHashCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a0dd60eec485e14a4f33e368b3e6a751d" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a31a9383f562d9d14550679e81f11f701" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a6f6c2961bd8efa87c9d1b0c419b756a2" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adddfea6edec09fbf1a23e149af0b1a62" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a0f53181a0e207d631be09ed8812c802e" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1af647c00817e3953a0d9c4bdffb9748ba" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1adee9787a271df3be16d1650904acbbe0" prot="public" virt="virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_preferred_width_1a1d532f0e3229a2790669af4a56bb91a6" prot="private" virt="virtual"><scope>Aspose::Words::Tables::PreferredWidth</scope><name>~PreferredWidth</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
