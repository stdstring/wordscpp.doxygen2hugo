<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_tables_1_1_row_format" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Tables::RowFormat</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::IBorderAttrSource</basecompoundref>
    <includes refid="_row_format_8h" local="no">Aspose.Words.Cpp/Tables/RowFormat.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1af50a3fa72c63c8de5b7a424a6e5a7882" prot="private" static="no">
        <type>Aspose::Words::IBorderAttrSource</type>
        <definition>typedef Aspose::Words::IBorderAttrSource Aspose::Words::Tables::RowFormat::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="155" column="46" bodyfile="Aspose.Words.Cpp/Tables/RowFormat.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a61397fe91217b943c547f63033e65dd8" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_tables_1_1_row_format" kindref="compound">RowFormat</ref></type>
        <definition>typedef RowFormat Aspose::Words::Tables::RowFormat::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="154" column="23" bodyfile="Aspose.Words.Cpp/Tables/RowFormat.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1af6e1b34b1727aea80dc3b27df8909bf5" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; BaseType &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Tables::RowFormat::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="157" column="37" bodyfile="Aspose.Words.Cpp/Tables/RowFormat.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1aaa52b74a8dc8559530826209ba88ae2d" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.weak_ptr/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::WeakPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::WeakPtr&lt;System::Object&gt; Aspose::Words::Tables::RowFormat::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="561" column="21" bodyfile="Aspose.Words.Cpp/Tables/RowFormat.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a88fc31b8c25fb382400e51deff482c43" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Tables::RowFormat::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="562" column="23" bodyfile="Aspose.Words.Cpp/Tables/RowFormat.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a84a53c9ad410528a91373bc06c2d92fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Tables::RowFormat::~RowFormat</definition>
        <argsstring>()</argsstring>
        <name>~RowFormat</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::~RowFormat</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="555" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1af47b35a02b49d4db58a0518fc835bc39" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Tables::RowFormat::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="158" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a5863f3762e701f55ddb333695994da0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Tables::RowFormat::ClearFormatting</definition>
        <argsstring>()</argsstring>
        <name>ClearFormatting</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::ClearFormatting</qualifiedname>
        <briefdescription>
<para>Resets to default row formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build a table with custom borders. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>table<sp/>formatting<sp/>options<sp/>for<sp/>a<sp/>document<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>apply<sp/>them<sp/>to<sp/>every<sp/>row<sp/>and<sp/>cell<sp/>that<sp/>we<sp/>add<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is centered horizontally.">ParagraphAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Width(150);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_VerticalAlignment(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a4c33d97f9cfe518aa1864baeb6533c6da4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is aligned in the middle of a cell.">CellVerticalAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a186a4a03d76eeba314f392f91da04011" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_GreenYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_WrapText(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_FitText(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(50);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_LineStyle(<ref refid="namespace_aspose_1_1_words_1a7b6888839fb40e2141c101764ad7e09dafd80474b6c09afcb4bedd1a3bdab0b83" kindref="member">LineStyle::Engrave3D</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a8c00b1d8ade4eff88b5bf0e054650dd0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Orange</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changing<sp/>the<sp/>formatting<sp/>will<sp/>apply<sp/>it<sp/>to<sp/>the<sp/>current<sp/>cell,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>any<sp/>new<sp/>cells<sp/>that<sp/>we<sp/>create<sp/>with<sp/>the<sp/>builder<sp/>afterward.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>not<sp/>affect<sp/>the<sp/>cells<sp/>that<sp/>we<sp/>have<sp/>added<sp/>previously.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increase<sp/>row<sp/>height<sp/>to<sp/>fit<sp/>the<sp/>vertical<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(150);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Orientation(<ref refid="namespace_aspose_1_1_words_1a22518c6919e497447ac00018a4f45394a2fad4fd9e0a2737fdcac5ff87ffe403c" kindref="member" tooltip="Text is rotated 90 degrees to the left to appear from bottom to top (bt-lr).">TextOrientation::Upward</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>3,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Orientation(<ref refid="namespace_aspose_1_1_words_1a22518c6919e497447ac00018a4f45394a021f1340f5979a4f4f9642940221ad53" kindref="member" tooltip="Text is rotated 90 degrees to the right to appear from top to bottom (tb-rl).">TextOrientation::Downward</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>3,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertTable.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="551" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1ae95055b25764f30fd32b259634910c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Tables::RowFormat::get_AllowBreakAcrossPages</definition>
        <argsstring>()</argsstring>
        <name>get_AllowBreakAcrossPages</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::get_AllowBreakAcrossPages</qualifiedname>
        <briefdescription>
<para>True if the text in a table row is allowed to split across a page break. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to disable rows breaking across pages for every row in a table. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Table<sp/>spanning<sp/>two<sp/>pages.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Tables()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;AllowBreakAcrossPages&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>keep<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>one<sp/>piece<sp/>if<sp/>a<sp/>table<sp/>spans<sp/>two<sp/>pages,<sp/>which<sp/>break<sp/>up<sp/>along<sp/>that<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>row<sp/>is<sp/>too<sp/>big<sp/>to<sp/>fit<sp/>in<sp/>one<sp/>page,<sp/>Microsoft<sp/>Word<sp/>will<sp/>push<sp/>it<sp/>down<sp/>to<sp/>the<sp/>next<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;AllowBreakAcrossPages&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>row<sp/>to<sp/>break<sp/>up<sp/>across<sp/>two<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>:<sp/>System::IterateOver(table-&gt;LINQ_OfType&lt;SharedPtr&lt;Row&gt;&gt;()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>row-&gt;get_RowFormat()-&gt;set_AllowBreakAcrossPages(allowBreakAcrossPages);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Table.AllowBreakAcrossPages.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="439" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a707dfdc5d28a72de112d8b9db7a9869d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_border_collection" kindref="compound">Aspose::Words::BorderCollection</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::BorderCollection &gt; Aspose::Words::Tables::RowFormat::get_Borders</definition>
        <argsstring>()</argsstring>
        <name>get_Borders</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::get_Borders</qualifiedname>
        <briefdescription>
<para>Gets the collection of default cell borders for the row. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build a table with custom borders. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>table<sp/>formatting<sp/>options<sp/>for<sp/>a<sp/>document<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>apply<sp/>them<sp/>to<sp/>every<sp/>row<sp/>and<sp/>cell<sp/>that<sp/>we<sp/>add<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is centered horizontally.">ParagraphAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Width(150);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_VerticalAlignment(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a4c33d97f9cfe518aa1864baeb6533c6da4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is aligned in the middle of a cell.">CellVerticalAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a186a4a03d76eeba314f392f91da04011" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_GreenYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_WrapText(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_FitText(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(50);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_LineStyle(<ref refid="namespace_aspose_1_1_words_1a7b6888839fb40e2141c101764ad7e09dafd80474b6c09afcb4bedd1a3bdab0b83" kindref="member">LineStyle::Engrave3D</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a8c00b1d8ade4eff88b5bf0e054650dd0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Orange</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changing<sp/>the<sp/>formatting<sp/>will<sp/>apply<sp/>it<sp/>to<sp/>the<sp/>current<sp/>cell,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>any<sp/>new<sp/>cells<sp/>that<sp/>we<sp/>create<sp/>with<sp/>the<sp/>builder<sp/>afterward.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>not<sp/>affect<sp/>the<sp/>cells<sp/>that<sp/>we<sp/>have<sp/>added<sp/>previously.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increase<sp/>row<sp/>height<sp/>to<sp/>fit<sp/>the<sp/>vertical<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(150);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Orientation(<ref refid="namespace_aspose_1_1_words_1a22518c6919e497447ac00018a4f45394a2fad4fd9e0a2737fdcac5ff87ffe403c" kindref="member" tooltip="Text is rotated 90 degrees to the left to appear from bottom to top (bt-lr).">TextOrientation::Upward</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>3,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Orientation(<ref refid="namespace_aspose_1_1_words_1a22518c6919e497447ac00018a4f45394a021f1340f5979a4f4f9642940221ad53" kindref="member" tooltip="Text is rotated 90 degrees to the right to appear from top to bottom (tb-rl).">TextOrientation::Downward</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>3,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertTable.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="225" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1ad5f6271d7ecaada9ee135b6279a229f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Tables::RowFormat::get_HeadingFormat</definition>
        <argsstring>()</argsstring>
        <name>get_HeadingFormat</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::get_HeadingFormat</qualifiedname>
        <briefdescription>
<para>True if the row is repeated as a table heading on every page when the table spans more than one page. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build a table with rows that repeat on every page. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>rows<sp/>inserted<sp/>while<sp/>the<sp/>&quot;HeadingFormat&quot;<sp/>flag<sp/>is<sp/>set<sp/>to<sp/>&quot;true&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>show<sp/>up<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>table<sp/>on<sp/>every<sp/>page<sp/>that<sp/>it<sp/>spans.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeadingFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is centered horizontally.">ParagraphAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Width(100);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>row<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>row<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Width(50);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeadingFormat(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>enough<sp/>rows<sp/>for<sp/>the<sp/>table<sp/>to<sp/>span<sp/>two<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>50;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Write(String::Format(u</highlight><highlight class="stringliteral">&quot;Row<sp/>{0},<sp/>column<sp/>1.&quot;</highlight><highlight class="normal">,<sp/>table-&gt;get_Rows()-&gt;get_Count()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Write(String::Format(u</highlight><highlight class="stringliteral">&quot;Row<sp/>{0},<sp/>column<sp/>2.&quot;</highlight><highlight class="normal">,<sp/>table-&gt;get_Rows()-&gt;get_Count()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertTableSetHeadingRow.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="483" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a63aa4a858216435d8c503219bb351ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Aspose::Words::Tables::RowFormat::get_Height</definition>
        <argsstring>()</argsstring>
        <name>get_Height</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::get_Height</qualifiedname>
        <briefdescription>
<para>Gets or sets the height of the table row in points. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a formatted table using <ref refid="class_aspose_1_1_words_1_1_document_builder" kindref="compound">DocumentBuilder</ref>. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_LeftIndent(20);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>some<sp/>formatting<sp/>options<sp/>for<sp/>text<sp/>and<sp/>table<sp/>appearance.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(40);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccbabad91df0cfc5662f3af47244d02d4802" kindref="member" tooltip="The height will be at least the specified height in points. It will grow, if needed,...">HeightRule::AtLeast</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ad3a7bcb373676e499a5ec82f1d6696f3" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::FromArgb</ref>(198,<sp/>217,<sp/>241));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is centered horizontally.">ParagraphAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Size(16);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Bold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuring<sp/>the<sp/>formatting<sp/>options<sp/>in<sp/>a<sp/>document<sp/>builder<sp/>will<sp/>apply<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>current<sp/>cell/row<sp/>its<sp/>cursor<sp/>is<sp/>in,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>well<sp/>as<sp/>any<sp/>new<sp/>cells<sp/>and<sp/>rows<sp/>created<sp/>using<sp/>that<sp/>builder.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Header<sp/>Row,\n<sp/>Cell<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Header<sp/>Row,\n<sp/>Cell<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Header<sp/>Row,\n<sp/>Cell<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reconfigure<sp/>the<sp/>builder&apos;s<sp/>formatting<sp/>objects<sp/>for<sp/>new<sp/>rows<sp/>and<sp/>cells<sp/>that<sp/>we<sp/>are<sp/>about<sp/>to<sp/>make.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>builder<sp/>will<sp/>not<sp/>apply<sp/>these<sp/>to<sp/>the<sp/>first<sp/>row<sp/>already<sp/>created<sp/>so<sp/>that<sp/>it<sp/>will<sp/>stand<sp/>out<sp/>as<sp/>a<sp/>header<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a1b90a32ef23b518d7809b352c2a8274b" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_White</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_VerticalAlignment(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a4c33d97f9cfe518aa1864baeb6533c6da4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is aligned in the middle of a cell.">CellVerticalAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(30);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba06b9281e396db002010bde1de57262eb" kindref="member" tooltip="The height will grow automatically to accommodate all text inside an object.">HeightRule::Auto</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Size(12);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Bold(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Cell<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Cell<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.CreateFormattedTable.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to format rows with a document builder. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>second<sp/>row,<sp/>and<sp/>then<sp/>configure<sp/>its<sp/>height.<sp/>The<sp/>builder<sp/>will<sp/>apply<sp/>these<sp/>settings<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>current<sp/>row,<sp/>as<sp/>well<sp/>as<sp/>any<sp/>new<sp/>rows<sp/>it<sp/>creates<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;RowFormat&gt;<sp/>rowFormat<sp/>=<sp/>builder-&gt;get_RowFormat();</highlight></codeline>
<codeline><highlight class="normal">rowFormat-&gt;set_Height(100);</highlight></codeline>
<codeline><highlight class="normal">rowFormat-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>row<sp/>was<sp/>unaffected<sp/>by<sp/>the<sp/>padding<sp/>reconfiguration<sp/>and<sp/>still<sp/>holds<sp/>the<sp/>default<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(0.0,<sp/>table-&gt;get_Rows()-&gt;idx_get(0)-&gt;get_RowFormat()-&gt;get_Height());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba06b9281e396db002010bde1de57262eb" kindref="member" tooltip="The height will grow automatically to accommodate all text inside an object.">HeightRule::Auto</ref>,<sp/>table-&gt;get_Rows()-&gt;idx_get(0)-&gt;get_RowFormat()-&gt;get_HeightRule());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(100.0,<sp/>table-&gt;get_Rows()-&gt;idx_get(1)-&gt;get_RowFormat()-&gt;get_Height());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>,<sp/>table-&gt;get_Rows()-&gt;idx_get(1)-&gt;get_RowFormat()-&gt;get_HeightRule());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.SetRowFormatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="318" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1afef2f4b8fcb5343d9cfbad7f1d1b5502" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccb" kindref="member">Aspose::Words::HeightRule</ref></type>
        <definition>Aspose::Words::HeightRule Aspose::Words::Tables::RowFormat::get_HeightRule</definition>
        <argsstring>()</argsstring>
        <name>get_HeightRule</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::get_HeightRule</qualifiedname>
        <briefdescription>
<para>Gets or sets the rule for determining the height of the table row. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a formatted table using <ref refid="class_aspose_1_1_words_1_1_document_builder" kindref="compound">DocumentBuilder</ref>. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_LeftIndent(20);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>some<sp/>formatting<sp/>options<sp/>for<sp/>text<sp/>and<sp/>table<sp/>appearance.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(40);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccbabad91df0cfc5662f3af47244d02d4802" kindref="member" tooltip="The height will be at least the specified height in points. It will grow, if needed,...">HeightRule::AtLeast</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1ad3a7bcb373676e499a5ec82f1d6696f3" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::FromArgb</ref>(198,<sp/>217,<sp/>241));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is centered horizontally.">ParagraphAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Size(16);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Bold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configuring<sp/>the<sp/>formatting<sp/>options<sp/>in<sp/>a<sp/>document<sp/>builder<sp/>will<sp/>apply<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>current<sp/>cell/row<sp/>its<sp/>cursor<sp/>is<sp/>in,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>well<sp/>as<sp/>any<sp/>new<sp/>cells<sp/>and<sp/>rows<sp/>created<sp/>using<sp/>that<sp/>builder.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Header<sp/>Row,\n<sp/>Cell<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Header<sp/>Row,\n<sp/>Cell<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Header<sp/>Row,\n<sp/>Cell<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reconfigure<sp/>the<sp/>builder&apos;s<sp/>formatting<sp/>objects<sp/>for<sp/>new<sp/>rows<sp/>and<sp/>cells<sp/>that<sp/>we<sp/>are<sp/>about<sp/>to<sp/>make.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>builder<sp/>will<sp/>not<sp/>apply<sp/>these<sp/>to<sp/>the<sp/>first<sp/>row<sp/>already<sp/>created<sp/>so<sp/>that<sp/>it<sp/>will<sp/>stand<sp/>out<sp/>as<sp/>a<sp/>header<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a1b90a32ef23b518d7809b352c2a8274b" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_White</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_VerticalAlignment(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a4c33d97f9cfe518aa1864baeb6533c6da4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is aligned in the middle of a cell.">CellVerticalAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(30);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba06b9281e396db002010bde1de57262eb" kindref="member" tooltip="The height will grow automatically to accommodate all text inside an object.">HeightRule::Auto</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Size(12);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Bold(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Cell<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Cell<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.CreateFormattedTable.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to format rows with a document builder. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>second<sp/>row,<sp/>and<sp/>then<sp/>configure<sp/>its<sp/>height.<sp/>The<sp/>builder<sp/>will<sp/>apply<sp/>these<sp/>settings<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>current<sp/>row,<sp/>as<sp/>well<sp/>as<sp/>any<sp/>new<sp/>rows<sp/>it<sp/>creates<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;RowFormat&gt;<sp/>rowFormat<sp/>=<sp/>builder-&gt;get_RowFormat();</highlight></codeline>
<codeline><highlight class="normal">rowFormat-&gt;set_Height(100);</highlight></codeline>
<codeline><highlight class="normal">rowFormat-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>cell<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>row<sp/>was<sp/>unaffected<sp/>by<sp/>the<sp/>padding<sp/>reconfiguration<sp/>and<sp/>still<sp/>holds<sp/>the<sp/>default<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(0.0,<sp/>table-&gt;get_Rows()-&gt;idx_get(0)-&gt;get_RowFormat()-&gt;get_Height());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba06b9281e396db002010bde1de57262eb" kindref="member" tooltip="The height will grow automatically to accommodate all text inside an object.">HeightRule::Auto</ref>,<sp/>table-&gt;get_Rows()-&gt;idx_get(0)-&gt;get_RowFormat()-&gt;get_HeightRule());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(100.0,<sp/>table-&gt;get_Rows()-&gt;idx_get(1)-&gt;get_RowFormat()-&gt;get_Height());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>,<sp/>table-&gt;get_Rows()-&gt;idx_get(1)-&gt;get_RowFormat()-&gt;get_HeightRule());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.SetRowFormatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="414" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a1a553500b3aa696d7ad14f4444a3eee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Tables::RowFormat::set_AllowBreakAcrossPages</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_AllowBreakAcrossPages</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::set_AllowBreakAcrossPages</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1ae95055b25764f30fd32b259634910c95" kindref="member">Aspose::Words::Tables::RowFormat::get_AllowBreakAcrossPages</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="442" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a11940c425b13af003905955a83780645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Tables::RowFormat::set_HeadingFormat</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_HeadingFormat</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::set_HeadingFormat</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1ad5f6271d7ecaada9ee135b6279a229f0" kindref="member">Aspose::Words::Tables::RowFormat::get_HeadingFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="486" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1aa999ef8c9f4d5ca0ed8ef5dbaf3c484e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Tables::RowFormat::set_Height</definition>
        <argsstring>(double value)</argsstring>
        <name>set_Height</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::set_Height</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a63aa4a858216435d8c503219bb351ace" kindref="member">Aspose::Words::Tables::RowFormat::get_Height</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="321" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_tables_1_1_row_format_1aae5f593d72821dee4984521305f14fb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Tables::RowFormat::set_HeightRule</definition>
        <argsstring>(Aspose::Words::HeightRule value)</argsstring>
        <name>set_HeightRule</name>
        <qualifiedname>Aspose::Words::Tables::RowFormat::set_HeightRule</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccb" kindref="member">Aspose::Words::HeightRule</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1afef2f4b8fcb5343d9cfbad7f1d1b5502" kindref="member">Aspose::Words::Tables::RowFormat::get_HeightRule</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="417" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents all formatting for a table row. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build a table with custom borders. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>table<sp/>formatting<sp/>options<sp/>for<sp/>a<sp/>document<sp/>builder</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>apply<sp/>them<sp/>to<sp/>every<sp/>row<sp/>and<sp/>cell<sp/>that<sp/>we<sp/>add<sp/>with<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is centered horizontally.">ParagraphAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Width(150);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_VerticalAlignment(<ref refid="namespace_aspose_1_1_words_1_1_tables_1a4c33d97f9cfe518aa1864baeb6533c6da4f1f6016fc9f3f2353c0cc7c67b292bd" kindref="member" tooltip="Text is aligned in the middle of a cell.">CellVerticalAlignment::Center</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a186a4a03d76eeba314f392f91da04011" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_GreenYellow</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_WrapText(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_FitText(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba32f01c1611a4a80b752afe034a7210a5" kindref="member" tooltip="The height is specified exactly in points. Please note that if the text cannot fit inside the object ...">HeightRule::Exactly</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(50);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_LineStyle(<ref refid="namespace_aspose_1_1_words_1a7b6888839fb40e2141c101764ad7e09dafd80474b6c09afcb4bedd1a3bdab0b83" kindref="member">LineStyle::Engrave3D</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a8c00b1d8ade4eff88b5bf0e054650dd0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Orange</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changing<sp/>the<sp/>formatting<sp/>will<sp/>apply<sp/>it<sp/>to<sp/>the<sp/>current<sp/>cell,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>any<sp/>new<sp/>cells<sp/>that<sp/>we<sp/>create<sp/>with<sp/>the<sp/>builder<sp/>afterward.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>not<sp/>affect<sp/>the<sp/>cells<sp/>that<sp/>we<sp/>have<sp/>added<sp/>previously.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;get_Shading()-&gt;ClearFormatting();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>2,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increase<sp/>row<sp/>height<sp/>to<sp/>fit<sp/>the<sp/>vertical<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_RowFormat()-&gt;set_Height(150);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Orientation(<ref refid="namespace_aspose_1_1_words_1a22518c6919e497447ac00018a4f45394a2fad4fd9e0a2737fdcac5ff87ffe403c" kindref="member" tooltip="Text is rotated 90 degrees to the left to appear from bottom to top (bt-lr).">TextOrientation::Upward</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>3,<sp/>Col<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_CellFormat()-&gt;set_Orientation(<ref refid="namespace_aspose_1_1_words_1a22518c6919e497447ac00018a4f45394a021f1340f5979a4f4f9642940221ad53" kindref="member" tooltip="Text is rotated 90 degrees to the right to appear from top to bottom (tb-rl).">TextOrientation::Downward</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>3,<sp/>Col<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentBuilder.InsertTable.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to modify the format of rows and cells in a table. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;City&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Country&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndRow();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;London&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;U.K.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>first<sp/>row&apos;s<sp/>&quot;RowFormat&quot;<sp/>property<sp/>to<sp/>modify<sp/>the<sp/>formatting</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>contents<sp/>of<sp/>all<sp/>cells<sp/>in<sp/>this<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;RowFormat&gt;<sp/>rowFormat<sp/>=<sp/>table-&gt;get_FirstRow()-&gt;get_RowFormat();</highlight></codeline>
<codeline><highlight class="normal">rowFormat-&gt;set_Height(25);</highlight></codeline>
<codeline><highlight class="normal">rowFormat-&gt;get_Borders()-&gt;idx_get(<ref refid="namespace_aspose_1_1_words_1a4d30a833e0d716f386fa8d31c3b70c54a2ad9d63b69c4a10a5cc9cad923133bc4" kindref="member" tooltip="Specifies the bottom border of a paragraph or a table cell.">BorderType::Bottom</ref>)-&gt;set_Color(<ref refid="class/system.drawing.color/_1a1d4bef72f59c2029f4c055ca8711d8dd" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Red</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;CellFormat&quot;<sp/>property<sp/>of<sp/>the<sp/>first<sp/>cell<sp/>in<sp/>the<sp/>last<sp/>row<sp/>to<sp/>modify<sp/>the<sp/>formatting<sp/>of<sp/>that<sp/>cell&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CellFormat&gt;<sp/>cellFormat<sp/>=<sp/>table-&gt;get_LastRow()-&gt;get_FirstCell()-&gt;get_CellFormat();</highlight></codeline>
<codeline><highlight class="normal">cellFormat-&gt;set_Width(100);</highlight></codeline>
<codeline><highlight class="normal">cellFormat-&gt;get_Shading()-&gt;set_BackgroundPatternColor(<ref refid="class/system.drawing.color/_1a8c00b1d8ade4eff88b5bf0e054650dd0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Orange</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Table.RowCellFormat.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to modify formatting of a table row. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Tables.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Tables()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>first<sp/>row&apos;s<sp/>&quot;RowFormat&quot;<sp/>property<sp/>to<sp/>set<sp/>formatting<sp/>that<sp/>modifies<sp/>that<sp/>entire<sp/>row&apos;s<sp/>appearance.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Row&gt;<sp/>firstRow<sp/>=<sp/>table-&gt;get_FirstRow();</highlight></codeline>
<codeline><highlight class="normal">firstRow-&gt;get_RowFormat()-&gt;get_Borders()-&gt;set_LineStyle(<ref refid="namespace_aspose_1_1_words_1a7b6888839fb40e2141c101764ad7e09da6adf97f83acf6453d4a6a4b1070f3754" kindref="member">LineStyle::None</ref>);</highlight></codeline>
<codeline><highlight class="normal">firstRow-&gt;get_RowFormat()-&gt;set_HeightRule(<ref refid="namespace_aspose_1_1_words_1a5a06eed54291a03fff010f2caa3daccba06b9281e396db002010bde1de57262eb" kindref="member" tooltip="The height will grow automatically to accommodate all text inside an object.">HeightRule::Auto</ref>);</highlight></codeline>
<codeline><highlight class="normal">firstRow-&gt;get_RowFormat()-&gt;set_AllowBreakAcrossPages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Table.RowFormat.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aspose::Words::IBorderAttrSource</label>
      </node>
      <node id="1">
        <label>Aspose::Words::Tables::RowFormat</label>
        <link refid="class_aspose_1_1_words_1_1_tables_1_1_row_format"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Aspose::Words::IBorderAttrSource</label>
      </node>
      <node id="1">
        <label>Aspose::Words::Tables::RowFormat</label>
        <link refid="class_aspose_1_1_words_1_1_tables_1_1_row_format"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Tables/RowFormat.h" line="152" column="1" bodyfile="Aspose.Words.Cpp/Tables/RowFormat.h" bodystart="153" bodyend="568"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1af50a3fa72c63c8de5b7a424a6e5a7882" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a5863f3762e701f55ddb333695994da0e" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>ClearFormatting</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1ae95055b25764f30fd32b259634910c95" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>get_AllowBreakAcrossPages</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a707dfdc5d28a72de112d8b9db7a9869d" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>get_Borders</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1ad5f6271d7ecaada9ee135b6279a229f0" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>get_HeadingFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a63aa4a858216435d8c503219bb351ace" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>get_Height</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1afef2f4b8fcb5343d9cfbad7f1d1b5502" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>get_HeightRule</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1aaa52b74a8dc8559530826209ba88ae2d" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a88fc31b8c25fb382400e51deff482c43" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1af47b35a02b49d4db58a0518fc835bc39" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a1a553500b3aa696d7ad14f4444a3eee0" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>set_AllowBreakAcrossPages</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a11940c425b13af003905955a83780645" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>set_HeadingFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1aa999ef8c9f4d5ca0ed8ef5dbaf3c484e" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>set_Height</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1aae5f593d72821dee4984521305f14fb0" prot="public" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>set_HeightRule</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a61397fe91217b943c547f63033e65dd8" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1af6e1b34b1727aea80dc3b27df8909bf5" prot="private" virt="non-virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_tables_1_1_row_format_1a84a53c9ad410528a91373bc06c2d92fd" prot="private" virt="virtual"><scope>Aspose::Words::Tables::RowFormat</scope><name>~RowFormat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
