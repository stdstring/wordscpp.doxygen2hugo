<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Replacing::FindReplaceOptions</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_find_replace_options_8h" local="no">Aspose.Words.Cpp/Replacing/FindReplaceOptions.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1f30b2888d0c7ae82c51c7c0253d1519" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Replacing::FindReplaceOptions::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="82" column="28" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a83492b7bf7caf162e9bb2ba8532b8219" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options" kindref="compound">FindReplaceOptions</ref></type>
        <definition>typedef FindReplaceOptions Aspose::Words::Replacing::FindReplaceOptions::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="81" column="32" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a6aeb1dfe1f2f0c4a6b4306bb122de56b" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Replacing::FindReplaceOptions::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="84" column="37" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a2456707944f15b988c40355f3c04a0ab" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="859" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a07fd9dd79ed951df8f8c4340e2319603" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="860" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4ed669847b205f51ff5e9427779b19d7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Replacing::FindReplaceOptions::mField10</definition>
        <argsstring></argsstring>
        <name>mField10</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="869" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a9ac70971dbb855177ef3ecbc0b8f4266" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField11</definition>
        <argsstring></argsstring>
        <name>mField11</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="870" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1aa3495bc3fc171c06319d4c7f718ad590" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField12</definition>
        <argsstring></argsstring>
        <name>mField12</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="871" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="871" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1a072332fef5c4ecf2bdc8f2b1ee4354" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField13</definition>
        <argsstring></argsstring>
        <name>mField13</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="872" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1d20114352693eca31e676cac718b8b3" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField14</definition>
        <argsstring></argsstring>
        <name>mField14</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="873" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1abd0e251f6ef1e280f1700bc56fdd8f66" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField15</definition>
        <argsstring></argsstring>
        <name>mField15</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="874" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="874" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a917d803c5748c455309869acb7995a0a" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField16</definition>
        <argsstring></argsstring>
        <name>mField16</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="875" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="875" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a0900489e1f859d9e11e3fbfd7e4013df" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField17</definition>
        <argsstring></argsstring>
        <name>mField17</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField17</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="876" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="876" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1abef2facebb3fbceab50f1a19d75d17d1" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="861" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad0ffa84ff3e4ded657acf67016e4e2d9" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="862" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a5b8d47be632846d0beaa8b867c58b384" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Replacing::FindReplaceOptions::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="863" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a33b2835cc744d95ea303961a7df5171b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Replacing::FindReplaceOptions::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="864" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a743974b085bc3daa1968ca51c3c8b190" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Replacing::FindReplaceOptions::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="865" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a46d673caf0555a101b710db34d9154af" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Replacing::FindReplaceOptions::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="866" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a72c9437da2fe35b3237089071b9a6eed" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField8</definition>
        <argsstring></argsstring>
        <name>mField8</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="867" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="867" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a79a96d2d439fe2634237177eaa4c9fa5" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Replacing::FindReplaceOptions::mField9</definition>
        <argsstring></argsstring>
        <name>mField9</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::mField9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="868" column="23" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="868" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad37f32cb559e74a9adcaa6b0106360d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Replacing::FindReplaceOptions::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="85" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4ba15b8af44992953b1d5d73cb665035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</definition>
        <argsstring>()</argsstring>
        <name>FindReplaceOptions</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="850" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a0173012621760172dfb0ce2a3044bce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</definition>
        <argsstring>(Aspose::Words::Replacing::FindReplaceDirection direction)</argsstring>
        <name>FindReplaceOptions</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889c" kindref="member">Aspose::Words::Replacing::FindReplaceDirection</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="851" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a833da15e6566a35c622b1c28652286b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</definition>
        <argsstring>(Aspose::Words::Replacing::FindReplaceDirection direction, const System::SharedPtr&lt; Aspose::Words::Replacing::IReplacingCallback &gt; &amp;replacingCallback)</argsstring>
        <name>FindReplaceOptions</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889c" kindref="member">Aspose::Words::Replacing::FindReplaceDirection</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_i_replacing_callback" kindref="compound">Aspose::Words::Replacing::IReplacingCallback</ref> &gt; &amp;</type>
          <declname>replacingCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="853" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a109efaf98b4bc91ee311819ca5adf9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Replacing::IReplacingCallback &gt; &amp;replacingCallback)</argsstring>
        <name>FindReplaceOptions</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::FindReplaceOptions</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_i_replacing_callback" kindref="compound">Aspose::Words::Replacing::IReplacingCallback</ref> &gt; &amp;</type>
          <declname>replacingCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="852" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a2b0e5c67555e14254c668fbfcc90854a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Aspose::Words::Font</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Font &gt; Aspose::Words::Replacing::FindReplaceOptions::get_ApplyFont</definition>
        <argsstring>() const</argsstring>
        <name>get_ApplyFont</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_ApplyFont</qualifiedname>
        <briefdescription>
<para>Text formatting applied to new content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply a different font to new content via <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options" kindref="compound">FindReplaceOptions</ref>. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertNumbersToHexadecimal()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Numbers<sp/>that<sp/>the<sp/>find-and-replace<sp/>operation<sp/>will<sp/>convert<sp/>to<sp/>hexadecimal<sp/>and<sp/>highlight:\n&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;123,<sp/>456,<sp/>789<sp/>and<sp/>17379.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;HighlightColor&quot;<sp/>property<sp/>to<sp/>a<sp/>background<sp/>color<sp/>that<sp/>we<sp/>want<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>operation&apos;s<sp/>resulting<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;get_ApplyFont()-&gt;set_HighlightColor(<ref refid="class/system.drawing.color/_1a77db5e3307f15da66f743080172caa68" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGray</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numberHexer<sp/>=<sp/>MakeObject&lt;ExRange::NumberHexer&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ReplacingCallback(numberHexer);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>replacementCount<sp/>=<sp/>doc-&gt;get_Range()-&gt;Replace(MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;[0-9]+&quot;</highlight><highlight class="normal">),<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>numberHexer-&gt;GetLog()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>replacementCount);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Numbers<sp/>that<sp/>the<sp/>find-and-replace<sp/>operation<sp/>will<sp/>convert<sp/>to<sp/>hexadecimal<sp/>and<sp/>highlight:\r&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;0x7B,<sp/>0x1C8,<sp/>0x315<sp/>and<sp/>0x43E3.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isLightGray<sp/>=<sp/>[](SharedPtr&lt;Run&gt;<sp/>r)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r-&gt;get_Font()-&gt;get_HighlightColor().ToArgb()<sp/>==<sp/><ref refid="class/system.drawing.color/_1a77db5e3307f15da66f743080172caa68" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGray</ref>().ToArgb();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ac5301693c4e792bcd5a479ef38fb8f8d" kindref="member" tooltip="A run of text.">NodeType::Run</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;Run&gt;&gt;()-&gt;LINQ_Count(isLightGray));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">NumberHexer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IReplacingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1af9076a3b0db42719d6e5fff0cecd794b" kindref="member" tooltip="Allows the user to specify what happens to the current match during a replace operation.">ReplaceAction</ref><sp/>Replacing(SharedPtr&lt;ReplacingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentReplacementNumber++;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/><ref refid="struct/system.convert/_1a5ec7686ca1d45c99e58263fed936344c" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Convert::ToInt32</ref>(args-&gt;get_Match()-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_Replacement(String::Format(u</highlight><highlight class="stringliteral">&quot;0x{0:X}&quot;</highlight><highlight class="normal">,<sp/>number));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;Match<sp/>#{0}&quot;</highlight><highlight class="normal">,<sp/>mCurrentReplacementNumber));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\tOriginal<sp/>value:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_Match()-&gt;get_Value()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\tReplacement:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_Replacement()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\tOffset<sp/>in<sp/>parent<sp/>{0}<sp/>node:\t{1}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_MatchNode()-&gt;get_NodeType(),<sp/>args-&gt;get_MatchOffset()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::IsNullOrEmpty(args-&gt;get_GroupName())<sp/>?<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tGroup<sp/>index:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_GroupIndex())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tGroup<sp/>name:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_GroupName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReplaceAction::Replace;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetLog()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLog-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NumberHexer()<sp/>:<sp/>mCurrentReplacementNumber(0),<sp/>mLog(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Plain Text.">Text</ref>::StringBuilder&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCurrentReplacementNumber;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mLog;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="167" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a40435a47441b1b7933012777fbc2e583" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_paragraph_format" kindref="compound">Aspose::Words::ParagraphFormat</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::ParagraphFormat &gt; Aspose::Words::Replacing::FindReplaceOptions::get_ApplyParagraphFormat</definition>
        <argsstring>() const</argsstring>
        <name>get_ApplyParagraphFormat</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_ApplyParagraphFormat</qualifiedname>
        <briefdescription>
<para><ref refid="class_aspose_1_1_words_1_1_paragraph" kindref="compound">Paragraph</ref> formatting applied to new content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add formatting to paragraphs in which a find-and-replace operation has found matches. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Every<sp/>paragraph<sp/>that<sp/>ends<sp/>with<sp/>a<sp/>full<sp/>stop<sp/>like<sp/>this<sp/>one<sp/>will<sp/>be<sp/>right<sp/>aligned.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>one<sp/>will<sp/>not!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>one<sp/>also<sp/>will.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;ParagraphCollection&gt;<sp/>paragraphs<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a945d5e233cf7d6240f6b783b36a374ff" kindref="member" tooltip="Text is aligned to the left.">ParagraphAlignment::Left</ref>,<sp/>paragraphs-&gt;idx_get(0)-&gt;get_ParagraphFormat()-&gt;get_Alignment());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a945d5e233cf7d6240f6b783b36a374ff" kindref="member" tooltip="Text is aligned to the left.">ParagraphAlignment::Left</ref>,<sp/>paragraphs-&gt;idx_get(1)-&gt;get_ParagraphFormat()-&gt;get_Alignment());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a945d5e233cf7d6240f6b783b36a374ff" kindref="member" tooltip="Text is aligned to the left.">ParagraphAlignment::Left</ref>,<sp/>paragraphs-&gt;idx_get(2)-&gt;get_ParagraphFormat()-&gt;get_Alignment());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Alignment&quot;<sp/>property<sp/>to<sp/>&quot;ParagraphAlignment.Right&quot;<sp/>to<sp/>right-align<sp/>every<sp/>paragraph</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>contains<sp/>a<sp/>match<sp/>that<sp/>the<sp/>find-and-replace<sp/>operation<sp/>finds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;get_ApplyParagraphFormat()-&gt;set_Alignment(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a92b09c7c48c520c3c55e497875da437c" kindref="member" tooltip="Text is aligned to the right.">ParagraphAlignment::Right</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Replace<sp/>every<sp/>full<sp/>stop<sp/>that<sp/>is<sp/>right<sp/>before<sp/>a<sp/>paragraph<sp/>break<sp/>with<sp/>an<sp/>exclamation<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;.&amp;p&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;!&amp;p&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>count);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a92b09c7c48c520c3c55e497875da437c" kindref="member" tooltip="Text is aligned to the right.">ParagraphAlignment::Right</ref>,<sp/>paragraphs-&gt;idx_get(0)-&gt;get_ParagraphFormat()-&gt;get_Alignment());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a945d5e233cf7d6240f6b783b36a374ff" kindref="member" tooltip="Text is aligned to the left.">ParagraphAlignment::Left</ref>,<sp/>paragraphs-&gt;idx_get(1)-&gt;get_ParagraphFormat()-&gt;get_Alignment());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae0fabf27a56cdd6988da762600dd9007a92b09c7c48c520c3c55e497875da437c" kindref="member" tooltip="Text is aligned to the right.">ParagraphAlignment::Right</ref>,<sp/>paragraphs-&gt;idx_get(2)-&gt;get_ParagraphFormat()-&gt;get_Alignment());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Every<sp/>paragraph<sp/>that<sp/>ends<sp/>with<sp/>a<sp/>full<sp/>stop<sp/>like<sp/>this<sp/>one<sp/>will<sp/>be<sp/>right<sp/>aligned!\r&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;This<sp/>one<sp/>will<sp/>not!\r&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;This<sp/>one<sp/>also<sp/>will!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="206" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a6dc8922acf6233156fca4118d019ae60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889c" kindref="member">Aspose::Words::Replacing::FindReplaceDirection</ref></type>
        <definition>Aspose::Words::Replacing::FindReplaceDirection Aspose::Words::Replacing::FindReplaceOptions::get_Direction</definition>
        <argsstring>() const</argsstring>
        <name>get_Direction</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_Direction</qualifiedname>
        <briefdescription>
<para>Selects direction for replace. Default value is <ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889ca67d2f6740a8eaebf4d5c6f79be8da481" kindref="member">Forward</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to determine which direction a find-and-replace operation traverses the document in. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Direction(<ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889c" kindref="member" tooltip="Specifies direction for replace operations.">FindReplaceDirection</ref><sp/>findReplaceDirection)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>three<sp/>runs<sp/>which<sp/>we<sp/>can<sp/>search<sp/>for<sp/>using<sp/>a<sp/>regex<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>one<sp/>of<sp/>those<sp/>runs<sp/>inside<sp/>a<sp/>text<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Match<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Match<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Match<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Match<sp/>4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>the<sp/>&quot;ReplacingCallback&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>callback<sp/>=<sp/>MakeObject&lt;ExRange::TextReplacementRecorder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ReplacingCallback(callback);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Direction&quot;<sp/>property<sp/>to<sp/>&quot;FindReplaceDirection.Backward&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>start<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>range,<sp/>and<sp/>traverse<sp/>back<sp/>to<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Direction&quot;<sp/>property<sp/>to<sp/>&quot;FindReplaceDirection.Backward&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>start<sp/>from<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>range,<sp/>and<sp/>traverse<sp/>to<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_Direction(findReplaceDirection);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_Range()-&gt;Replace(MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;Match<sp/>\\d*&quot;</highlight><highlight class="normal">),<sp/>u</highlight><highlight class="stringliteral">&quot;Replacement&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Replacement.\r&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Replacement.\r&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Replacement.\r&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Replacement.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(findReplaceDirection)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889ca67d2f6740a8eaebf4d5c6f79be8da481" kindref="member" tooltip="Matched items are replaced from first to last.">FindReplaceDirection::Forward</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Match<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Match<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Match<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Match<sp/>4&quot;</highlight><highlight class="normal">}),<sp/>callback-&gt;get_Matches());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889cab3263eb38f8903efc271cc7a760da510" kindref="member" tooltip="Matched items are replaced from last back to first.">FindReplaceDirection::Backward</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Match<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Match<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Match<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Match<sp/>1&quot;</highlight><highlight class="normal">}),<sp/>callback-&gt;get_Matches());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">TextReplacementRecorder<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IReplacingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;String&gt;&gt;<sp/>get_Matches()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMatches;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TextReplacementRecorder()<sp/>:<sp/>mMatches(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;String&gt;&gt;<sp/>mMatches;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1af9076a3b0db42719d6e5fff0cecd794b" kindref="member" tooltip="Allows the user to specify what happens to the current match during a replace operation.">ReplaceAction</ref><sp/>Replacing(SharedPtr&lt;ReplacingArgs&gt;<sp/>e)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_Matches()-&gt;Add(e-&gt;get_Match()-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReplaceAction::Replace;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="280" column="55"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad4fadcfddad4b02954ac4ddcac841249" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_FindWholeWordsOnly</definition>
        <argsstring>() const</argsstring>
        <name>get_FindWholeWordsOnly</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_FindWholeWordsOnly</qualifiedname>
        <briefdescription>
<para>True indicates the oldValue must be a standalone word. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to toggle standalone word-only find-and-replace operations. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Jackson<sp/>will<sp/>meet<sp/>you<sp/>in<sp/>Jacksonville.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;FindWholeWordsOnly&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>replace<sp/>the<sp/>found<sp/>text<sp/>if<sp/>it<sp/>is<sp/>not<sp/>a<sp/>part<sp/>of<sp/>another<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;FindWholeWordsOnly&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>replace<sp/>all<sp/>text<sp/>regardless<sp/>of<sp/>its<sp/>surroundings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FindWholeWordsOnly(findWholeWordsOnly);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Jackson&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Louis&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(findWholeWordsOnly<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Louis<sp/>will<sp/>meet<sp/>you<sp/>in<sp/>Jacksonville.&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Louis<sp/>will<sp/>meet<sp/>you<sp/>in<sp/>Louisville.&quot;</highlight><highlight class="normal">),<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="334" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a64bceaeb51010a5242d4264217962883" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreDeleted</definition>
        <argsstring>() const</argsstring>
        <name>get_IgnoreDeleted</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreDeleted</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either to ignore text inside delete revisions. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to include or ignore text inside delete revisions during a find-and-replace operation. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>again!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>tracking<sp/>revisions<sp/>and<sp/>remove<sp/>the<sp/>second<sp/>paragraph,<sp/>which<sp/>will<sp/>create<sp/>a<sp/>delete<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>That<sp/>paragraph<sp/>will<sp/>persist<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>delete<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StopTrackRevisions();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_IsDeleteRevision());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find<sp/>and<sp/>replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreDeleted&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>ignore<sp/>paragraphs<sp/>that<sp/>are<sp/>delete<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreDeleted&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>also<sp/>search<sp/>for<sp/>text<sp/>inside<sp/>delete<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_IgnoreDeleted(ignoreTextInsideDeleteRevisions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Greetings&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(ignoreTextInsideDeleteRevisions<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Greetings<sp/>world!\rHello<sp/>again!&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Greetings<sp/>world!\rGreetings<sp/>again!&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="595" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a3304af0bc08dd42c8d06c12a156e4966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFieldCodes</definition>
        <argsstring>() const</argsstring>
        <name>get_IgnoreFieldCodes</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFieldCodes</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either to ignore text inside field codes. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This option affects only field codes (it does not ignore nodes between <ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379aee8d639a38f8001a785215f8bcd940b8" kindref="member">FieldSeparator</ref> and <ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a687d21072c62d81529f6220b650c1783" kindref="member">FieldEnd</ref>).</para>
<para>To ignore whole field, please use corresponding option <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad1d6ffd2811f93722fb7c6e7a25ca641" kindref="member">IgnoreFields</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="683" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad1d6ffd2811f93722fb7c6e7a25ca641" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFields</definition>
        <argsstring>() const</argsstring>
        <name>get_IgnoreFields</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFields</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either to ignore text inside fields. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This option affects whole field (all nodes between <ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3cc2f5f11d41e29662a3f83110ccb6d3" kindref="member">FieldStart</ref> and <ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a687d21072c62d81529f6220b650c1783" kindref="member">FieldEnd</ref>).</para>
<para>To ignore only field codes, please use corresponding option <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a3304af0bc08dd42c8d06c12a156e4966" kindref="member">IgnoreFieldCodes</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to ignore text inside fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;QUOTE&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Hello<sp/>again!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreFields&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>ignore<sp/>text<sp/>inside<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreFields&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>also<sp/>search<sp/>for<sp/>text<sp/>inside<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_IgnoreFields(ignoreTextInsideFields);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Greetings&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(ignoreTextInsideFields<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Greetings<sp/>world!\r\u0013QUOTE\u0014Hello<sp/>again!\u0015&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Greetings<sp/>world!\r\u0013QUOTE\u0014Greetings<sp/>again!\u0015&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="671" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ac8eab04a2527ebde0439e560053125f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFootnotes</definition>
        <argsstring>() const</argsstring>
        <name>get_IgnoreFootnotes</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFootnotes</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either to ignore footnotes. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to ignore footnotes during a find-and-replace operation. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertFootnote(FootnoteType::Footnote,<sp/>u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertFootnote(FootnoteType::Endnote,<sp/>u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreFootnotes&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>ignore<sp/>text<sp/>inside<sp/>footnotes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreFootnotes&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>also<sp/>search<sp/>for<sp/>text<sp/>inside<sp/>footnotes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_IgnoreFootnotes(isIgnoreFootnotes);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Replaced<sp/>Lorem<sp/>ipsum&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="714" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1acab2ad6dcd055c092aa45aca692471d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreInserted</definition>
        <argsstring>() const</argsstring>
        <name>get_IgnoreInserted</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreInserted</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either to ignore text inside insert revisions. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to include or ignore text inside insert revisions during a find-and-replace operation. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Start<sp/>tracking<sp/>revisions<sp/>and<sp/>insert<sp/>a<sp/>paragraph.<sp/>That<sp/>paragraph<sp/>will<sp/>be<sp/>an<sp/>insert<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>again!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StopTrackRevisions();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_IsInsertRevision());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreInserted&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>ignore<sp/>paragraphs<sp/>that<sp/>are<sp/>insert<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IgnoreInserted&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the<sp/>find-and-replace</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operation<sp/>to<sp/>also<sp/>search<sp/>for<sp/>text<sp/>inside<sp/>insert<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_IgnoreInserted(ignoreTextInsideInsertRevisions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Hello&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Greetings&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(ignoreTextInsideInsertRevisions<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Greetings<sp/>world!\rHello<sp/>again!&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Greetings<sp/>world!\rGreetings<sp/>again!&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="633" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ab7f56b80dd50e4d503101e30f704c136" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreStructuredDocumentTags</definition>
        <argsstring>() const</argsstring>
        <name>get_IgnoreStructuredDocumentTags</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreStructuredDocumentTags</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either to ignore content of <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref>. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When this option is set to <computeroutput>true</computeroutput>, the content of <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref> will be treated as a simple text.</para>
<para>Otherwise, <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref> will be processed as standalone <ref refid="class_aspose_1_1_words_1_1_story" kindref="compound">Story</ref> and replacing pattern will be searched separately for each <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref>, so that if pattern crosses a <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref>, then replacement will not be performed for such pattern. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="810" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1af75c989500af7f70aa7e198f88e755d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_LegacyMode</definition>
        <argsstring>() const</argsstring>
        <name>get_LegacyMode</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_LegacyMode</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating that old find/replace algorithm is used. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to recognize and use substitutions within replacement patterns. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Jason<sp/>gave<sp/>money<sp/>to<sp/>Paul.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>regex<sp/>=<sp/>MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;([A-z]+)<sp/>gave<sp/>money<sp/>to<sp/>([A-z]+)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_UseSubstitutions(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>legacy<sp/>mode<sp/>does<sp/>not<sp/>support<sp/>many<sp/>advanced<sp/>features,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>set<sp/>it<sp/>to<sp/>&apos;false&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_LegacyMode(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(regex,<sp/>u</highlight><highlight class="stringliteral">&quot;$2<sp/>took<sp/>money<sp/>from<sp/>$1&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(doc-&gt;GetText(),<sp/>u</highlight><highlight class="stringliteral">&quot;Paul<sp/>took<sp/>money<sp/>from<sp/>Jason.\f&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="795" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ac482f46c21693d5cec8009789cfde18c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_MatchCase</definition>
        <argsstring>() const</argsstring>
        <name>get_MatchCase</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_MatchCase</qualifiedname>
        <briefdescription>
<para>True indicates case-sensitive comparison, false indicates case-insensitive comparison. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to toggle case sensitivity when performing a find-and-replace operation. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Ruby<sp/>bought<sp/>a<sp/>ruby<sp/>necklace.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;MatchCase&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>apply<sp/>case<sp/>sensitivity<sp/>while<sp/>finding<sp/>strings<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;MatchCase&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>ignore<sp/>character<sp/>case<sp/>while<sp/>searching<sp/>for<sp/>text<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_MatchCase(matchCase);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Ruby&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Jade&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(matchCase<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Jade<sp/>bought<sp/>a<sp/>ruby<sp/>necklace.&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Jade<sp/>bought<sp/>a<sp/>Jade<sp/>necklace.&quot;</highlight><highlight class="normal">),<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="307" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ada2f7b98ffe3186c7867868ef135a783" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_i_replacing_callback" kindref="compound">Aspose::Words::Replacing::IReplacingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Replacing::IReplacingCallback &gt; Aspose::Words::Replacing::FindReplaceOptions::get_ReplacingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_ReplacingCallback</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_ReplacingCallback</qualifiedname>
        <briefdescription>
<para>The user-defined method which is called before every replace occurrence. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to replace all occurrences of a regular expression pattern with another string, while tracking all such replacements. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReplaceWithCallback()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Our<sp/>new<sp/>location<sp/>in<sp/>New<sp/>York<sp/>City<sp/>is<sp/>opening<sp/>tomorrow.<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Hope<sp/>to<sp/>see<sp/>all<sp/>our<sp/>NYC-based<sp/>customers<sp/>at<sp/>the<sp/>opening!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>callback<sp/>that<sp/>tracks<sp/>any<sp/>replacements<sp/>that<sp/>the<sp/>&quot;Replace&quot;<sp/>method<sp/>will<sp/>make.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>logger<sp/>=<sp/>MakeObject&lt;ExRange::TextFindAndReplacementLogger&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ReplacingCallback(logger);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_Range()-&gt;Replace(MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;New<sp/>York<sp/>City|NYC&quot;</highlight><highlight class="normal">),<sp/>u</highlight><highlight class="stringliteral">&quot;Washington&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Our<sp/>new<sp/>location<sp/>in<sp/>(Old<sp/>value:\&quot;New<sp/>York<sp/>City\&quot;)<sp/>Washington<sp/>is<sp/>opening<sp/>tomorrow.<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;Hope<sp/>to<sp/>see<sp/>all<sp/>our<sp/>(Old<sp/>value:\&quot;NYC\&quot;)<sp/>Washington-based<sp/>customers<sp/>at<sp/>the<sp/>opening!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\&quot;New<sp/>York<sp/>City\&quot;<sp/>converted<sp/>to<sp/>\&quot;Washington\&quot;<sp/>20<sp/>characters<sp/>into<sp/>a<sp/>Run<sp/>node.\r\n&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;NYC\&quot;<sp/>converted<sp/>to<sp/>\&quot;Washington\&quot;<sp/>42<sp/>characters<sp/>into<sp/>a<sp/>Run<sp/>node.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger-&gt;GetLog().Trim());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">TextFindAndReplacementLogger<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IReplacingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetLog()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLog-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TextFindAndReplacementLogger()<sp/>:<sp/>mLog(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Plain Text.">Text</ref>::StringBuilder&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mLog;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1af9076a3b0db42719d6e5fff0cecd794b" kindref="member" tooltip="Allows the user to specify what happens to the current match during a replace operation.">ReplaceAction</ref><sp/>Replacing(SharedPtr&lt;ReplacingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\&quot;{0}\&quot;<sp/>converted<sp/>to<sp/>\&quot;{1}\&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_Match()-&gt;get_Value(),<sp/>args-&gt;get_Replacement())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>characters<sp/>into<sp/>a<sp/>{1}<sp/>node.&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_MatchOffset(),<sp/>args-&gt;get_MatchNode()-&gt;get_NodeType()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_Replacement(String::Format(u</highlight><highlight class="stringliteral">&quot;(Old<sp/>value:\&quot;{0}\&quot;)<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_Match()-&gt;get_Value(),<sp/>args-&gt;get_Replacement()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReplaceAction::Replace;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>Shows how to apply a different font to new content via <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options" kindref="compound">FindReplaceOptions</ref>. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConvertNumbersToHexadecimal()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Numbers<sp/>that<sp/>the<sp/>find-and-replace<sp/>operation<sp/>will<sp/>convert<sp/>to<sp/>hexadecimal<sp/>and<sp/>highlight:\n&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;123,<sp/>456,<sp/>789<sp/>and<sp/>17379.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;HighlightColor&quot;<sp/>property<sp/>to<sp/>a<sp/>background<sp/>color<sp/>that<sp/>we<sp/>want<sp/>to<sp/>apply<sp/>to<sp/>the<sp/>operation&apos;s<sp/>resulting<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;get_ApplyFont()-&gt;set_HighlightColor(<ref refid="class/system.drawing.color/_1a77db5e3307f15da66f743080172caa68" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGray</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numberHexer<sp/>=<sp/>MakeObject&lt;ExRange::NumberHexer&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ReplacingCallback(numberHexer);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>replacementCount<sp/>=<sp/>doc-&gt;get_Range()-&gt;Replace(MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;[0-9]+&quot;</highlight><highlight class="normal">),<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>numberHexer-&gt;GetLog()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>replacementCount);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Numbers<sp/>that<sp/>the<sp/>find-and-replace<sp/>operation<sp/>will<sp/>convert<sp/>to<sp/>hexadecimal<sp/>and<sp/>highlight:\r&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;0x7B,<sp/>0x1C8,<sp/>0x315<sp/>and<sp/>0x43E3.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>isLightGray<sp/>=<sp/>[](SharedPtr&lt;Run&gt;<sp/>r)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r-&gt;get_Font()-&gt;get_HighlightColor().ToArgb()<sp/>==<sp/><ref refid="class/system.drawing.color/_1a77db5e3307f15da66f743080172caa68" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_LightGray</ref>().ToArgb();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ac5301693c4e792bcd5a479ef38fb8f8d" kindref="member" tooltip="A run of text.">NodeType::Run</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;Run&gt;&gt;()-&gt;LINQ_Count(isLightGray));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">NumberHexer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IReplacingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1af9076a3b0db42719d6e5fff0cecd794b" kindref="member" tooltip="Allows the user to specify what happens to the current match during a replace operation.">ReplaceAction</ref><sp/>Replacing(SharedPtr&lt;ReplacingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurrentReplacementNumber++;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number<sp/>=<sp/><ref refid="struct/system.convert/_1a5ec7686ca1d45c99e58263fed936344c" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Convert::ToInt32</ref>(args-&gt;get_Match()-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_Replacement(String::Format(u</highlight><highlight class="stringliteral">&quot;0x{0:X}&quot;</highlight><highlight class="normal">,<sp/>number));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;Match<sp/>#{0}&quot;</highlight><highlight class="normal">,<sp/>mCurrentReplacementNumber));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\tOriginal<sp/>value:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_Match()-&gt;get_Value()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\tReplacement:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_Replacement()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::Format(u</highlight><highlight class="stringliteral">&quot;\tOffset<sp/>in<sp/>parent<sp/>{0}<sp/>node:\t{1}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_MatchNode()-&gt;get_NodeType(),<sp/>args-&gt;get_MatchOffset()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog-&gt;AppendLine(String::IsNullOrEmpty(args-&gt;get_GroupName())<sp/>?<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tGroup<sp/>index:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_GroupIndex())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tGroup<sp/>name:\t{0}&quot;</highlight><highlight class="normal">,<sp/>args-&gt;get_GroupName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReplaceAction::Replace;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetLog()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLog-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NumberHexer()<sp/>:<sp/>mCurrentReplacementNumber(0),<sp/>mLog(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Plain Text.">Text</ref>::StringBuilder&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCurrentReplacementNumber;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mLog;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="474" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1adec3ebd1778bced310a00d5f2e50533a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_SmartParagraphBreakReplacement</definition>
        <argsstring>() const</argsstring>
        <name>get_SmartParagraphBreakReplacement</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_SmartParagraphBreakReplacement</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating either it is allowed to replace paragraph break when there is no next sibling paragraph. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to remove paragraph from a table cell with a nested table. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>table<sp/>with<sp/>paragraph<sp/>and<sp/>inner<sp/>table<sp/>in<sp/>first<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;TEXT1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>following<sp/>option<sp/>is<sp/>set<sp/>to<sp/>&apos;true&apos;,<sp/>Aspose.Words<sp/>will<sp/>remove<sp/>paragraph&apos;s<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>completely<sp/>with<sp/>its<sp/>paragraph<sp/>mark.<sp/>Otherwise,<sp/>Aspose.Words<sp/>will<sp/>mimic<sp/>Word<sp/>and<sp/>remove</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>only<sp/>paragraph&apos;s<sp/>text<sp/>and<sp/>leaves<sp/>the<sp/>paragraph<sp/>mark<sp/>intact<sp/>(when<sp/>a<sp/>table<sp/>follows<sp/>the<sp/>text).</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_SmartParagraphBreakReplacement(isSmartParagraphBreakReplacement);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;TEXT1&amp;p&quot;</highlight><highlight class="normal">),<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Table.RemoveParagraphTextAndMark.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="845" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a212e01176ce322c42a729e84eb979914" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_UseLegacyOrder</definition>
        <argsstring>() const</argsstring>
        <name>get_UseLegacyOrder</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_UseLegacyOrder</qualifiedname>
        <briefdescription>
<para>True indicates that a text search is performed sequentially from top to bottom considering the text boxes. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to change the searching order of nodes when performing a find-and-replace text operation. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UseLegacyOrder(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useLegacyOrder)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>three<sp/>runs<sp/>which<sp/>we<sp/>can<sp/>search<sp/>for<sp/>using<sp/>a<sp/>regex<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>one<sp/>of<sp/>those<sp/>runs<sp/>inside<sp/>a<sp/>text<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>1]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>textBox<sp/>=<sp/>builder-&gt;InsertShape(ShapeType::TextBox,<sp/>100,<sp/>50);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>2]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;MoveTo(textBox-&gt;get_FirstParagraph());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>3]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>the<sp/>&quot;ReplacingCallback&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>callback<sp/>=<sp/>MakeObject&lt;ExRange::TextReplacementTracker&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ReplacingCallback(callback);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;UseLegacyOrder&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find-and-replace<sp/>operation<sp/>will<sp/>go<sp/>through<sp/>all<sp/>the<sp/>runs<sp/>outside<sp/>of<sp/>a<sp/>text<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>going<sp/>through<sp/>the<sp/>ones<sp/>inside<sp/>a<sp/>text<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;UseLegacyOrder&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find-and-replace<sp/>operation<sp/>will<sp/>go<sp/>over<sp/>all<sp/>the<sp/>runs<sp/>in<sp/>a<sp/>range<sp/>in<sp/>sequential<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_UseLegacyOrder(useLegacyOrder);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_Range()-&gt;Replace(MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;\\[tag<sp/>\\d*\\]&quot;</highlight><highlight class="normal">),<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;String&gt;&gt;<sp/>matches<sp/>=<sp/>MakeObject&lt;System::Collections::Generic::List&lt;String&gt;&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>matches-&gt;Add(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>1]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useLegacyOrder)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches-&gt;Add(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>3]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches-&gt;Add(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>2]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches-&gt;Add(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>2]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches-&gt;Add(u</highlight><highlight class="stringliteral">&quot;[tag<sp/>3]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASPOSE_ASSERT_EQ(matches,<sp/>callback-&gt;get_Matches());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">TextReplacementTracker<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IReplacingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;String&gt;&gt;<sp/>get_Matches()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mMatches;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TextReplacementTracker()<sp/>:<sp/>mMatches(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;String&gt;&gt;<sp/>mMatches;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_replacing_1af9076a3b0db42719d6e5fff0cecd794b" kindref="member" tooltip="Allows the user to specify what happens to the current match during a replace operation.">ReplaceAction</ref><sp/>Replacing(SharedPtr&lt;ReplacingArgs&gt;<sp/>e)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_Matches()-&gt;Add(e-&gt;get_Match()-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReplaceAction::Replace;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="555" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1e0e419d5b47cec8c4e37a6c242646b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Replacing::FindReplaceOptions::get_UseSubstitutions</definition>
        <argsstring>() const</argsstring>
        <name>get_UseSubstitutions</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::get_UseSubstitutions</qualifiedname>
        <briefdescription>
<para>Gets or sets a boolean value indicating whether to recognize and use substitutions within replacement patterns. The default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to recognize and use substitutions within replacement patterns. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Jason<sp/>gave<sp/>money<sp/>to<sp/>Paul.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>regex<sp/>=<sp/>MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;([A-z]+)<sp/>gave<sp/>money<sp/>to<sp/>([A-z]+)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_UseSubstitutions(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>legacy<sp/>mode<sp/>does<sp/>not<sp/>support<sp/>many<sp/>advanced<sp/>features,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>set<sp/>it<sp/>to<sp/>&apos;false&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_LegacyMode(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(regex,<sp/>u</highlight><highlight class="stringliteral">&quot;$2<sp/>took<sp/>money<sp/>from<sp/>$1&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(doc-&gt;GetText(),<sp/>u</highlight><highlight class="stringliteral">&quot;Paul<sp/>took<sp/>money<sp/>from<sp/>Jason.\f&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to replace the text with substitutions. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;John<sp/>sold<sp/>a<sp/>car<sp/>to<sp/>Paul.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>sold<sp/>a<sp/>house<sp/>to<sp/>Joe.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;UseSubstitutions&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>find-and-replace<sp/>operation<sp/>to<sp/>recognize<sp/>substitution<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;UseSubstitutions&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>ignore<sp/>substitution<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_UseSubstitutions(useSubstitutions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>regex<sp/>=<sp/>MakeObject&lt;System::Text::RegularExpressions::Regex&gt;(u</highlight><highlight class="stringliteral">&quot;([A-z]+)<sp/>sold<sp/>a<sp/>([A-z]+)<sp/>to<sp/>([A-z]+)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(regex,<sp/>u</highlight><highlight class="stringliteral">&quot;$3<sp/>bought<sp/>a<sp/>$2<sp/>from<sp/>$1&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(useSubstitutions<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Paul<sp/>bought<sp/>a<sp/>car<sp/>from<sp/>John.\rJoe<sp/>bought<sp/>a<sp/>house<sp/>from<sp/>Jane.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;$3<sp/>bought<sp/>a<sp/>$2<sp/>from<sp/>$1.\r$3<sp/>bought<sp/>a<sp/>$2<sp/>from<sp/>$1.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="767" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4d42a34df2ffd82b8cc11a6ab3588706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_Direction</definition>
        <argsstring>(Aspose::Words::Replacing::FindReplaceDirection value)</argsstring>
        <name>set_Direction</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_Direction</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_replacing_1ab46f3c47efd2255602d947b2f117889c" kindref="member">Aspose::Words::Replacing::FindReplaceDirection</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a6dc8922acf6233156fca4118d019ae60" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_Direction</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="283" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ab429766fe87a24df17c0e8b3d821d734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_FindWholeWordsOnly</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_FindWholeWordsOnly</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_FindWholeWordsOnly</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad4fadcfddad4b02954ac4ddcac841249" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_FindWholeWordsOnly</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="337" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4e77e5fdc05ef2f64d1c479e53575133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreDeleted</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IgnoreDeleted</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreDeleted</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a64bceaeb51010a5242d4264217962883" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreDeleted</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="598" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1af93ef9c720715c7cec0acb2c4ea31bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreFieldCodes</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IgnoreFieldCodes</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreFieldCodes</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a3304af0bc08dd42c8d06c12a156e4966" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFieldCodes</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="686" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1acf22269e0ea135c2328ee5d36bbc2f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreFields</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IgnoreFields</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreFields</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad1d6ffd2811f93722fb7c6e7a25ca641" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFields</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="674" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a168de3f5d68a1a1599e4c8ed96856923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreFootnotes</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IgnoreFootnotes</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreFootnotes</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ac8eab04a2527ebde0439e560053125f6" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreFootnotes</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="717" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1afd7198fbf4887db570f152224c669edf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreInserted</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IgnoreInserted</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreInserted</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1acab2ad6dcd055c092aa45aca692471d4" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreInserted</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="636" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad46129b37a1cf79f994c530383523629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreStructuredDocumentTags</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IgnoreStructuredDocumentTags</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_IgnoreStructuredDocumentTags</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ab7f56b80dd50e4d503101e30f704c136" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_IgnoreStructuredDocumentTags</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="813" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a8d80d6805b1d57b8600568c0ede00cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_LegacyMode</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_LegacyMode</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_LegacyMode</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1af75c989500af7f70aa7e198f88e755d5" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_LegacyMode</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="798" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a198c85f044a76243f4d3aa7ebe3048e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_MatchCase</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_MatchCase</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_MatchCase</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ac482f46c21693d5cec8009789cfde18c" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_MatchCase</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="310" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a024f08d84dda3f1e16e6794e9713a56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_ReplacingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Replacing::IReplacingCallback &gt; &amp;value)</argsstring>
        <name>set_ReplacingCallback</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_ReplacingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_i_replacing_callback" kindref="compound">Aspose::Words::Replacing::IReplacingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ada2f7b98ffe3186c7867868ef135a783" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_ReplacingCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="477" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1abe9c85f6e78c9c5557759c29ced84938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_SmartParagraphBreakReplacement</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_SmartParagraphBreakReplacement</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_SmartParagraphBreakReplacement</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1adec3ebd1778bced310a00d5f2e50533a" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_SmartParagraphBreakReplacement</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="848" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a3d0e0bd8d1988411d66292fae5d5f6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_UseLegacyOrder</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UseLegacyOrder</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_UseLegacyOrder</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a212e01176ce322c42a729e84eb979914" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_UseLegacyOrder</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="558" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a99211465e9afc8929516cd81362c9104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Replacing::FindReplaceOptions::set_UseSubstitutions</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UseSubstitutions</name>
        <qualifiedname>Aspose::Words::Replacing::FindReplaceOptions::set_UseSubstitutions</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1e0e419d5b47cec8c4e37a6c242646b8" kindref="member">Aspose::Words::Replacing::FindReplaceOptions::get_UseSubstitutions</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="770" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specifies options for find/replace operations. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to toggle case sensitivity when performing a find-and-replace operation. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Ruby<sp/>bought<sp/>a<sp/>ruby<sp/>necklace.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;MatchCase&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>apply<sp/>case<sp/>sensitivity<sp/>while<sp/>finding<sp/>strings<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;MatchCase&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>ignore<sp/>character<sp/>case<sp/>while<sp/>searching<sp/>for<sp/>text<sp/>to<sp/>replace.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_MatchCase(matchCase);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Ruby&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Jade&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(matchCase<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Jade<sp/>bought<sp/>a<sp/>ruby<sp/>necklace.&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Jade<sp/>bought<sp/>a<sp/>Jade<sp/>necklace.&quot;</highlight><highlight class="normal">),<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting></para>
<para>Shows how to toggle standalone word-only find-and-replace operations. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Jackson<sp/>will<sp/>meet<sp/>you<sp/>in<sp/>Jacksonville.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>&quot;FindReplaceOptions&quot;<sp/>object<sp/>to<sp/>modify<sp/>the<sp/>find-and-replace<sp/>process.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;FindReplaceOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;FindWholeWordsOnly&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>replace<sp/>the<sp/>found<sp/>text<sp/>if<sp/>it<sp/>is<sp/>not<sp/>a<sp/>part<sp/>of<sp/>another<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;FindWholeWordsOnly&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>replace<sp/>all<sp/>text<sp/>regardless<sp/>of<sp/>its<sp/>surroundings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FindWholeWordsOnly(findWholeWordsOnly);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;Replace(u</highlight><highlight class="stringliteral">&quot;Jackson&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Louis&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(findWholeWordsOnly<sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Louis<sp/>will<sp/>meet<sp/>you<sp/>in<sp/>Jacksonville.&quot;</highlight><highlight class="normal">)<sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Louis<sp/>will<sp/>meet<sp/>you<sp/>in<sp/>Louisville.&quot;</highlight><highlight class="normal">),<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Replacing::FindReplaceOptions</label>
        <link refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Replacing::FindReplaceOptions</label>
        <link refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" line="79" column="1" bodyfile="Aspose.Words.Cpp/Replacing/FindReplaceOptions.h" bodystart="80" bodyend="878"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1f30b2888d0c7ae82c51c7c0253d1519" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4ba15b8af44992953b1d5d73cb665035" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>FindReplaceOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a0173012621760172dfb0ce2a3044bce8" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>FindReplaceOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a109efaf98b4bc91ee311819ca5adf9cd" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>FindReplaceOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a833da15e6566a35c622b1c28652286b4" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>FindReplaceOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a2b0e5c67555e14254c668fbfcc90854a" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_ApplyFont</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a40435a47441b1b7933012777fbc2e583" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_ApplyParagraphFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a6dc8922acf6233156fca4118d019ae60" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_Direction</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad4fadcfddad4b02954ac4ddcac841249" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_FindWholeWordsOnly</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a64bceaeb51010a5242d4264217962883" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_IgnoreDeleted</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a3304af0bc08dd42c8d06c12a156e4966" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_IgnoreFieldCodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad1d6ffd2811f93722fb7c6e7a25ca641" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_IgnoreFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ac8eab04a2527ebde0439e560053125f6" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_IgnoreFootnotes</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1acab2ad6dcd055c092aa45aca692471d4" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_IgnoreInserted</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ab7f56b80dd50e4d503101e30f704c136" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_IgnoreStructuredDocumentTags</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1af75c989500af7f70aa7e198f88e755d5" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_LegacyMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ac482f46c21693d5cec8009789cfde18c" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_MatchCase</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ada2f7b98ffe3186c7867868ef135a783" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_ReplacingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1adec3ebd1778bced310a00d5f2e50533a" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_SmartParagraphBreakReplacement</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a212e01176ce322c42a729e84eb979914" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_UseLegacyOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1e0e419d5b47cec8c4e37a6c242646b8" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>get_UseSubstitutions</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a2456707944f15b988c40355f3c04a0ab" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a07fd9dd79ed951df8f8c4340e2319603" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4ed669847b205f51ff5e9427779b19d7" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField10</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a9ac70971dbb855177ef3ecbc0b8f4266" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField11</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1aa3495bc3fc171c06319d4c7f718ad590" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField12</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1a072332fef5c4ecf2bdc8f2b1ee4354" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField13</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a1d20114352693eca31e676cac718b8b3" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField14</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1abd0e251f6ef1e280f1700bc56fdd8f66" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField15</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a917d803c5748c455309869acb7995a0a" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField16</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a0900489e1f859d9e11e3fbfd7e4013df" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField17</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1abef2facebb3fbceab50f1a19d75d17d1" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad0ffa84ff3e4ded657acf67016e4e2d9" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a5b8d47be632846d0beaa8b867c58b384" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a33b2835cc744d95ea303961a7df5171b" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a743974b085bc3daa1968ca51c3c8b190" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a46d673caf0555a101b710db34d9154af" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a72c9437da2fe35b3237089071b9a6eed" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField8</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a79a96d2d439fe2634237177eaa4c9fa5" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>mField9</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad37f32cb559e74a9adcaa6b0106360d5" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4d42a34df2ffd82b8cc11a6ab3588706" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_Direction</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ab429766fe87a24df17c0e8b3d821d734" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_FindWholeWordsOnly</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a4e77e5fdc05ef2f64d1c479e53575133" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_IgnoreDeleted</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1af93ef9c720715c7cec0acb2c4ea31bb6" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_IgnoreFieldCodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1acf22269e0ea135c2328ee5d36bbc2f33" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_IgnoreFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a168de3f5d68a1a1599e4c8ed96856923" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_IgnoreFootnotes</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1afd7198fbf4887db570f152224c669edf" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_IgnoreInserted</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1ad46129b37a1cf79f994c530383523629" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_IgnoreStructuredDocumentTags</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a8d80d6805b1d57b8600568c0ede00cf0" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_LegacyMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a198c85f044a76243f4d3aa7ebe3048e0" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_MatchCase</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a024f08d84dda3f1e16e6794e9713a56e" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_ReplacingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1abe9c85f6e78c9c5557759c29ced84938" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_SmartParagraphBreakReplacement</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a3d0e0bd8d1988411d66292fae5d5f6f0" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_UseLegacyOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a99211465e9afc8929516cd81362c9104" prot="public" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>set_UseSubstitutions</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a83492b7bf7caf162e9bb2ba8532b8219" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_replacing_1_1_find_replace_options_1a6aeb1dfe1f2f0c4a6b4306bb122de56b" prot="private" virt="non-virtual"><scope>Aspose::Words::Replacing::FindReplaceOptions</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
