<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Markup::StructuredDocumentTag</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_composite_node" prot="public" virt="non-virtual">Aspose::Words::CompositeNode</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Markup::IMarkupNode</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Revisions::ITrackableNode</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::IRunAttrSource</basecompoundref>
    <basecompoundref refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag" prot="public" virt="non-virtual">Aspose::Words::Markup::IStructuredDocumentTag</basecompoundref>
    <includes refid="_structured_document_tag_8h" local="no">Aspose.Words.Cpp/Markup/StructuredDocumentTag.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9e032d84d8cfdac5801ca15f5f0b7e6a" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_composite_node" kindref="compound">Aspose::Words::CompositeNode</ref></type>
        <definition>typedef Aspose::Words::CompositeNode Aspose::Words::Markup::StructuredDocumentTag::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="135" column="42" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa05b4a0939387c844a9302e019055868" prot="private" static="no">
        <type>Aspose::Words::Markup::IMarkupNode</type>
        <definition>typedef Aspose::Words::Markup::IMarkupNode Aspose::Words::Markup::StructuredDocumentTag::BaseType1</definition>
        <argsstring></argsstring>
        <name>BaseType1</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::BaseType1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="136" column="48" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a191a6614b0e7c788cd12a65b0bbe2c0e" prot="private" static="no">
        <type>Aspose::Words::Revisions::ITrackableNode</type>
        <definition>typedef Aspose::Words::Revisions::ITrackableNode Aspose::Words::Markup::StructuredDocumentTag::BaseType2</definition>
        <argsstring></argsstring>
        <name>BaseType2</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::BaseType2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="137" column="54" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a58e0ac94f9f59418e733383d9d4b28fe" prot="private" static="no">
        <type>Aspose::Words::IRunAttrSource</type>
        <definition>typedef Aspose::Words::IRunAttrSource Aspose::Words::Markup::StructuredDocumentTag::BaseType3</definition>
        <argsstring></argsstring>
        <name>BaseType3</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::BaseType3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="138" column="43" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad5f1f06511e982291ec5715d09975652" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag" kindref="compound">Aspose::Words::Markup::IStructuredDocumentTag</ref></type>
        <definition>typedef Aspose::Words::Markup::IStructuredDocumentTag Aspose::Words::Markup::StructuredDocumentTag::BaseType4</definition>
        <argsstring></argsstring>
        <name>BaseType4</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::BaseType4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="139" column="59" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ae662eeb5e4f1952e978598da28f502de" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref></type>
        <definition>typedef StructuredDocumentTag Aspose::Words::Markup::StructuredDocumentTag::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="134" column="35" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac6906a5154accaa6bbb855f2f5be8170" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_composite_node" kindref="compound">BaseType</ref>, BaseType1, BaseType2, BaseType3, <ref refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag" kindref="compound">BaseType4</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType, BaseType1, BaseType2, BaseType3, BaseType4&gt; Aspose::Words::Markup::StructuredDocumentTag::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="141" column="37" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a29fa29169c2b0fc618a1c786355293a9" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1847" column="20" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aba296e2d8c30b050ad65de17a64b7e87" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1848" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aae118a4cd2eb8e070f36658782e5cc4b" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::mField10</definition>
        <argsstring></argsstring>
        <name>mField10</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1857" column="20" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1857" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a12474038e0b6561006390998e1558fcc" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField11</definition>
        <argsstring></argsstring>
        <name>mField11</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1858" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1858" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7cf7645b12a39f7448fd1f401051e2b0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField12</definition>
        <argsstring></argsstring>
        <name>mField12</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1859" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1859" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1acec3564262fe30c26228dbefd2117916" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField13</definition>
        <argsstring></argsstring>
        <name>mField13</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1860" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a40b5b05afb5c92bcab97277affb00cf2" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.weak_ptr/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::WeakPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::WeakPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField14</definition>
        <argsstring></argsstring>
        <name>mField14</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1861" column="21" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1861" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5d04182361fc6201c80cc0eeb213388d" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField15</definition>
        <argsstring></argsstring>
        <name>mField15</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1862" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1862" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5ca1ca87cc802e645ab35a6d5383210a" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField16</definition>
        <argsstring></argsstring>
        <name>mField16</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1863" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1863" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1fc3d998a6f4696e09a542a346a0b950" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField17</definition>
        <argsstring></argsstring>
        <name>mField17</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField17</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1864" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1864" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a41bc6a5fc85816ff6b2be53de0a39297" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField18</definition>
        <argsstring></argsstring>
        <name>mField18</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField18</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1865" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1865" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a3397851f6c42f244a3bceebc41981101" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField19</definition>
        <argsstring></argsstring>
        <name>mField19</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField19</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1866" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a38e51a259da576ce31d6b4efc994be41" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1849" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ade46c1ec1b406c1be2065331cceabd59" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::mField20</definition>
        <argsstring></argsstring>
        <name>mField20</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField20</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1867" column="20" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1867" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ace5dd6d591ccf807f4444fb5e21fc584" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::mField21</definition>
        <argsstring></argsstring>
        <name>mField21</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField21</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1868" column="20" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1868" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5486d47c51de55d5151bf58a5e816f67" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::mField22</definition>
        <argsstring></argsstring>
        <name>mField22</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField22</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1869" column="20" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1869" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a2f072cc90bcf9b56b37da576e7c776d7" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField23</definition>
        <argsstring></argsstring>
        <name>mField23</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField23</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1870" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6eec55d7242a66dbf280aa4c5ef9a9e2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField24</definition>
        <argsstring></argsstring>
        <name>mField24</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField24</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1871" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1871" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a85b23cb4cbe9c4663a0452e2349aeab4" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField25</definition>
        <argsstring></argsstring>
        <name>mField25</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField25</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1872" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1872" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0c84f3395026c0ba4ce5f7de14a8eab3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::StructuredDocumentTag::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1850" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1850" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6120e88aea46679f725fb217e4df2216" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1851" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1851" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a829b23a9db1fda9990d7a5f706bce362" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1852" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1852" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ab94ebb516653d878e6fe582e6328edfe" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1853" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1853" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1afaa963a04202764d3254a4f1473a576d" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1854" column="20" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1854" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a580f286e4b549e53af3ed5321cc6a8bd" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField8</definition>
        <argsstring></argsstring>
        <name>mField8</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1855" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1855" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aafee832a39f884507c12f5c71aee1286" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Markup::StructuredDocumentTag::mField9</definition>
        <argsstring></argsstring>
        <name>mField9</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::mField9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1856" column="23" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="1856" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4d51ab4ddb4a3de9dc4ed287ba869d38" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Markup::StructuredDocumentTag::~StructuredDocumentTag</definition>
        <argsstring>()</argsstring>
        <name>~StructuredDocumentTag</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::~StructuredDocumentTag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1833" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac2cf1bb1e3be69c7b4e0fa5a30a15923" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member">Aspose::Words::VisitorAction</ref></type>
        <definition>Aspose::Words::VisitorAction Aspose::Words::Markup::StructuredDocumentTag::AcceptEnd</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt;) override</argsstring>
        <name>AcceptEnd</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::AcceptEnd</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1acfce958aecccd97d02b9ce640c71adb0">AcceptEnd</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1830" column="37"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6de635017babf5a81a042346eb37ca20" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member">Aspose::Words::VisitorAction</ref></type>
        <definition>Aspose::Words::VisitorAction Aspose::Words::Markup::StructuredDocumentTag::AcceptStart</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt;) override</argsstring>
        <name>AcceptStart</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::AcceptStart</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1a4161179423c4ab1bd74fe8825dc06e2f">AcceptStart</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1829" column="37"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ae934933bace353b2c5d14cd6b594d3b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::CanInsert</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Node &gt;) override</argsstring>
        <name>CanInsert</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::CanInsert</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1a06d62fddfb918b33b307b9201c7951aa">CanInsert</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1831" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0e410cd8498ebdf1c4e775115d77877f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Node &gt; Aspose::Words::Markup::StructuredDocumentTag::Clone</definition>
        <argsstring>(bool, System::SharedPtr&lt; Aspose::Words::INodeCloningListener &gt;) override</argsstring>
        <name>Clone</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::Clone</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_composite_node_1ae90ecec13614a52c3ab6fe645fb88807">Clone</reimplements>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::INodeCloningListener &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1827" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a46bed203ff6959b121cd635196708fe2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">ThisType</ref> *</type>
        <definition>ThisType * Aspose::Words::Markup::StructuredDocumentTag::CppMemberwiseClone</definition>
        <argsstring>() const override</argsstring>
        <name>CppMemberwiseClone</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::CppMemberwiseClone</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a9358fb4208d077e8411fdf0d4e8553e5">CppMemberwiseClone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1884" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4a97d133ea053caac48e0e990d48aee6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751" kindref="member">Aspose::Words::Markup::MarkupLevel</ref></type>
        <definition>Aspose::Words::Markup::MarkupLevel Aspose::Words::Markup::StructuredDocumentTag::get_Level_IMarkupNode</definition>
        <argsstring>() override</argsstring>
        <name>get_Level_IMarkupNode</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Level_IMarkupNode</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1837" column="40"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0dcf1e6c7fbe48fcba9d53f881c9b7ae" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::IsRanged</definition>
        <argsstring>() override</argsstring>
        <name>IsRanged</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::IsRanged</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a62297a8525e14dc7e0df9bccda5b4472">IsRanged</reimplements>
        <briefdescription>
<para>Returns true if this instance is a ranged structured document tag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1874" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a283087e910b889c887044af01bd11ae7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::RemoveMoveRevisions</definition>
        <argsstring>() override</argsstring>
        <name>RemoveMoveRevisions</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::RemoveMoveRevisions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1877" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a406a753239bc9a99ce09ef0452de5031" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Markup::StructuredDocumentTag::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::RTTI_INFO_DECL_EX</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a4bd402ca17646eccea5b72ba142a55f4">RTTI_INFO_DECL_EX</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="142" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa871772e0c41923e5cd7487b7debf3e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Node &gt; Aspose::Words::Markup::StructuredDocumentTag::StructuredDocumentTagNode</definition>
        <argsstring>() override</argsstring>
        <name>StructuredDocumentTagNode</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::StructuredDocumentTagNode</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a685e9d5dab356b6a55d8e1c18a2840ef">StructuredDocumentTagNode</reimplements>
        <briefdescription>
<para>Returns <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Node</ref> object that implements this interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1875" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9cf84a54f86169d6555352a4f72b6b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Markup::StructuredDocumentTag::StructuredDocumentTag</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::DocumentBase &gt; &amp;doc, Aspose::Words::Markup::SdtType type, Aspose::Words::Markup::MarkupLevel level)</argsstring>
        <name>StructuredDocumentTag</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::StructuredDocumentTag</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_base" kindref="compound">Aspose::Words::DocumentBase</ref> &gt; &amp;</type>
          <declname>doc</declname>
        </param>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7" kindref="member">Aspose::Words::Markup::SdtType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751" kindref="member">Aspose::Words::Markup::MarkupLevel</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <bold>Structured document tag</bold> class. </para>
        </briefdescription>
        <detaileddescription>
<para>The following types of SDT can be created:</para>
<para><itemizedlist>
<listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member">Checkbox</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ae4ef5c80fe94d0cad53a95d50691a0c7" kindref="member">DropDownList</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7afd249a0c28275ebf9d4c8464ca2225cf" kindref="member">ComboBox</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member">Date</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a8015d4844c6e94e05ff443cc5cf816d4" kindref="member">BuildingBlockGallery</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a03937134cedab9078be39a77ee3a48a0" kindref="member">Group</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a8ae5811be1a55b9b8447ad2dbdadbf6e" kindref="member">Picture</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member">RichText</ref></para>
</listitem><listitem><para><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member">PlainText</ref></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>The owner document. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of SDT node. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Level of SDT node within the document.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Show how to create a structured document tag in the form of a check box. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtCheckBox<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member" tooltip="The SDT represents a checkbox when displayed in the document.">SdtType::Checkbox</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;set_Checked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>symbols<sp/>used<sp/>to<sp/>represent<sp/>the<sp/>checked/unchecked<sp/>state<sp/>of<sp/>a<sp/>checkbox<sp/>content<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetCheckedSymbol(0x00A9,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetUncheckedSymbol(0x00AE,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtCheckBox);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.CheckBox.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1552" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad0cd9ccc811dacc9451f1ff9e893fbbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::Accept</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt; visitor) override</argsstring>
        <name>Accept</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::Accept</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a556472e35a86820cf189f10594933f3e">Accept</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Accepts a visitor. </para>
        </briefdescription>
        <detaileddescription>
<para>Enumerates over this node and all of its children. Each node calls a corresponding method on <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">DocumentVisitor</ref>.</para>
<para>For more info see the Visitor design pattern.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The visitor that will visit the nodes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if all nodes were visited; false if <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">DocumentVisitor</ref> stopped the operation before visiting all nodes.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to print the node structure of every structured document tag in a document. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StructuredDocumentTagToText()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentVisitor-compatible<sp/>features.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>visitor<sp/>=<sp/>MakeObject&lt;ExDocumentVisitor::StructuredDocumentTagNodePrinter&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>get<sp/>a<sp/>composite<sp/>node<sp/>to<sp/>accept<sp/>a<sp/>document<sp/>visitor,<sp/>the<sp/>visitor<sp/>visits<sp/>the<sp/>accepting<sp/>node,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>traverses<sp/>all<sp/>the<sp/>node&apos;s<sp/>children<sp/>in<sp/>a<sp/>depth-first<sp/>manner.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>visitor<sp/>can<sp/>read<sp/>and<sp/>modify<sp/>each<sp/>visited<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Accept(visitor);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>visitor-&gt;GetText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">StructuredDocumentTagNodePrinter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>StructuredDocumentTagNodePrinter()<sp/>:<sp/>mVisitorIsInsideStructuredDocumentTag(false),<sp/>mDocTraversalDepth(0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mVisitorIsInsideStructuredDocumentTag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitRun(SharedPtr&lt;Run&gt;<sp/>run)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mVisitorIsInsideStructuredDocumentTag)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndentAndAppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;[Run]<sp/>\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>run-&gt;GetText()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitStructuredDocumentTagStart(SharedPtr&lt;StructuredDocumentTag&gt;<sp/>sdt)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndentAndAppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;[StructuredDocumentTag<sp/>start]<sp/>Title:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>sdt-&gt;get_Title());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDocTraversalDepth++;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitStructuredDocumentTagEnd(SharedPtr&lt;StructuredDocumentTag&gt;<sp/>sdt)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDocTraversalDepth--;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IndentAndAppendLine(u</highlight><highlight class="stringliteral">&quot;[StructuredDocumentTag<sp/>end]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mVisitorIsInsideStructuredDocumentTag;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mDocTraversalDepth;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IndentAndAppendLine(String<sp/>text)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mDocTraversalDepth;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Append(u</highlight><highlight class="stringliteral">&quot;|<sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(text);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1771" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa2d9e05cf36cb1eb934c886560b1b49a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::Clear</qualifiedname>
        <briefdescription>
<para>Clears contents of this structured document tag and displays a placeholder if it is defined. </para>
        </briefdescription>
        <detaileddescription>
<para>It is not possible to clear contents of a structured document tag if it has revisions.</para>
<para>If this structured document tag is mapped to custom XML (with using the <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" kindref="member">XmlMapping</ref> property), the referenced XML node is cleared.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to delete contents of structured document tag elements. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag,<sp/>and<sp/>then<sp/>append<sp/>it<sp/>to<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751ae1e4c8c9ccd9fc39c391da4bcd093fb2" kindref="member" tooltip="The element occurs at the block level (e.g. among tables and paragraphs).">MarkupLevel::Block</ref>);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendChild(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>text<sp/>box,<sp/>already<sp/>displays<sp/>placeholder<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>text.&quot;</highlight><highlight class="normal">,<sp/>tag-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(tag-&gt;get_IsShowingPlaceholderText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>building<sp/>block<sp/>with<sp/>text<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;GlossaryDocument&gt;<sp/>glossaryDoc<sp/>=<sp/>doc-&gt;get_GlossaryDocument();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>substituteBlock<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;My<sp/>placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;AppendChild(MakeObject&lt;Section&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;EnsureMinimum();</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(MakeObject&lt;Run&gt;(glossaryDoc,<sp/>u</highlight><highlight class="stringliteral">&quot;Custom<sp/>placeholder<sp/>text.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">glossaryDoc-&gt;AppendChild(substituteBlock);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>&quot;PlaceholderName&quot;<sp/>property<sp/>to<sp/>our<sp/>building<sp/>block&apos;s<sp/>name<sp/>to<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>display<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>building<sp/>block<sp/>in<sp/>place<sp/>of<sp/>the<sp/>original<sp/>default<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_PlaceholderName(u</highlight><highlight class="stringliteral">&quot;My<sp/>placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>placeholder<sp/>text.&quot;</highlight><highlight class="normal">,<sp/>tag-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(tag-&gt;get_IsShowingPlaceholderText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Edit<sp/>the<sp/>text<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>and<sp/>hide<sp/>the<sp/>placeholder<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>System::DynamicCast&lt;Run&gt;(tag-&gt;GetChild(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ac5301693c4e792bcd5a479ef38fb8f8d" kindref="member" tooltip="A run of text.">NodeType::Run</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">run-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;New<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_IsShowingPlaceholderText(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;New<sp/>text.&quot;</highlight><highlight class="normal">,<sp/>tag-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;Clear&quot;<sp/>method<sp/>to<sp/>clear<sp/>this<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>contents<sp/>and<sp/>display<sp/>the<sp/>placeholder<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(tag-&gt;get_IsShowingPlaceholderText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>placeholder<sp/>text.&quot;</highlight><highlight class="normal">,<sp/>tag-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1823" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aad91781129ccc751c3c48f897d6bb72d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6" kindref="member">Aspose::Words::Markup::SdtAppearance</ref></type>
        <definition>Aspose::Words::Markup::SdtAppearance Aspose::Words::Markup::StructuredDocumentTag::get_Appearance</definition>
        <argsstring>() const</argsstring>
        <name>get_Appearance</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Appearance</qualifiedname>
        <briefdescription>
<para>Gets/sets the appearance of a structured document tag. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="969" column="45"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1db4f840fe5a07b734b2c3e29f3638e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_BuildingBlockCategory</definition>
        <argsstring>()</argsstring>
        <name>get_BuildingBlockCategory</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_BuildingBlockCategory</qualifiedname>
        <briefdescription>
<para>Specifies category of building block for this <bold>SDT</bold> node. Can not be null. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a8015d4844c6e94e05ff443cc5cf816d4" kindref="member">BuildingBlockGallery</ref> and <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7abb78851a2f96b2906cf90b791650e724" kindref="member">DocPartObj</ref> SDT types. It is read-only for <bold>SDT</bold> of the document part type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a structured document tag as a building block, and set its category and gallery. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buildingBlockSdt<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a8015d4844c6e94e05ff443cc5cf816d4" kindref="member" tooltip="The SDT represents a building block gallery type.">SdtType::BuildingBlockGallery</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751ae1e4c8c9ccd9fc39c391da4bcd093fb2" kindref="member" tooltip="The element occurs at the block level (e.g. among tables and paragraphs).">MarkupLevel::Block</ref>);</highlight></codeline>
<codeline><highlight class="normal">buildingBlockSdt-&gt;set_BuildingBlockCategory(u</highlight><highlight class="stringliteral">&quot;Built-in&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">buildingBlockSdt-&gt;set_BuildingBlockGallery(u</highlight><highlight class="stringliteral">&quot;Table<sp/>of<sp/>Contents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendChild(buildingBlockSdt);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.BuildingBlockCategories.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1241" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a44c9533264386a67b42c3da2764107e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_BuildingBlockGallery</definition>
        <argsstring>()</argsstring>
        <name>get_BuildingBlockGallery</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_BuildingBlockGallery</qualifiedname>
        <briefdescription>
<para>Specifies type of building block for this <bold>SDT</bold>. Can not be null. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a8015d4844c6e94e05ff443cc5cf816d4" kindref="member">BuildingBlockGallery</ref> and <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7abb78851a2f96b2906cf90b791650e724" kindref="member">DocPartObj</ref> SDT types. It is read-only for <bold>SDT</bold> of the document part type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a structured document tag as a building block, and set its category and gallery. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buildingBlockSdt<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a8015d4844c6e94e05ff443cc5cf816d4" kindref="member" tooltip="The SDT represents a building block gallery type.">SdtType::BuildingBlockGallery</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751ae1e4c8c9ccd9fc39c391da4bcd093fb2" kindref="member" tooltip="The element occurs at the block level (e.g. among tables and paragraphs).">MarkupLevel::Block</ref>);</highlight></codeline>
<codeline><highlight class="normal">buildingBlockSdt-&gt;set_BuildingBlockCategory(u</highlight><highlight class="stringliteral">&quot;Built-in&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">buildingBlockSdt-&gt;set_BuildingBlockGallery(u</highlight><highlight class="stringliteral">&quot;Table<sp/>of<sp/>Contents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendChild(buildingBlockSdt);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.BuildingBlockCategories.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1214" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a21a44e41c4c76b38de9efcde2436d002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159" kindref="member">Aspose::Words::Markup::SdtCalendarType</ref></type>
        <definition>Aspose::Words::Markup::SdtCalendarType Aspose::Words::Markup::StructuredDocumentTag::get_CalendarType</definition>
        <argsstring>()</argsstring>
        <name>get_CalendarType</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_CalendarType</qualifiedname>
        <briefdescription>
<para>Specifies the type of calendar for this <bold>SDT</bold>. Default is <ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159a7a1920d61156abc05a60135aefe8bc67" kindref="member">Default</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member">Date</ref> SDT type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to prompt the user to enter a date with a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>a<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Microsoft<sp/>Word,<sp/>this<sp/>element<sp/>is<sp/>known<sp/>as<sp/>a<sp/>&quot;Date<sp/>picker<sp/>content<sp/>control&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>click<sp/>on<sp/>the<sp/>arrow<sp/>on<sp/>the<sp/>right<sp/>end<sp/>of<sp/>this<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>see<sp/>a<sp/>pop<sp/>up<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>clickable<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>that<sp/>popup<sp/>to<sp/>select<sp/>a<sp/>date<sp/>that<sp/>the<sp/>tag<sp/>will<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtDate<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member" tooltip="The SDT represents a date picker when displayed in the document.">SdtType::Date</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date,<sp/>according<sp/>to<sp/>the<sp/>Saudi<sp/>Arabian<sp/>Arabic<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayLocale(<ref refid="class/system.globalization.culture_info/_1a5b1038b1eb4ecfef1dfa381c9d2d53e0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::GetCultureInfo</ref>(u</highlight><highlight class="stringliteral">&quot;ar-SA&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>format<sp/>with<sp/>which<sp/>to<sp/>display<sp/>the<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayFormat(u</highlight><highlight class="stringliteral">&quot;dd<sp/>MMMM,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateStorageFormat(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member" tooltip="The date value for a date SDT is stored as a date in the standard XML Schema DateTime format.">SdtDateStorageFormat::DateTime</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date<sp/>according<sp/>to<sp/>the<sp/>Hijri<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_CalendarType(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159acfe71ee5c60b5a13bd9dd39be418f96c" kindref="member" tooltip="Specifies that the Hijri lunar calendar, as described by the Kingdom of Saudi Arabia,...">SdtCalendarType::Hijri</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Before<sp/>the<sp/>user<sp/>chooses<sp/>a<sp/>date<sp/>in<sp/>Microsoft<sp/>Word,<sp/>the<sp/>tag<sp/>will<sp/>display<sp/>the<sp/>text<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>a<sp/>date.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>the<sp/>tag&apos;s<sp/>calendar,<sp/>set<sp/>the<sp/>&quot;FullDate&quot;<sp/>property<sp/>to<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>a<sp/>default<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_FullDate(<ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref>(1440,<sp/>10,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtDate);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Date.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1187" column="47"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0b538d5ef0ab96c93a930ef1ca7c37c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::get_Checked</definition>
        <argsstring>()</argsstring>
        <name>get_Checked</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Checked</qualifiedname>
        <briefdescription>
<para>Gets/Sets current state of the Checkbox <bold>SDT</bold>. Default value for this property is false. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member">Checkbox</ref> SDT types.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Show how to create a structured document tag in the form of a check box. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtCheckBox<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member" tooltip="The SDT represents a checkbox when displayed in the document.">SdtType::Checkbox</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;set_Checked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>symbols<sp/>used<sp/>to<sp/>represent<sp/>the<sp/>checked/unchecked<sp/>state<sp/>of<sp/>a<sp/>checkbox<sp/>content<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetCheckedSymbol(0x00A9,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetUncheckedSymbol(0x00AE,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtCheckBox);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.CheckBox.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="910" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a65bc30b811a335e63c9eba947b8da56f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.drawing.color/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color</ref></type>
        <definition>System::Drawing::Color Aspose::Words::Markup::StructuredDocumentTag::get_Color</definition>
        <argsstring>() override</argsstring>
        <name>get_Color</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Color</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a8a70df7237d09b7d5de1415fe3873779">get_Color</reimplements>
        <briefdescription>
<para>Gets or sets the color of the structured document tag. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1363" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1fc3efa4b614c744019c2504e95dfd8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Aspose::Words::Font</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Font &gt; Aspose::Words::Markup::StructuredDocumentTag::get_ContentsFont</definition>
        <argsstring>()</argsstring>
        <name>get_ContentsFont</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_ContentsFont</qualifiedname>
        <briefdescription>
<para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> formatting that will be applied to text entered into <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="658" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ab0732593a0702d9c9adea3c14496e441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_DateDisplayFormat</definition>
        <argsstring>()</argsstring>
        <name>get_DateDisplayFormat</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_DateDisplayFormat</qualifiedname>
        <briefdescription>
<para>String that represents the format in which dates are displayed. Can not be null. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member">Date</ref> SDT type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to prompt the user to enter a date with a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>a<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Microsoft<sp/>Word,<sp/>this<sp/>element<sp/>is<sp/>known<sp/>as<sp/>a<sp/>&quot;Date<sp/>picker<sp/>content<sp/>control&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>click<sp/>on<sp/>the<sp/>arrow<sp/>on<sp/>the<sp/>right<sp/>end<sp/>of<sp/>this<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>see<sp/>a<sp/>pop<sp/>up<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>clickable<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>that<sp/>popup<sp/>to<sp/>select<sp/>a<sp/>date<sp/>that<sp/>the<sp/>tag<sp/>will<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtDate<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member" tooltip="The SDT represents a date picker when displayed in the document.">SdtType::Date</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date,<sp/>according<sp/>to<sp/>the<sp/>Saudi<sp/>Arabian<sp/>Arabic<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayLocale(<ref refid="class/system.globalization.culture_info/_1a5b1038b1eb4ecfef1dfa381c9d2d53e0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::GetCultureInfo</ref>(u</highlight><highlight class="stringliteral">&quot;ar-SA&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>format<sp/>with<sp/>which<sp/>to<sp/>display<sp/>the<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayFormat(u</highlight><highlight class="stringliteral">&quot;dd<sp/>MMMM,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateStorageFormat(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member" tooltip="The date value for a date SDT is stored as a date in the standard XML Schema DateTime format.">SdtDateStorageFormat::DateTime</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date<sp/>according<sp/>to<sp/>the<sp/>Hijri<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_CalendarType(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159acfe71ee5c60b5a13bd9dd39be418f96c" kindref="member" tooltip="Specifies that the Hijri lunar calendar, as described by the Kingdom of Saudi Arabia,...">SdtCalendarType::Hijri</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Before<sp/>the<sp/>user<sp/>chooses<sp/>a<sp/>date<sp/>in<sp/>Microsoft<sp/>Word,<sp/>the<sp/>tag<sp/>will<sp/>display<sp/>the<sp/>text<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>a<sp/>date.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>the<sp/>tag&apos;s<sp/>calendar,<sp/>set<sp/>the<sp/>&quot;FullDate&quot;<sp/>property<sp/>to<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>a<sp/>default<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_FullDate(<ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref>(1440,<sp/>10,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtDate);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Date.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1056" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aeb85d0fe6772d6d2800095202a6712ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Markup::StructuredDocumentTag::get_DateDisplayLocale</definition>
        <argsstring>()</argsstring>
        <name>get_DateDisplayLocale</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_DateDisplayLocale</qualifiedname>
        <briefdescription>
<para>Allows to set/get the language format for the date displayed in this <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member">Date</ref> SDT type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to prompt the user to enter a date with a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>a<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Microsoft<sp/>Word,<sp/>this<sp/>element<sp/>is<sp/>known<sp/>as<sp/>a<sp/>&quot;Date<sp/>picker<sp/>content<sp/>control&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>click<sp/>on<sp/>the<sp/>arrow<sp/>on<sp/>the<sp/>right<sp/>end<sp/>of<sp/>this<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>see<sp/>a<sp/>pop<sp/>up<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>clickable<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>that<sp/>popup<sp/>to<sp/>select<sp/>a<sp/>date<sp/>that<sp/>the<sp/>tag<sp/>will<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtDate<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member" tooltip="The SDT represents a date picker when displayed in the document.">SdtType::Date</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date,<sp/>according<sp/>to<sp/>the<sp/>Saudi<sp/>Arabian<sp/>Arabic<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayLocale(<ref refid="class/system.globalization.culture_info/_1a5b1038b1eb4ecfef1dfa381c9d2d53e0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::GetCultureInfo</ref>(u</highlight><highlight class="stringliteral">&quot;ar-SA&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>format<sp/>with<sp/>which<sp/>to<sp/>display<sp/>the<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayFormat(u</highlight><highlight class="stringliteral">&quot;dd<sp/>MMMM,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateStorageFormat(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member" tooltip="The date value for a date SDT is stored as a date in the standard XML Schema DateTime format.">SdtDateStorageFormat::DateTime</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date<sp/>according<sp/>to<sp/>the<sp/>Hijri<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_CalendarType(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159acfe71ee5c60b5a13bd9dd39be418f96c" kindref="member" tooltip="Specifies that the Hijri lunar calendar, as described by the Kingdom of Saudi Arabia,...">SdtCalendarType::Hijri</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Before<sp/>the<sp/>user<sp/>chooses<sp/>a<sp/>date<sp/>in<sp/>Microsoft<sp/>Word,<sp/>the<sp/>tag<sp/>will<sp/>display<sp/>the<sp/>text<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>a<sp/>date.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>the<sp/>tag&apos;s<sp/>calendar,<sp/>set<sp/>the<sp/>&quot;FullDate&quot;<sp/>property<sp/>to<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>a<sp/>default<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_FullDate(<ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref>(1440,<sp/>10,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtDate);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Date.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1012" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4c63f4e04b40646d2d438a5f2f5b02c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1" kindref="member">Aspose::Words::Markup::SdtDateStorageFormat</ref></type>
        <definition>Aspose::Words::Markup::SdtDateStorageFormat Aspose::Words::Markup::StructuredDocumentTag::get_DateStorageFormat</definition>
        <argsstring>()</argsstring>
        <name>get_DateStorageFormat</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_DateStorageFormat</qualifiedname>
        <briefdescription>
<para>Gets/sets format in which the date for a date SDT is stored when the <bold>SDT</bold> is bound to an XML node in the document&apos;s data store. Default value is <ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member">DateTime</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member">Date</ref> SDT type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to prompt the user to enter a date with a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>a<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Microsoft<sp/>Word,<sp/>this<sp/>element<sp/>is<sp/>known<sp/>as<sp/>a<sp/>&quot;Date<sp/>picker<sp/>content<sp/>control&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>click<sp/>on<sp/>the<sp/>arrow<sp/>on<sp/>the<sp/>right<sp/>end<sp/>of<sp/>this<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>see<sp/>a<sp/>pop<sp/>up<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>clickable<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>that<sp/>popup<sp/>to<sp/>select<sp/>a<sp/>date<sp/>that<sp/>the<sp/>tag<sp/>will<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtDate<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member" tooltip="The SDT represents a date picker when displayed in the document.">SdtType::Date</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date,<sp/>according<sp/>to<sp/>the<sp/>Saudi<sp/>Arabian<sp/>Arabic<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayLocale(<ref refid="class/system.globalization.culture_info/_1a5b1038b1eb4ecfef1dfa381c9d2d53e0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::GetCultureInfo</ref>(u</highlight><highlight class="stringliteral">&quot;ar-SA&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>format<sp/>with<sp/>which<sp/>to<sp/>display<sp/>the<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayFormat(u</highlight><highlight class="stringliteral">&quot;dd<sp/>MMMM,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateStorageFormat(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member" tooltip="The date value for a date SDT is stored as a date in the standard XML Schema DateTime format.">SdtDateStorageFormat::DateTime</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date<sp/>according<sp/>to<sp/>the<sp/>Hijri<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_CalendarType(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159acfe71ee5c60b5a13bd9dd39be418f96c" kindref="member" tooltip="Specifies that the Hijri lunar calendar, as described by the Kingdom of Saudi Arabia,...">SdtCalendarType::Hijri</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Before<sp/>the<sp/>user<sp/>chooses<sp/>a<sp/>date<sp/>in<sp/>Microsoft<sp/>Word,<sp/>the<sp/>tag<sp/>will<sp/>display<sp/>the<sp/>text<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>a<sp/>date.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>the<sp/>tag&apos;s<sp/>calendar,<sp/>set<sp/>the<sp/>&quot;FullDate&quot;<sp/>property<sp/>to<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>a<sp/>default<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_FullDate(<ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref>(1440,<sp/>10,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtDate);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Date.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1143" column="52"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7ab64a4d8556ca064f4165694ac8d812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Aspose::Words::Font</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Font &gt; Aspose::Words::Markup::StructuredDocumentTag::get_EndCharacterFont</definition>
        <argsstring>()</argsstring>
        <name>get_EndCharacterFont</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_EndCharacterFont</qualifiedname>
        <briefdescription>
<para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> formatting that will be applied to the last character of text entered into <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="714" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6598d89c2049713ad797041e92ecf925" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
        <definition>System::DateTime Aspose::Words::Markup::StructuredDocumentTag::get_FullDate</definition>
        <argsstring>()</argsstring>
        <name>get_FullDate</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_FullDate</qualifiedname>
        <briefdescription>
<para>Specifies the full date and time last entered into this <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member">Date</ref> SDT type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to prompt the user to enter a date with a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>a<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Microsoft<sp/>Word,<sp/>this<sp/>element<sp/>is<sp/>known<sp/>as<sp/>a<sp/>&quot;Date<sp/>picker<sp/>content<sp/>control&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>click<sp/>on<sp/>the<sp/>arrow<sp/>on<sp/>the<sp/>right<sp/>end<sp/>of<sp/>this<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>see<sp/>a<sp/>pop<sp/>up<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>clickable<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>that<sp/>popup<sp/>to<sp/>select<sp/>a<sp/>date<sp/>that<sp/>the<sp/>tag<sp/>will<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtDate<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a44749712dbec183e983dcd78a7736c41" kindref="member" tooltip="The SDT represents a date picker when displayed in the document.">SdtType::Date</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date,<sp/>according<sp/>to<sp/>the<sp/>Saudi<sp/>Arabian<sp/>Arabic<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayLocale(<ref refid="class/system.globalization.culture_info/_1a5b1038b1eb4ecfef1dfa381c9d2d53e0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::GetCultureInfo</ref>(u</highlight><highlight class="stringliteral">&quot;ar-SA&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>format<sp/>with<sp/>which<sp/>to<sp/>display<sp/>the<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateDisplayFormat(u</highlight><highlight class="stringliteral">&quot;dd<sp/>MMMM,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_DateStorageFormat(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member" tooltip="The date value for a date SDT is stored as a date in the standard XML Schema DateTime format.">SdtDateStorageFormat::DateTime</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>date<sp/>according<sp/>to<sp/>the<sp/>Hijri<sp/>calendar.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_CalendarType(<ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159acfe71ee5c60b5a13bd9dd39be418f96c" kindref="member" tooltip="Specifies that the Hijri lunar calendar, as described by the Kingdom of Saudi Arabia,...">SdtCalendarType::Hijri</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Before<sp/>the<sp/>user<sp/>chooses<sp/>a<sp/>date<sp/>in<sp/>Microsoft<sp/>Word,<sp/>the<sp/>tag<sp/>will<sp/>display<sp/>the<sp/>text<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>a<sp/>date.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>the<sp/>tag&apos;s<sp/>calendar,<sp/>set<sp/>the<sp/>&quot;FullDate&quot;<sp/>property<sp/>to<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>a<sp/>default<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtDate-&gt;set_FullDate(<ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref>(1440,<sp/>10,<sp/>20));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtDate);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Date.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1099" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1afd9953ddcffa55def59337c73dcbeedd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Markup::StructuredDocumentTag::get_Id</definition>
        <argsstring>() override</argsstring>
        <name>get_Id</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Id</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a7584de7e7e5fc53e9db2425fa7d0a834">get_Id</reimplements>
        <briefdescription>
<para>Specifies a unique read-only persistent numerical Id for this <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Id attribute shall follow these rules:<itemizedlist>
<listitem><para>The document shall retain SDT ids only if the whole document is cloned <ref refid="class_aspose_1_1_words_1_1_document_1a1c3dcff6be884eec696d20719353e93a" kindref="member">Clone</ref>.</para>
</listitem><listitem><para>During <ref refid="" kindref="compound">ImportNode()</ref> Id shall be retained if import does not cause conflicts with other SDT Ids in the target document.</para>
</listitem><listitem><para>If multiple SDT nodes specify the same decimal number value for the Id attribute, then the first SDT in the document shall maintain this original Id, and all subsequent SDT nodes shall have new identifiers assigned to them when the document is loaded.</para>
</listitem><listitem><para>During standalone SDT <ref refid="_1a0e410cd8498ebdf1c4e775115d77877f" kindref="member">Clone()</ref> operation new unique ID will be generated for the cloned SDT node.</para>
</listitem><listitem><para>If Id is not specified in the source document, then the SDT node shall have a new unique identifier assigned to it when the document is loaded.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="423" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad90d80065ba4869471751f6e12b4ea6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::get_IsShowingPlaceholderText</definition>
        <argsstring>() override</argsstring>
        <name>get_IsShowingPlaceholderText</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_IsShowingPlaceholderText</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a1ab2e722f06028da0a1b163ee533b356">get_IsShowingPlaceholderText</reimplements>
        <briefdescription>
<para>Specifies whether the content of this <bold>SDT</bold> shall be interpreted to contain placeholder text (as opposed to regular text contents within the SDT). if set to true, this state shall be resumed (showing placeholder text) upon opening this document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a building block&apos;s contents as a custom placeholder text for a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag<sp/>of<sp/>the<sp/>&quot;PlainText&quot;<sp/>type,<sp/>which<sp/>will<sp/>function<sp/>as<sp/>a<sp/>text<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>contents<sp/>that<sp/>it<sp/>will<sp/>display<sp/>by<sp/>default<sp/>are<sp/>a<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>text.&quot;<sp/>prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>building<sp/>block<sp/>instead<sp/>of<sp/>the<sp/>default<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>First,<sp/>add<sp/>a<sp/>building<sp/>block<sp/>with<sp/>contents<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;GlossaryDocument&gt;<sp/>glossaryDoc<sp/>=<sp/>doc-&gt;get_GlossaryDocument();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>substituteBlock<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;AppendChild(MakeObject&lt;Section&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;AppendChild(MakeObject&lt;Body&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendParagraph(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>placeholder<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">glossaryDoc-&gt;AppendChild(substituteBlock);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Then,<sp/>use<sp/>the<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>&quot;PlaceholderName&quot;<sp/>property<sp/>to<sp/>reference<sp/>that<sp/>building<sp/>block<sp/>by<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_PlaceholderName(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>&quot;PlaceholderName&quot;<sp/>refers<sp/>to<sp/>an<sp/>existing<sp/>block<sp/>in<sp/>the<sp/>parent<sp/>document&apos;s<sp/>glossary<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>verify<sp/>the<sp/>building<sp/>block<sp/>via<sp/>the<sp/>&quot;Placeholder&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(substituteBlock,<sp/>tag-&gt;get_Placeholder());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsShowingPlaceholderText&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>treat<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>current<sp/>contents<sp/>as<sp/>placeholder<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>that<sp/>clicking<sp/>on<sp/>the<sp/>text<sp/>box<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>immediately<sp/>highlight<sp/>all<sp/>the<sp/>tag&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsShowingPlaceholderText&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>treat<sp/>its<sp/>contents<sp/>as<sp/>text<sp/>that<sp/>a<sp/>user<sp/>has<sp/>already<sp/>entered.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clicking<sp/>on<sp/>this<sp/>text<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>place<sp/>the<sp/>blinking<sp/>cursor<sp/>at<sp/>the<sp/>clicked<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_IsShowingPlaceholderText(isShowingPlaceholderText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlaceholderBuildingBlock.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="539" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac502e5d8773d75ea2db9ca3bb6c59752" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::get_IsTemporary</definition>
        <argsstring>() const</argsstring>
        <name>get_IsTemporary</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_IsTemporary</qualifiedname>
        <briefdescription>
<para>Specifies whether this <bold>SDT</bold> shall be removed from the WordProcessingML document when its contents are modified. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to make single-use controls. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>act<sp/>as<sp/>a<sp/>plain<sp/>text<sp/>form<sp/>that<sp/>the<sp/>user<sp/>may<sp/>enter<sp/>text<sp/>into.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsTemporary&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>make<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>disappear<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>assimilate<sp/>its<sp/>contents<sp/>into<sp/>the<sp/>document<sp/>after<sp/>the<sp/>user<sp/>edits<sp/>it<sp/>once<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsTemporary&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>edit<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>any<sp/>number<sp/>of<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_IsTemporary(isTemporary);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>text:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>another<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>check<sp/>box<sp/>and<sp/>set<sp/>its<sp/>default<sp/>state<sp/>to<sp/>&quot;checked&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member" tooltip="The SDT represents a checkbox when displayed in the document.">SdtType::Checkbox</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Checked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsTemporary&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>make<sp/>the<sp/>check<sp/>box<sp/>become<sp/>a<sp/>symbol</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>once<sp/>the<sp/>user<sp/>clicks<sp/>on<sp/>it<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsTemporary&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>allow<sp/>the<sp/>user<sp/>to<sp/>click<sp/>on<sp/>the<sp/>check<sp/>box<sp/>any<sp/>number<sp/>of<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_IsTemporary(isTemporary);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nPlease<sp/>click<sp/>the<sp/>check<sp/>box:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.IsTemporary.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="753" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4f88bc91ee8b56e282c2ac8dff251996" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751" kindref="member">Aspose::Words::Markup::MarkupLevel</ref></type>
        <definition>Aspose::Words::Markup::MarkupLevel Aspose::Words::Markup::StructuredDocumentTag::get_Level</definition>
        <argsstring>() const override</argsstring>
        <name>get_Level</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Level</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a8efb955f1e7c6bb152710173a84dc024">get_Level</reimplements>
        <briefdescription>
<para>Gets the level at which this <bold>SDT</bold> occurs in the document tree. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="338" column="43"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a725618a08dc7341e390ab098c060d37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_sdt_list_item_collection" kindref="compound">Aspose::Words::Markup::SdtListItemCollection</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Markup::SdtListItemCollection &gt; Aspose::Words::Markup::StructuredDocumentTag::get_ListItems</definition>
        <argsstring>()</argsstring>
        <name>get_ListItems</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_ListItems</qualifiedname>
        <briefdescription>
<para>Gets <ref refid="class_aspose_1_1_words_1_1_markup_1_1_sdt_list_item_collection" kindref="compound">SdtListItemCollection</ref> associated with this <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7afd249a0c28275ebf9d4c8464ca2225cf" kindref="member">ComboBox</ref> or <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ae4ef5c80fe94d0cad53a95d50691a0c7" kindref="member">DropDownList</ref> SDT types.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with drop down-list structured document tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ae4ef5c80fe94d0cad53a95d50691a0c7" kindref="member" tooltip="The SDT represents a drop down list when displayed in the document.">SdtType::DropDownList</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751ae1e4c8c9ccd9fc39c391da4bcd093fb2" kindref="member" tooltip="The element occurs at the block level (e.g. among tables and paragraphs).">MarkupLevel::Block</ref>);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendChild(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>drop-down<sp/>list<sp/>structured<sp/>document<sp/>tag<sp/>is<sp/>a<sp/>form<sp/>that<sp/>allows<sp/>the<sp/>user<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>select<sp/>an<sp/>option<sp/>from<sp/>a<sp/>list<sp/>by<sp/>left-clicking<sp/>and<sp/>opening<sp/>the<sp/>form<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;ListItems&quot;<sp/>property<sp/>contains<sp/>all<sp/>list<sp/>items,<sp/>and<sp/>each<sp/>list<sp/>item<sp/>is<sp/>an<sp/>&quot;SdtListItem&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;SdtListItemCollection&gt;<sp/>listItems<sp/>=<sp/>tag-&gt;get_ListItems();</highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;Add(MakeObject&lt;SdtListItem&gt;(u</highlight><highlight class="stringliteral">&quot;Value<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(listItems-&gt;idx_get(0)-&gt;get_DisplayText(),<sp/>listItems-&gt;idx_get(0)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>3<sp/>more<sp/>list<sp/>items.<sp/>Initialize<sp/>these<sp/>items<sp/>using<sp/>a<sp/>different<sp/>constructor<sp/>to<sp/>the<sp/>first<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>display<sp/>strings<sp/>that<sp/>are<sp/>different<sp/>from<sp/>their<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;Add(MakeObject&lt;SdtListItem&gt;(u</highlight><highlight class="stringliteral">&quot;Item<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Value<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;Add(MakeObject&lt;SdtListItem&gt;(u</highlight><highlight class="stringliteral">&quot;Item<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Value<sp/>3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;Add(MakeObject&lt;SdtListItem&gt;(u</highlight><highlight class="stringliteral">&quot;Item<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Value<sp/>4&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>listItems-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>drop-down<sp/>list<sp/>is<sp/>displaying<sp/>the<sp/>first<sp/>item.<sp/>Assign<sp/>a<sp/>different<sp/>list<sp/>item<sp/>to<sp/>the<sp/>&quot;SelectedValue&quot;<sp/>to<sp/>display<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;set_SelectedValue(listItems-&gt;idx_get(3));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Value<sp/>4&quot;</highlight><highlight class="normal">,<sp/>listItems-&gt;get_SelectedValue()-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enumerate<sp/>over<sp/>the<sp/>collection<sp/>and<sp/>print<sp/>each<sp/>element.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;SdtListItem&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>listItems-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enumerator-&gt;get_Current()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;List<sp/>item:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_DisplayText()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>last<sp/>list<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>listItems-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>our<sp/>drop-down<sp/>control<sp/>is<sp/>set<sp/>to<sp/>display<sp/>the<sp/>removed<sp/>item<sp/>by<sp/>default,<sp/>give<sp/>it<sp/>an<sp/>item<sp/>to<sp/>display<sp/>which<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;set_SelectedValue(listItems-&gt;idx_get(1));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.ListItemCollection.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;Clear&quot;<sp/>method<sp/>to<sp/>empty<sp/>the<sp/>entire<sp/>drop-down<sp/>item<sp/>collection<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">listItems-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>listItems-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="882" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a63e1debacbadf5837ad0557549759c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::get_LockContentControl</definition>
        <argsstring>() override</argsstring>
        <name>get_LockContentControl</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_LockContentControl</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1ab1bf20fbe8e05369e08f3bcb72767653">get_LockContentControl</reimplements>
        <briefdescription>
<para>When set to true, this property will prohibit a user from deleting this <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply editing restrictions to structured document tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>acts<sp/>as<sp/>a<sp/>text<sp/>box<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>fill<sp/>it<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;LockContents&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>prohibit<sp/>the<sp/>user<sp/>from<sp/>editing<sp/>this<sp/>text<sp/>box&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_LockContents(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;The<sp/>contents<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>cannot<sp/>be<sp/>edited:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;LockContentControl&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>prohibit<sp/>the<sp/>user<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>deleting<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>manually<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_LockContentControl(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>structured<sp/>document<sp/>tag<sp/>cannot<sp/>be<sp/>deleted<sp/>but<sp/>its<sp/>contents<sp/>can<sp/>be<sp/>edited:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Lock.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="454" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac044b9856a85a2bc5e5305b2a7f7c03a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::get_LockContents</definition>
        <argsstring>() override</argsstring>
        <name>get_LockContents</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_LockContents</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1aaa7e81d342e0ac5fcefb4dec7e1ee4a6">get_LockContents</reimplements>
        <briefdescription>
<para>When set to true, this property will prohibit a user from editing the contents of this <bold>SDT</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply editing restrictions to structured document tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>acts<sp/>as<sp/>a<sp/>text<sp/>box<sp/>that<sp/>prompts<sp/>the<sp/>user<sp/>to<sp/>fill<sp/>it<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;LockContents&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>prohibit<sp/>the<sp/>user<sp/>from<sp/>editing<sp/>this<sp/>text<sp/>box&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_LockContents(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;The<sp/>contents<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>cannot<sp/>be<sp/>edited:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;LockContentControl&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>prohibit<sp/>the<sp/>user<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>deleting<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>manually<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_LockContentControl(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>structured<sp/>document<sp/>tag<sp/>cannot<sp/>be<sp/>deleted<sp/>but<sp/>its<sp/>contents<sp/>can<sp/>be<sp/>edited:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.Lock.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="488" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a8362fbedd0cc792abe481491490cc803" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::StructuredDocumentTag::get_Multiline</definition>
        <argsstring>()</argsstring>
        <name>get_Multiline</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Multiline</qualifiedname>
        <briefdescription>
<para>Specifies whether this <bold>SDT</bold> allows multiple lines of text. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this property will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member">RichText</ref> and <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member">PlainText</ref> SDT type.</para>
<para>For all other SDT types exception will occur.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1304" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a2d71aa9eb130164841efce2d16d02367" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379" kindref="member">Aspose::Words::NodeType</ref></type>
        <definition>Aspose::Words::NodeType Aspose::Words::Markup::StructuredDocumentTag::get_NodeType</definition>
        <argsstring>() const override</argsstring>
        <name>get_NodeType</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_NodeType</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a7f80e8d96b7a072fca14157b25ae025e">get_NodeType</reimplements>
        <briefdescription>
<para>Returns <bold>NodeType.StructuredDocumentTag</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with styles for content control elements. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>to<sp/>apply<sp/>a<sp/>style<sp/>from<sp/>the<sp/>document<sp/>to<sp/>a<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Apply<sp/>a<sp/>style<sp/>object<sp/>from<sp/>the<sp/>document&apos;s<sp/>style<sp/>collection:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Style&gt;<sp/>quoteStyle<sp/>=<sp/>doc-&gt;get_Styles()-&gt;idx_get(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtPlainText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtPlainText-&gt;set_Style(quoteStyle);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Reference<sp/>a<sp/>style<sp/>in<sp/>the<sp/>document<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtRichText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member" tooltip="The SDT represents a rich text box when displayed in the document.">SdtType::RichText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtRichText-&gt;set_StyleName(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtPlainText);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtRichText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/>sdtPlainText-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;NodeCollection&gt;<sp/>tags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>System::IterateOver(tags))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdt<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(node);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>,<sp/>sdt-&gt;get_Style()-&gt;get_StyleIdentifier());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">,<sp/>sdt-&gt;get_StyleName());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="183" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa9828b2c82ec48328e362577c29f7d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">Aspose::Words::BuildingBlocks::BuildingBlock</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::BuildingBlocks::BuildingBlock &gt; Aspose::Words::Markup::StructuredDocumentTag::get_Placeholder</definition>
        <argsstring>() override</argsstring>
        <name>get_Placeholder</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Placeholder</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a992d885c9047a155b49add6a3d2317a0">get_Placeholder</reimplements>
        <briefdescription>
<para>Gets the <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref> containing placeholder text which should be displayed when this SDT run contents are empty, the associated mapped XML element is empty as specified via the <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" kindref="member">XmlMapping</ref> element or the <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad90d80065ba4869471751f6e12b4ea6f" kindref="member">IsShowingPlaceholderText</ref> element is true. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a building block&apos;s contents as a custom placeholder text for a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag<sp/>of<sp/>the<sp/>&quot;PlainText&quot;<sp/>type,<sp/>which<sp/>will<sp/>function<sp/>as<sp/>a<sp/>text<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>contents<sp/>that<sp/>it<sp/>will<sp/>display<sp/>by<sp/>default<sp/>are<sp/>a<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>text.&quot;<sp/>prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>building<sp/>block<sp/>instead<sp/>of<sp/>the<sp/>default<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>First,<sp/>add<sp/>a<sp/>building<sp/>block<sp/>with<sp/>contents<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;GlossaryDocument&gt;<sp/>glossaryDoc<sp/>=<sp/>doc-&gt;get_GlossaryDocument();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>substituteBlock<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;AppendChild(MakeObject&lt;Section&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;AppendChild(MakeObject&lt;Body&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendParagraph(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>placeholder<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">glossaryDoc-&gt;AppendChild(substituteBlock);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Then,<sp/>use<sp/>the<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>&quot;PlaceholderName&quot;<sp/>property<sp/>to<sp/>reference<sp/>that<sp/>building<sp/>block<sp/>by<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_PlaceholderName(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>&quot;PlaceholderName&quot;<sp/>refers<sp/>to<sp/>an<sp/>existing<sp/>block<sp/>in<sp/>the<sp/>parent<sp/>document&apos;s<sp/>glossary<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>verify<sp/>the<sp/>building<sp/>block<sp/>via<sp/>the<sp/>&quot;Placeholder&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(substituteBlock,<sp/>tag-&gt;get_Placeholder());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsShowingPlaceholderText&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>treat<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>current<sp/>contents<sp/>as<sp/>placeholder<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>that<sp/>clicking<sp/>on<sp/>the<sp/>text<sp/>box<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>immediately<sp/>highlight<sp/>all<sp/>the<sp/>tag&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsShowingPlaceholderText&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>treat<sp/>its<sp/>contents<sp/>as<sp/>text<sp/>that<sp/>a<sp/>user<sp/>has<sp/>already<sp/>entered.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clicking<sp/>on<sp/>this<sp/>text<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>place<sp/>the<sp/>blinking<sp/>cursor<sp/>at<sp/>the<sp/>clicked<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_IsShowingPlaceholderText(isShowingPlaceholderText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlaceholderBuildingBlock.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="231" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a783e32c45d399ae8cf3e8abf83d70841" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_PlaceholderName</definition>
        <argsstring>() override</argsstring>
        <name>get_PlaceholderName</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_PlaceholderName</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1ab9fa61541f7a536def5472a837ef7334">get_PlaceholderName</reimplements>
        <briefdescription>
<para>Gets or sets Name of the <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block" kindref="compound">BuildingBlock</ref> containing placeholder text. BuildingBlock with this name <ref refid="class_aspose_1_1_words_1_1_building_blocks_1_1_building_block_1a9702f5e51bb180101ef9bf72cac5e3f7" kindref="member">Name</ref> has to be present in the <ref refid="class_aspose_1_1_words_1_1_document_1a752df20b10d4e733957abf7ab630bd21" kindref="member">GlossaryDocument</ref> otherwise <ref refid="" kindref="compound">InvalidOperationException</ref> will occur. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a building block&apos;s contents as a custom placeholder text for a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>plain<sp/>text<sp/>structured<sp/>document<sp/>tag<sp/>of<sp/>the<sp/>&quot;PlainText&quot;<sp/>type,<sp/>which<sp/>will<sp/>function<sp/>as<sp/>a<sp/>text<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>contents<sp/>that<sp/>it<sp/>will<sp/>display<sp/>by<sp/>default<sp/>are<sp/>a<sp/>&quot;Click<sp/>here<sp/>to<sp/>enter<sp/>text.&quot;<sp/>prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>get<sp/>the<sp/>tag<sp/>to<sp/>display<sp/>the<sp/>contents<sp/>of<sp/>a<sp/>building<sp/>block<sp/>instead<sp/>of<sp/>the<sp/>default<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>First,<sp/>add<sp/>a<sp/>building<sp/>block<sp/>with<sp/>contents<sp/>to<sp/>the<sp/>glossary<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;GlossaryDocument&gt;<sp/>glossaryDoc<sp/>=<sp/>doc-&gt;get_GlossaryDocument();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>substituteBlock<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(glossaryDoc);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;AppendChild(MakeObject&lt;Section&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;AppendChild(MakeObject&lt;Body&gt;(glossaryDoc));</highlight></codeline>
<codeline><highlight class="normal">substituteBlock-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendParagraph(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>placeholder<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">glossaryDoc-&gt;AppendChild(substituteBlock);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Then,<sp/>use<sp/>the<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>&quot;PlaceholderName&quot;<sp/>property<sp/>to<sp/>reference<sp/>that<sp/>building<sp/>block<sp/>by<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_PlaceholderName(u</highlight><highlight class="stringliteral">&quot;Custom<sp/>Placeholder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>&quot;PlaceholderName&quot;<sp/>refers<sp/>to<sp/>an<sp/>existing<sp/>block<sp/>in<sp/>the<sp/>parent<sp/>document&apos;s<sp/>glossary<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>be<sp/>able<sp/>to<sp/>verify<sp/>the<sp/>building<sp/>block<sp/>via<sp/>the<sp/>&quot;Placeholder&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(substituteBlock,<sp/>tag-&gt;get_Placeholder());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsShowingPlaceholderText&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>treat<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>structured<sp/>document<sp/>tag&apos;s<sp/>current<sp/>contents<sp/>as<sp/>placeholder<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>that<sp/>clicking<sp/>on<sp/>the<sp/>text<sp/>box<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>immediately<sp/>highlight<sp/>all<sp/>the<sp/>tag&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;IsShowingPlaceholderText&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>get<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>treat<sp/>its<sp/>contents<sp/>as<sp/>text<sp/>that<sp/>a<sp/>user<sp/>has<sp/>already<sp/>entered.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clicking<sp/>on<sp/>this<sp/>text<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>place<sp/>the<sp/>blinking<sp/>cursor<sp/>at<sp/>the<sp/>clicked<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_IsShowingPlaceholderText(isShowingPlaceholderText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlaceholderBuildingBlock.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="279" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4efd957d9779d12e3e7440facfa2fe96" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7" kindref="member">Aspose::Words::Markup::SdtType</ref></type>
        <definition>Aspose::Words::Markup::SdtType Aspose::Words::Markup::StructuredDocumentTag::get_SdtType</definition>
        <argsstring>() override</argsstring>
        <name>get_SdtType</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_SdtType</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1afe955c31f3256411c0d7875d5267c619">get_SdtType</reimplements>
        <briefdescription>
<para>Gets type of this <bold>Structured document tag</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to get the type of a structured document tag. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Structured<sp/>document<sp/>tags.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;StructuredDocumentTag&gt;&gt;&gt;<sp/>sdTags<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;StructuredDocumentTag&gt;&gt;()-&gt;LINQ_ToList();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7aeeb0f53363fad5005c4928eafe29f28f" kindref="member" tooltip="The SDT represents repeating section type when displayed in the document.">SdtType::RepeatingSection</ref>,<sp/>sdTags-&gt;idx_get(0)-&gt;get_SdtType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a56208c60012d3876ec4627621afa6460" kindref="member" tooltip="The SDT represents repeating section item.">SdtType::RepeatingSectionItem</ref>,<sp/>sdTags-&gt;idx_get(1)-&gt;get_SdtType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member" tooltip="The SDT represents a rich text box when displayed in the document.">SdtType::RichText</ref>,<sp/>sdTags-&gt;idx_get(2)-&gt;get_SdtType());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="355" column="39"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0ee6e14aa05ccb38a5d6c2c78bdf0273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Aspose::Words::Style</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Style &gt; Aspose::Words::Markup::StructuredDocumentTag::get_Style</definition>
        <argsstring>()</argsstring>
        <name>get_Style</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Style</qualifiedname>
        <briefdescription>
<para>Gets or sets the <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Style</ref> of the structured document tag. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with styles for content control elements. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>to<sp/>apply<sp/>a<sp/>style<sp/>from<sp/>the<sp/>document<sp/>to<sp/>a<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Apply<sp/>a<sp/>style<sp/>object<sp/>from<sp/>the<sp/>document&apos;s<sp/>style<sp/>collection:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Style&gt;<sp/>quoteStyle<sp/>=<sp/>doc-&gt;get_Styles()-&gt;idx_get(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtPlainText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtPlainText-&gt;set_Style(quoteStyle);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Reference<sp/>a<sp/>style<sp/>in<sp/>the<sp/>document<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtRichText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member" tooltip="The SDT represents a rich text box when displayed in the document.">SdtType::RichText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtRichText-&gt;set_StyleName(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtPlainText);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtRichText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/>sdtPlainText-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;NodeCollection&gt;<sp/>tags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>System::IterateOver(tags))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdt<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(node);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>,<sp/>sdt-&gt;get_Style()-&gt;get_StyleIdentifier());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">,<sp/>sdt-&gt;get_StyleName());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1402" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9f57880587321f1d2e87d516df84d0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_StyleName</definition>
        <argsstring>()</argsstring>
        <name>get_StyleName</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_StyleName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the style applied to the structured document tag. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with styles for content control elements. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>to<sp/>apply<sp/>a<sp/>style<sp/>from<sp/>the<sp/>document<sp/>to<sp/>a<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Apply<sp/>a<sp/>style<sp/>object<sp/>from<sp/>the<sp/>document&apos;s<sp/>style<sp/>collection:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Style&gt;<sp/>quoteStyle<sp/>=<sp/>doc-&gt;get_Styles()-&gt;idx_get(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtPlainText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtPlainText-&gt;set_Style(quoteStyle);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Reference<sp/>a<sp/>style<sp/>in<sp/>the<sp/>document<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtRichText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member" tooltip="The SDT represents a rich text box when displayed in the document.">SdtType::RichText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtRichText-&gt;set_StyleName(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtPlainText);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtRichText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/>sdtPlainText-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;NodeCollection&gt;<sp/>tags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>System::IterateOver(tags))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdt<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(node);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>,<sp/>sdt-&gt;get_Style()-&gt;get_StyleIdentifier());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">,<sp/>sdt-&gt;get_StyleName());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1441" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aec15c01b725f77e7cb1a91fd193f0ab6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_Tag</definition>
        <argsstring>() const override</argsstring>
        <name>get_Tag</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Tag</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a8c37418724ab251a6fdf088bb9abb56f">get_Tag</reimplements>
        <briefdescription>
<para>Specifies a tag associated with the current SDT node. Can not be null. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="599" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7b031dd3e109c827a1164408e92f53ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_Title</definition>
        <argsstring>() const override</argsstring>
        <name>get_Title</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_Title</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a558d2b81b37cc048a18d3281f65b01d8">get_Title</reimplements>
        <briefdescription>
<para>Specifies the friendly name associated with this <bold>SDT</bold>. Can not be null. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="813" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a04fd9175294ea62cb1da70a0a5991b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Markup::StructuredDocumentTag::get_WordOpenXML</definition>
        <argsstring>() override</argsstring>
        <name>get_WordOpenXML</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_WordOpenXML</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a73b0bf7b03751c8a6c8bdb3338fd059d">get_WordOpenXML</reimplements>
        <briefdescription>
<para>Gets a string that represents the XML contained within the node in the <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a2b7085a73e76e581d28543a39fb2b981" kindref="member">FlatOpc</ref> format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1514" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_xml_mapping" kindref="compound">Aspose::Words::Markup::XmlMapping</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Markup::XmlMapping &gt; Aspose::Words::Markup::StructuredDocumentTag::get_XmlMapping</definition>
        <argsstring>() override</argsstring>
        <name>get_XmlMapping</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::get_XmlMapping</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1ae409cb79e13ef5c53000fb1eab7ab663">get_XmlMapping</reimplements>
        <briefdescription>
<para>Gets an object that represents the mapping of this structured document tag to XML data in a custom XML part of the current document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag with custom XML data. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>an<sp/>XML<sp/>part<sp/>that<sp/>contains<sp/>data<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>document&apos;s<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>enable<sp/>the<sp/>&quot;Developer&quot;<sp/>tab<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>find<sp/>elements<sp/>from<sp/>this<sp/>collection<sp/>in<sp/>the<sp/>&quot;XML<sp/>Mapping<sp/>Pane&quot;,<sp/>along<sp/>with<sp/>a<sp/>few<sp/>default<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>xmlPartId<sp/>=<sp/><ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>().ToString(u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>xmlPartContent<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;root&gt;&lt;text&gt;Hello<sp/>world!&lt;/text&gt;&lt;/root&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPart&gt;<sp/>xmlPart<sp/>=<sp/>doc-&gt;get_CustomXmlParts()-&gt;Add(xmlPartId,<sp/>xmlPartContent);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(<ref refid="class/system.text.encoding/_1ae1508feb411c49a70249109d1caddb9c" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_ASCII</ref>()-&gt;GetBytes(xmlPartContent),<sp/>xmlPart-&gt;get_Data());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(xmlPartId,<sp/>xmlPart-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>to<sp/>refer<sp/>to<sp/>XML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>By<sp/>an<sp/>index<sp/>in<sp/>the<sp/>custom<sp/>XML<sp/>part<sp/>collection:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(xmlPart,<sp/>doc-&gt;get_CustomXmlParts()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>By<sp/>GUID:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(xmlPart,<sp/>doc-&gt;get_CustomXmlParts()-&gt;GetById(xmlPartId));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>XML<sp/>schema<sp/>association.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">xmlPart-&gt;get_Schemas()-&gt;Add(u</highlight><highlight class="stringliteral">&quot;http://www.w3.org/2001/XMLSchema&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clone<sp/>a<sp/>part,<sp/>and<sp/>then<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPart&gt;<sp/>xmlPartClone<sp/>=<sp/>xmlPart-&gt;Clone();</highlight></codeline>
<codeline><highlight class="normal">xmlPartClone-&gt;set_Id(<ref refid="class/system.guid/_1a33465ce6eef642b741d2307309e36202" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Guid::NewGuid</ref>().<ref refid="class/system.object/_1a5f519d7ae99b64426cc20862bd6211fa" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">ToString</ref>(u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_CustomXmlParts()-&gt;Add(xmlPartClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_CustomXmlParts()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>collection<sp/>and<sp/>print<sp/>the<sp/>contents<sp/>of<sp/>each<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlPart&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>doc-&gt;get_CustomXmlParts()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;XML<sp/>part<sp/>index<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>index<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>ID:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Id()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tContent:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>()-&gt;GetString(enumerator-&gt;get_Current()-&gt;get_Data())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveAt&quot;<sp/>method<sp/>to<sp/>remove<sp/>the<sp/>cloned<sp/>part<sp/>by<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_CustomXmlParts()-&gt;RemoveAt(1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_CustomXmlParts()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clone<sp/>the<sp/>XML<sp/>parts<sp/>collection,<sp/>and<sp/>then<sp/>use<sp/>the<sp/>&quot;Clear&quot;<sp/>method<sp/>to<sp/>remove<sp/>all<sp/>its<sp/>elements<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPartCollection&gt;<sp/>customXmlParts<sp/>=<sp/>doc-&gt;get_CustomXmlParts()-&gt;Clone();</highlight></codeline>
<codeline><highlight class="normal">customXmlParts-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>display<sp/>our<sp/>part&apos;s<sp/>contents<sp/>and<sp/>insert<sp/>it<sp/>into<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751ae1e4c8c9ccd9fc39c391da4bcd093fb2" kindref="member" tooltip="The element occurs at the block level (e.g. among tables and paragraphs).">MarkupLevel::Block</ref>);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_XmlMapping()-&gt;SetMapping(xmlPart,<sp/>u</highlight><highlight class="stringliteral">&quot;/root[1]/text[1]&quot;</highlight><highlight class="normal">,<sp/>String::Empty);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;AppendChild(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.CustomXml.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1511" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad0e5fd593e34d67e3f27b425d80389ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::RemoveSelfOnly</definition>
        <argsstring>()</argsstring>
        <name>RemoveSelfOnly</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::RemoveSelfOnly</qualifiedname>
        <briefdescription>
<para>Removes just this SDT node itself, but keeps the content of it inside the document tree. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create a structured document tag in a plain text box and modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>that<sp/>will<sp/>contain<sp/>plain<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tag<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>title<sp/>and<sp/>color<sp/>of<sp/>the<sp/>frame<sp/>that<sp/>appears<sp/>when<sp/>you<sp/>mouse<sp/>over<sp/>the<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;My<sp/>plain<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Color(<ref refid="class/system.drawing.color/_1ae5b5d9f4370513225712e9c4677227ad" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Magenta</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>tag<sp/>for<sp/>this<sp/>structured<sp/>document<sp/>tag,<sp/>which<sp/>is<sp/>obtainable</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>XML<sp/>element<sp/>named<sp/>&quot;tag&quot;,<sp/>with<sp/>the<sp/>string<sp/>below<sp/>in<sp/>its<sp/>&quot;@val&quot;<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Tag(u</highlight><highlight class="stringliteral">&quot;MyPlainTextSDT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>structured<sp/>document<sp/>tag<sp/>has<sp/>a<sp/>random<sp/>unique<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_GT(tag-&gt;get_Id(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>inside<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_ContentsFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>font<sp/>for<sp/>the<sp/>text<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>text<sp/>that<sp/>we<sp/>type<sp/>in<sp/>the<sp/>document<sp/>body<sp/>after<sp/>moving<sp/>out<sp/>of<sp/>the<sp/>tag<sp/>with<sp/>arrow<sp/>keys<sp/>will<sp/>use<sp/>this<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;get_EndCharacterFont()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>this<sp/>is<sp/>false<sp/>and<sp/>pressing<sp/>enter<sp/>while<sp/>inside<sp/>a<sp/>structured<sp/>document<sp/>tag<sp/>does<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>set<sp/>to<sp/>true,<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>can<sp/>have<sp/>multiple<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>only<sp/>allow<sp/>the<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>structured<sp/>document<sp/>tag<sp/>to<sp/>span<sp/>a<sp/>single<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Multiline&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>allow<sp/>the<sp/>tag<sp/>to<sp/>contain<sp/>multiple<sp/>lines<sp/>of<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Multiline(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;Appearance&quot;<sp/>property<sp/>to<sp/>&quot;SdtAppearance.Tags&quot;<sp/>to<sp/>show<sp/>tags<sp/>around<sp/>content.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default<sp/>structured<sp/>document<sp/>tag<sp/>shows<sp/>as<sp/>BoundingBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tag-&gt;set_Appearance(<ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6a189f63f277cd73395561651753563065" kindref="member" tooltip="Represents a structured document tag shown as start and end markers.">SdtAppearance::Tags</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tag);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>clone<sp/>of<sp/>our<sp/>structured<sp/>document<sp/>tag<sp/>in<sp/>a<sp/>new<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>tagClone<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(tag-&gt;Clone(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(tagClone);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;RemoveSelfOnly&quot;<sp/>method<sp/>to<sp/>remove<sp/>a<sp/>structured<sp/>document<sp/>tag,<sp/>while<sp/>keeping<sp/>its<sp/>contents<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tagClone-&gt;RemoveSelfOnly();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.PlainText.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1666" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa894854e5a12248e44d825e86a7b43e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Appearance</definition>
        <argsstring>(Aspose::Words::Markup::SdtAppearance value)</argsstring>
        <name>set_Appearance</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Appearance</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1a7decb299dc9341a5e7c69b2de50756c6" kindref="member">Aspose::Words::Markup::SdtAppearance</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aad91781129ccc751c3c48f897d6bb72d" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Appearance</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="972" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1ccd4812ba16a0bf5b2444054e3f67b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_BuildingBlockCategory</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_BuildingBlockCategory</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_BuildingBlockCategory</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1db4f840fe5a07b734b2c3e29f3638e4" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_BuildingBlockCategory</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1244" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad44455d66aa39003b5944206b482b258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_BuildingBlockGallery</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_BuildingBlockGallery</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_BuildingBlockGallery</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a44c9533264386a67b42c3da2764107e8" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_BuildingBlockGallery</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1217" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a20ebac107dc90e9f83e6e6e9aeb52edc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_CalendarType</definition>
        <argsstring>(Aspose::Words::Markup::SdtCalendarType value)</argsstring>
        <name>set_CalendarType</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_CalendarType</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1aedd5dacf4026bbe599c09eafd90b4159" kindref="member">Aspose::Words::Markup::SdtCalendarType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a21a44e41c4c76b38de9efcde2436d002" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_CalendarType</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1190" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa02ddabbd52a4d4d257205617a4bb96f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Checked</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_Checked</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Checked</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0b538d5ef0ab96c93a930ef1ca7c37c8" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Checked</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="913" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9054e949b27cf4738b16ab872043ef78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Color</definition>
        <argsstring>(System::Drawing::Color value) override</argsstring>
        <name>set_Color</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Color</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a48a8e1ab33b12532cb35a185f0c2d192">set_Color</reimplements>
        <param>
          <type><ref refid="class/system.drawing.color/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a65bc30b811a335e63c9eba947b8da56f" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Color</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1366" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1d30866211b9f1a4fb8866bc983f1417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_DateDisplayFormat</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_DateDisplayFormat</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_DateDisplayFormat</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ab0732593a0702d9c9adea3c14496e441" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_DateDisplayFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1059" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a422a8cb1bfe68791a78e222dcc49bab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_DateDisplayLocale</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_DateDisplayLocale</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_DateDisplayLocale</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aeb85d0fe6772d6d2800095202a6712ff" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_DateDisplayLocale</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1015" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6281f604b6af4c1f9e98e283ef88622e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_DateStorageFormat</definition>
        <argsstring>(Aspose::Words::Markup::SdtDateStorageFormat value)</argsstring>
        <name>set_DateStorageFormat</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_DateStorageFormat</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1" kindref="member">Aspose::Words::Markup::SdtDateStorageFormat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4c63f4e04b40646d2d438a5f2f5b02c6" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_DateStorageFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1146" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5079fb2eedba799743e9878bfabf278b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_FullDate</definition>
        <argsstring>(System::DateTime value)</argsstring>
        <name>set_FullDate</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_FullDate</qualifiedname>
        <param>
          <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6598d89c2049713ad797041e92ecf925" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_FullDate</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1102" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aec379bd7c3518bd81418a2244912dd91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_IsShowingPlaceholderText</definition>
        <argsstring>(bool value) override</argsstring>
        <name>set_IsShowingPlaceholderText</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_IsShowingPlaceholderText</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a96dc2a8d22546487017f32190823079a">set_IsShowingPlaceholderText</reimplements>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad90d80065ba4869471751f6e12b4ea6f" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_IsShowingPlaceholderText</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="542" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a728e5ee0455c9066221fa890d401294d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_IsTemporary</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IsTemporary</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_IsTemporary</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac502e5d8773d75ea2db9ca3bb6c59752" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_IsTemporary</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="756" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1afd8d68512a5550d307c5d4627d2555f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_LockContentControl</definition>
        <argsstring>(bool value) override</argsstring>
        <name>set_LockContentControl</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_LockContentControl</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1af1475e1ab6bd64db7aadcd980bcc4695">set_LockContentControl</reimplements>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a63e1debacbadf5837ad0557549759c69" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_LockContentControl</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="457" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7c2e237d8672546dde71b3b2471f9340" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_LockContents</definition>
        <argsstring>(bool value) override</argsstring>
        <name>set_LockContents</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_LockContents</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a79775afdafb32dc6d3551460f4032be3">set_LockContents</reimplements>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac044b9856a85a2bc5e5305b2a7f7c03a" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_LockContents</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="491" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a776830dd5ead5937e5951440ae2f6b32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Multiline</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_Multiline</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Multiline</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a8362fbedd0cc792abe481491490cc803" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Multiline</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1307" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a53765a01f03a3e523161ba52106dd2fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_PlaceholderName</definition>
        <argsstring>(System::String value) override</argsstring>
        <name>set_PlaceholderName</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_PlaceholderName</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1a4f8da9ded9231b64ba38e5a2b09f3ba2">set_PlaceholderName</reimplements>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a783e32c45d399ae8cf3e8abf83d70841" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_PlaceholderName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="282" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad9d92551319a8087fde602abb6548bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Style</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Style &gt; &amp;value)</argsstring>
        <name>set_Style</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Style</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Aspose::Words::Style</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0ee6e14aa05ccb38a5d6c2c78bdf0273" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Style</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1405" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a8114d34b7301b6e196ae3bee5375dbbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_StyleName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_StyleName</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_StyleName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9f57880587321f1d2e87d516df84d0dc" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_StyleName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1444" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0293c03923848aeff9099cf35c9f61ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Tag</definition>
        <argsstring>(System::String value) override</argsstring>
        <name>set_Tag</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Tag</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1addbcf89eadc671acb287459b37b91e76">set_Tag</reimplements>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aec15c01b725f77e7cb1a91fd193f0ab6" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Tag</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="602" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aadde662f802acf78486f15e1a5ff35fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::set_Title</definition>
        <argsstring>(System::String value) override</argsstring>
        <name>set_Title</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::set_Title</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag_1afe8d3be2b883b74bdbffaed1127bd4d9">set_Title</reimplements>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7b031dd3e109c827a1164408e92f53ea" kindref="member">Aspose::Words::Markup::StructuredDocumentTag::get_Title</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="816" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a3754ee1c6429dd5e2e0204b71e6251bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::SetCheckedSymbol</definition>
        <argsstring>(int32_t characterCode, const System::String &amp;fontName)</argsstring>
        <name>SetCheckedSymbol</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::SetCheckedSymbol</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>characterCode</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>fontName</declname>
        </param>
        <briefdescription>
<para>Sets the symbol used to represent the checked state of a check box content control. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this method will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member">Checkbox</ref> SDT types.</para>
<para>For all other SDT types exception will occur.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>characterCode</parametername>
</parameternamelist>
<parameterdescription>
<para>The character code for the specified symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fontName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the font that contains the symbol.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Show how to create a structured document tag in the form of a check box. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtCheckBox<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member" tooltip="The SDT represents a checkbox when displayed in the document.">SdtType::Checkbox</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;set_Checked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>symbols<sp/>used<sp/>to<sp/>represent<sp/>the<sp/>checked/unchecked<sp/>state<sp/>of<sp/>a<sp/>checkbox<sp/>content<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetCheckedSymbol(0x00A9,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetUncheckedSymbol(0x00AE,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtCheckBox);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.CheckBox.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1581" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4d3b46c17bb23f2103eecefc41a81969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::StructuredDocumentTag::SetUncheckedSymbol</definition>
        <argsstring>(int32_t characterCode, const System::String &amp;fontName)</argsstring>
        <name>SetUncheckedSymbol</name>
        <qualifiedname>Aspose::Words::Markup::StructuredDocumentTag::SetUncheckedSymbol</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>characterCode</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>fontName</declname>
        </param>
        <briefdescription>
<para>Sets the symbol used to represent the unchecked state of a check box content control. </para>
        </briefdescription>
        <detaileddescription>
<para>Accessing this method will only work for <ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member">Checkbox</ref> SDT types.</para>
<para>For all other SDT types exception will occur.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>characterCode</parametername>
</parameternamelist>
<parameterdescription>
<para>The character code for the specified symbol. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fontName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the font that contains the symbol.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Show how to create a structured document tag in the form of a check box. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtCheckBox<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a4f8222964f9a317cef99dddc23a121bd" kindref="member" tooltip="The SDT represents a checkbox when displayed in the document.">SdtType::Checkbox</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;set_Checked(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>symbols<sp/>used<sp/>to<sp/>represent<sp/>the<sp/>checked/unchecked<sp/>state<sp/>of<sp/>a<sp/>checkbox<sp/>content<sp/>control.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetCheckedSymbol(0x00A9,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sdtCheckBox-&gt;SetUncheckedSymbol(0x00AE,<sp/>u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtCheckBox);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;StructuredDocumentTag.CheckBox.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="1610" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a structured document tag (SDT or content control) in a document. </para>
    </briefdescription>
    <detaileddescription>
<para>Structured document tags (SDTs) allow to embed customer-defined semantics as well as its behavior and appearance into a document.</para>
<para>In this version Aspose.Words provides a number of public methods and properties to manipulate the behavior and content of <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref>. Mapping of SDT nodes to custom XML packages within a document can be performed with using the <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" kindref="member">XmlMapping</ref> property.</para>
<para><ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref> can occur in a document in the following places:</para>
<para><itemizedlist>
<listitem><para>Block-level - Among paragraphs and tables, as a child of a <ref refid="class_aspose_1_1_words_1_1_body" kindref="compound">Body</ref>, <ref refid="class_aspose_1_1_words_1_1_header_footer" kindref="compound">HeaderFooter</ref>, <ref refid="class_aspose_1_1_words_1_1_comment" kindref="compound">Comment</ref>, <ref refid="class_aspose_1_1_words_1_1_notes_1_1_footnote" kindref="compound">Footnote</ref> or a <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_shape" kindref="compound">Shape</ref> node.</para>
</listitem><listitem><para>Row-level - Among rows in a table, as a child of a <ref refid="class_aspose_1_1_words_1_1_tables_1_1_table" kindref="compound">Table</ref> node.</para>
</listitem><listitem><para>Cell-level - Among cells in a table row, as a child of a <ref refid="class_aspose_1_1_words_1_1_tables_1_1_row" kindref="compound">Row</ref> node.</para>
</listitem><listitem><para>Inline-level - Among inline content inside, as a child of a <ref refid="class_aspose_1_1_words_1_1_paragraph" kindref="compound">Paragraph</ref>.</para>
</listitem><listitem><para>Nested inside another <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag" kindref="compound">StructuredDocumentTag</ref>.</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with styles for content control elements. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>to<sp/>apply<sp/>a<sp/>style<sp/>from<sp/>the<sp/>document<sp/>to<sp/>a<sp/>structured<sp/>document<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Apply<sp/>a<sp/>style<sp/>object<sp/>from<sp/>the<sp/>document&apos;s<sp/>style<sp/>collection:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Style&gt;<sp/>quoteStyle<sp/>=<sp/>doc-&gt;get_Styles()-&gt;idx_get(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtPlainText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7ab7ebbf7f254ef646928dd58f62383a85" kindref="member" tooltip="The SDT represents a plain text box when displayed in the document.">SdtType::PlainText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtPlainText-&gt;set_Style(quoteStyle);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Reference<sp/>a<sp/>style<sp/>in<sp/>the<sp/>document<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdtRichText<sp/>=<sp/>MakeObject&lt;StructuredDocumentTag&gt;(doc,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a857aa9a59398c85d6ad07f20c4123ae7a26dfbb5d9e174bf46f73d8fe97cb1dd5" kindref="member" tooltip="The SDT represents a rich text box when displayed in the document.">SdtType::RichText</ref>,<sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1a57672f3522526bfeb73e0b7539583751a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member" tooltip="The element occurs at the inline level (e.g. among as runs of text).">MarkupLevel::Inline</ref>);</highlight></codeline>
<codeline><highlight class="normal">sdtRichText-&gt;set_StyleName(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtPlainText);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertNode(sdtRichText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/>sdtPlainText-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;NodeCollection&gt;<sp/>tags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a68e4c6ed96f1d85ba56be9178fdbd738" kindref="member" tooltip="Allows to define customer-specific information and its means of presentation.">NodeType::StructuredDocumentTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>System::IterateOver(tags))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sdt<sp/>=<sp/>System::DynamicCast&lt;StructuredDocumentTag&gt;(node);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1abffb83b9a70f034f432216a95d8ded34ac48e929b2b1eabba2ba036884433345e" kindref="member">StyleIdentifier::Quote</ref>,<sp/>sdt-&gt;get_Style()-&gt;get_StyleIdentifier());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">,<sp/>sdt-&gt;get_StyleName());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aspose::Words::CompositeNode</label>
        <link refid="class_aspose_1_1_words_1_1_composite_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Aspose::Words::INodeCollection</label>
      </node>
      <node id="9">
        <label>Aspose::Words::IRunAttrSource</label>
      </node>
      <node id="7">
        <label>Aspose::Words::Markup::IMarkupNode</label>
      </node>
      <node id="10">
        <label>Aspose::Words::Markup::IStructuredDocumentTag</label>
        <link refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Markup::StructuredDocumentTag</label>
        <link refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Aspose::Words::Node</label>
        <link refid="class_aspose_1_1_words_1_1_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Aspose::Words::Revisions::ITrackableNode</label>
      </node>
      <node id="5">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Node &gt; &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Aspose::Words::CompositeNode</label>
        <link refid="class_aspose_1_1_words_1_1_composite_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Aspose::Words::INodeCollection</label>
      </node>
      <node id="9">
        <label>Aspose::Words::IRunAttrSource</label>
      </node>
      <node id="7">
        <label>Aspose::Words::Markup::IMarkupNode</label>
      </node>
      <node id="10">
        <label>Aspose::Words::Markup::IStructuredDocumentTag</label>
        <link refid="class_aspose_1_1_words_1_1_markup_1_1_i_structured_document_tag"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Markup::StructuredDocumentTag</label>
        <link refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Aspose::Words::Node</label>
        <link refid="class_aspose_1_1_words_1_1_node"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Aspose::Words::Revisions::ITrackableNode</label>
      </node>
      <node id="5">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Node &gt; &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" line="132" column="1" bodyfile="Aspose.Words.Cpp/Markup/StructuredDocumentTag.h" bodystart="133" bodyend="1886"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad0cd9ccc811dacc9451f1ff9e893fbbd" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>Accept</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac2cf1bb1e3be69c7b4e0fa5a30a15923" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>AcceptEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6de635017babf5a81a042346eb37ca20" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>AcceptStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1af74bc4213aebbe5fd01d2fc0f08b2bec" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>AppendChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9e032d84d8cfdac5801ca15f5f0b7e6a" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa05b4a0939387c844a9302e019055868" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>BaseType1</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a191a6614b0e7c788cd12a65b0bbe2c0e" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>BaseType2</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a58e0ac94f9f59418e733383d9d4b28fe" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>BaseType3</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad5f1f06511e982291ec5715d09975652" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>BaseType4</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ae934933bace353b2c5d14cd6b594d3b1" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>CanInsert</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa2d9e05cf36cb1eb934c886560b1b49a" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>Clear</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0e410cd8498ebdf1c4e775115d77877f" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>Clone</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a81dedd9b241b09760112b5e5068f1daa" prot="public" virt="non-virtual" ambiguityscope="Aspose::Words::Node::"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>Clone</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a46bed203ff6959b121cd635196708fe2" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>CppMemberwiseClone</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aad91781129ccc751c3c48f897d6bb72d" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Appearance</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1db4f840fe5a07b734b2c3e29f3638e4" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_BuildingBlockCategory</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a44c9533264386a67b42c3da2764107e8" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_BuildingBlockGallery</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a21a44e41c4c76b38de9efcde2436d002" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_CalendarType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0b538d5ef0ab96c93a930ef1ca7c37c8" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Checked</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a98d9935dcf818989566431ab3b75bbed" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_ChildNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a65bc30b811a335e63c9eba947b8da56f" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Color</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1fc3efa4b614c744019c2504e95dfd8e" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_ContentsFont</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a801d3d549eb73e216df5b7a64d9e1c68" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Count</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a941120df17372b25f9a7127a9d9b3816" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_CustomNodeId</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ab0732593a0702d9c9adea3c14496e441" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_DateDisplayFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aeb85d0fe6772d6d2800095202a6712ff" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_DateDisplayLocale</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4c63f4e04b40646d2d438a5f2f5b02c6" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_DateStorageFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a2a69f84e3ccd323199299c999ab32d46" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Document</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7ab64a4d8556ca064f4165694ac8d812" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_EndCharacterFont</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a052d0e4560975f6c19c77bf19d82eedf" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_FirstChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6598d89c2049713ad797041e92ecf925" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_FullDate</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a4b939686e9a6a245a31cf392d202316d" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_HasChildNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1afd9953ddcffa55def59337c73dcbeedd" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Id</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a96cf2dd90a284fe9939d1d90780d2d4b" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_IsComposite</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad90d80065ba4869471751f6e12b4ea6f" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_IsShowingPlaceholderText</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac502e5d8773d75ea2db9ca3bb6c59752" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_IsTemporary</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a58fae512d8549219b7c3a17ef2d46439" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_LastChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4f88bc91ee8b56e282c2ac8dff251996" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Level</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4a97d133ea053caac48e0e990d48aee6" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Level_IMarkupNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a725618a08dc7341e390ab098c060d37a" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_ListItems</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a63e1debacbadf5837ad0557549759c69" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_LockContentControl</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac044b9856a85a2bc5e5305b2a7f7c03a" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_LockContents</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a8362fbedd0cc792abe481491490cc803" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Multiline</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a938ff32d060619d89ecefdf57984abf8" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_NextSibling</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a2d71aa9eb130164841efce2d16d02367" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_NodeType</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ab9e608488885c65a2a165dea6645d15e" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_ParentNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa9828b2c82ec48328e362577c29f7d20" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Placeholder</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a783e32c45d399ae8cf3e8abf83d70841" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_PlaceholderName</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a6013fe75e5859c54d12a87f9b97fa7f3" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_PreviousSibling</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0f8077bf80409ba331148095b95bc3e5" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Range</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4efd957d9779d12e3e7440facfa2fe96" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_SdtType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0ee6e14aa05ccb38a5d6c2c78bdf0273" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Style</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9f57880587321f1d2e87d516df84d0dc" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_StyleName</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aec15c01b725f77e7cb1a91fd193f0ab6" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Tag</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7b031dd3e109c827a1164408e92f53ea" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_Title</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a04fd9175294ea62cb1da70a0a5991b3d" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_WordOpenXML</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>get_XmlMapping</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a951706cfa681573e79a56204a2029e9e" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>GetAncestor</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ae19991f4d5aa7ccb60ce6d7207495f1c" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>GetAncestorOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a6d961b080681f8dc6ee551c6c0ce44da" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>GetChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1ae1fc746cc70cea4c9ab30caf39aec146" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>GetChildNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a6d3cc4280067e07fd504c11e6c968419" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>GetEnumerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a08b4d2cc617495b60d85a550422e2d8f" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>GetText</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1ac0cfce6ca5295fe714f5da1e8e244d9e" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>IndexOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a2b6e91eabfc75b02062ae6714cd95ec2" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>InsertAfter</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a247cedb3f1fe5474c87f5b5fa0dcd995" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>InsertBefore</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0dcf1e6c7fbe48fcba9d53f881c9b7ae" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>IsRanged</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a29fa29169c2b0fc618a1c786355293a9" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aba296e2d8c30b050ad65de17a64b7e87" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aae118a4cd2eb8e070f36658782e5cc4b" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField10</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a12474038e0b6561006390998e1558fcc" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField11</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7cf7645b12a39f7448fd1f401051e2b0" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField12</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1acec3564262fe30c26228dbefd2117916" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField13</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a40b5b05afb5c92bcab97277affb00cf2" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField14</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5d04182361fc6201c80cc0eeb213388d" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField15</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5ca1ca87cc802e645ab35a6d5383210a" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField16</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1fc3d998a6f4696e09a542a346a0b950" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField17</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a41bc6a5fc85816ff6b2be53de0a39297" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField18</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a3397851f6c42f244a3bceebc41981101" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField19</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a38e51a259da576ce31d6b4efc994be41" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ade46c1ec1b406c1be2065331cceabd59" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField20</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ace5dd6d591ccf807f4444fb5e21fc584" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField21</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5486d47c51de55d5151bf58a5e816f67" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField22</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a2f072cc90bcf9b56b37da576e7c776d7" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField23</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6eec55d7242a66dbf280aa4c5ef9a9e2" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField24</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a85b23cb4cbe9c4663a0452e2349aeab4" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField25</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0c84f3395026c0ba4ce5f7de14a8eab3" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6120e88aea46679f725fb217e4df2216" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a829b23a9db1fda9990d7a5f706bce362" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ab94ebb516653d878e6fe582e6328edfe" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1afaa963a04202764d3254a4f1473a576d" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a580f286e4b549e53af3ed5321cc6a8bd" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField8</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aafee832a39f884507c12f5c71aee1286" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>mField9</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a4f6979e06a5914aeb37a9cb8448658a6" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>NextPreOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0e46189d6dfa7a81c8fa2e2bd2354d61" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>NodeTypeToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1abae3ff6d970ba209cf4eb1c539b205ee" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>PrependChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1af40f9573daf950d978d211d3e75c6a95" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>PreviousPreOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a75a9cc0fda5ec9c8aaa1c4910af8f28c" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a4afce861f4df13714988e44419374f21" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>RemoveAllChildren</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a28888dd687866f66b3bb221e63b5063c" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>RemoveChild</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a283087e910b889c887044af01bd11ae7" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>RemoveMoveRevisions</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad0e5fd593e34d67e3f27b425d80389ea" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>RemoveSelfOnly</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a5a00bfd5d2e04d5752d96e226a3f5849" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>RemoveSmartTags</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a406a753239bc9a99ce09ef0452de5031" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a553923ba5225bd3d28f1960b72b45f4f" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>SelectNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1aa2eb340deba06c3dcb7cc29dfeca5a99" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>SelectSingleNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa894854e5a12248e44d825e86a7b43e7" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Appearance</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1ccd4812ba16a0bf5b2444054e3f67b6" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_BuildingBlockCategory</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad44455d66aa39003b5944206b482b258" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_BuildingBlockGallery</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a20ebac107dc90e9f83e6e6e9aeb52edc" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_CalendarType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa02ddabbd52a4d4d257205617a4bb96f" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Checked</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9054e949b27cf4738b16ab872043ef78" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Color</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0d412cc05de7836acb92332e55eea267" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_CustomNodeId</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a1d30866211b9f1a4fb8866bc983f1417" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_DateDisplayFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a422a8cb1bfe68791a78e222dcc49bab2" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_DateDisplayLocale</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a6281f604b6af4c1f9e98e283ef88622e" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_DateStorageFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a5079fb2eedba799743e9878bfabf278b" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_FullDate</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aec379bd7c3518bd81418a2244912dd91" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_IsShowingPlaceholderText</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a728e5ee0455c9066221fa890d401294d" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_IsTemporary</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1afd8d68512a5550d307c5d4627d2555f5" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_LockContentControl</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a7c2e237d8672546dde71b3b2471f9340" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_LockContents</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a776830dd5ead5937e5951440ae2f6b32" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Multiline</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a53765a01f03a3e523161ba52106dd2fc" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_PlaceholderName</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ad9d92551319a8087fde602abb6548bdb" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Style</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a8114d34b7301b6e196ae3bee5375dbbd" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_StyleName</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a0293c03923848aeff9099cf35c9f61ae" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Tag</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aadde662f802acf78486f15e1a5ff35fa" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>set_Title</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a3754ee1c6429dd5e2e0204b71e6251bf" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>SetCheckedSymbol</name></member>
      <member refid="class_aspose_1_1_words_1_1_composite_node_1a29e186f28a68773c7c7679079c77d827" prot="public" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>SetTemplateWeakPtr</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4d3b46c17bb23f2103eecefc41a81969" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>SetUncheckedSymbol</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a9cf84a54f86169d6555352a4f72b6b66" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>StructuredDocumentTag</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1aa871772e0c41923e5cd7487b7debf3e5" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>StructuredDocumentTagNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ae662eeb5e4f1952e978598da28f502de" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1ac6906a5154accaa6bbb855f2f5be8170" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1af7aa71ab5f185ee2463406dab7727595" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ad18f64c5586b84a071957824b24426a2" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4d51ab4ddb4a3de9dc4ed287ba869d38" prot="private" virt="virtual"><scope>Aspose::Words::Markup::StructuredDocumentTag</scope><name>~StructuredDocumentTag</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
