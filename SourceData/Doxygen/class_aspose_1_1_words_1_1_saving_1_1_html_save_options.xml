<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Saving::HtmlSaveOptions</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_saving_1_1_save_options" prot="public" virt="non-virtual">Aspose::Words::Saving::SaveOptions</basecompoundref>
    <includes refid="_html_save_options_8h" local="no">Aspose.Words.Cpp/Saving/HtmlSaveOptions.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae7c86ffad1ebf9096a950265fb3017b2" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_saving_1_1_save_options" kindref="compound">Aspose::Words::Saving::SaveOptions</ref></type>
        <definition>typedef Aspose::Words::Saving::SaveOptions Aspose::Words::Saving::HtmlSaveOptions::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="230" column="48" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae72b264971777ac6e6f28f3d506bdc75" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options" kindref="compound">HtmlSaveOptions</ref></type>
        <definition>typedef HtmlSaveOptions Aspose::Words::Saving::HtmlSaveOptions::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="229" column="29" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a98b80369e81f52a6338b7dd6117e703f" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_save_options" kindref="compound">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Saving::HtmlSaveOptions::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="232" column="37" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5ce58e7a575f1bf5fa405df0045d58a1" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2971" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2971" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a967d77ded1dc0d9b37636336c888ca45" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Saving::HtmlSaveOptions::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2972" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2972" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab924300c2a82215faf32c1b9b0fcf167" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Saving::HtmlSaveOptions::mField10</definition>
        <argsstring></argsstring>
        <name>mField10</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2981" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2981" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac2753274f1cd3da30b2ddec7b14dae53" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField11</definition>
        <argsstring></argsstring>
        <name>mField11</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2982" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2982" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5474c2d88a0987350da246ed2e00edbe" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField12</definition>
        <argsstring></argsstring>
        <name>mField12</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2983" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2983" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4b633fbc2afa5b5ede43aaa82f2d91aa" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField13</definition>
        <argsstring></argsstring>
        <name>mField13</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2984" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa3ef27027648982eca505d06bea7737c" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField14</definition>
        <argsstring></argsstring>
        <name>mField14</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2985" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2985" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1afe15b329b0ab0a274255afe61d2d7f88" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField15</definition>
        <argsstring></argsstring>
        <name>mField15</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2986" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae4ed2463c8732d3bd1381bb740aa5b3f" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField16</definition>
        <argsstring></argsstring>
        <name>mField16</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2987" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1acee7e5a7f6c14742e105b2044468f436" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField17</definition>
        <argsstring></argsstring>
        <name>mField17</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField17</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2988" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8490d9e22e4fdfd0945f21c54662bc0c" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField18</definition>
        <argsstring></argsstring>
        <name>mField18</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField18</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2989" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2989" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aab89549a38328ea4fdd594796b6cdac5" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField19</definition>
        <argsstring></argsstring>
        <name>mField19</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField19</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2990" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aded0dfc9c9ababb39b1f146878e50420" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2973" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2973" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a85d8409212fd6749240e3dcceb7fe377" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField20</definition>
        <argsstring></argsstring>
        <name>mField20</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField20</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2991" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a7bce6c3d755ed1b82468fda3883affee" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField21</definition>
        <argsstring></argsstring>
        <name>mField21</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField21</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2992" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2992" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0f7b141059f033bccf19a9b640288f85" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField22</definition>
        <argsstring></argsstring>
        <name>mField22</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField22</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2993" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2993" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a42003fca4f663459432dbe549c32eec6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Saving::HtmlSaveOptions::mField23</definition>
        <argsstring></argsstring>
        <name>mField23</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField23</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2994" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9466678312cf312700bf9c775559c5a0" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField24</definition>
        <argsstring></argsstring>
        <name>mField24</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField24</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2995" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2995" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae9e2e2282ddd76c3547c3237a74bebc5" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField25</definition>
        <argsstring></argsstring>
        <name>mField25</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField25</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2996" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad586b52d00a1d378a2a448ebf7e35202" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField26</definition>
        <argsstring></argsstring>
        <name>mField26</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField26</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2997" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2997" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac086fa4a106f542efe2cf34c54b875ad" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField27</definition>
        <argsstring></argsstring>
        <name>mField27</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField27</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2998" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5dd4e0a31eae7bb0e708b40e55f0b2d7" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField28</definition>
        <argsstring></argsstring>
        <name>mField28</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField28</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2999" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2999" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a55ff642e35ecd02734dcc207f48d3227" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField29</definition>
        <argsstring></argsstring>
        <name>mField29</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField29</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3000" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3000" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a596ee6c7548ac2bf5e4da7b77c330b18" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2974" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2974" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a09848a2daaa312e4e7a48c3ca529237b" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField30</definition>
        <argsstring></argsstring>
        <name>mField30</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField30</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3001" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3001" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae0b7255a35c600205bccd9fac930dcc5" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField31</definition>
        <argsstring></argsstring>
        <name>mField31</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField31</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3002" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3002" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1f7d6dbb097c2712fa3ca960e76018dc" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField32</definition>
        <argsstring></argsstring>
        <name>mField32</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3003" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a639f53406da51d7f6dc566d7a38fa65b" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField33</definition>
        <argsstring></argsstring>
        <name>mField33</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField33</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3004" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3004" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4061540d4733a463f176d8fcc7189070" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Saving::HtmlSaveOptions::mField34</definition>
        <argsstring></argsstring>
        <name>mField34</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField34</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3005" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3005" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aac5de8be59557ddbf609a6e2026bba5d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Saving::HtmlSaveOptions::mField35</definition>
        <argsstring></argsstring>
        <name>mField35</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField35</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3006" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac92c634d7550004297090a43d96becab" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField36</definition>
        <argsstring></argsstring>
        <name>mField36</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField36</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3007" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f0a88cafc5f37ba02a2604ed4418c78" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField37</definition>
        <argsstring></argsstring>
        <name>mField37</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField37</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3008" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1acd8efe101c13622f2b0cd23f6d388032" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField38</definition>
        <argsstring></argsstring>
        <name>mField38</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField38</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3009" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa055c00619afa32986ea67f9b090ae0d" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField39</definition>
        <argsstring></argsstring>
        <name>mField39</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField39</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3010" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a3e09e5ac6c800399efa82c8b12e9f762" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2975" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2975" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a54adb4fc3a83f74fd6fd8982c7dc475d" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField40</definition>
        <argsstring></argsstring>
        <name>mField40</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField40</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3011" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9a8f130faf6ea04d107a7078bfe5bb0c" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField41</definition>
        <argsstring></argsstring>
        <name>mField41</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField41</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3012" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1acb3b5e26ecff600fd841bf2a0a4c832c" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField42</definition>
        <argsstring></argsstring>
        <name>mField42</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField42</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3013" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adfdb840f0ef7fa0aa2d718f083ddcf5b" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Saving::HtmlSaveOptions::mField43</definition>
        <argsstring></argsstring>
        <name>mField43</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField43</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3014" column="23" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e417e63a77a27b9468cf5bbb9628144" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField44</definition>
        <argsstring></argsstring>
        <name>mField44</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField44</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="3015" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="3015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a498b9d646280a0acd76400a019beffc9" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2976" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2976" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0f69bd503219c1e8982b17f2004513d2" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2977" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2977" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5359277d71ba8ba359896dcacc70a89d" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2978" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2978" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0c14f83f6c6883516e3231b22c1b51a6" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField8</definition>
        <argsstring></argsstring>
        <name>mField8</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2979" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2979" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6c79f64003b6ba793e3165d60d2ee8d0" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::mField9</definition>
        <argsstring></argsstring>
        <name>mField9</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::mField9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2980" column="20" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="2980" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a24c6615734949b3fa18f490349839d78" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_IsMultipleMainPartsAllowed</definition>
        <argsstring>() override</argsstring>
        <name>get_IsMultipleMainPartsAllowed</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_IsMultipleMainPartsAllowed</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a0415dac3009afac14aae2b5743a48d64">get_IsMultipleMainPartsAllowed</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2965" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0b5358f08e7919de423e274c9453f78f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Saving::HtmlSaveOptions::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="233" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa0145f0059be9dcc4b0f7fd59e028f8b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::SetTestMode</definition>
        <argsstring>() override</argsstring>
        <name>SetTestMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::SetTestMode</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a2ecfd46ad2350b7f5ccba9c293c0d8a6">SetTestMode</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2967" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af887e38e7a8024fab5e2a59f1ce3545b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Saving::HtmlSaveOptions::HtmlSaveOptions</definition>
        <argsstring>()</argsstring>
        <name>HtmlSaveOptions</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::HtmlSaveOptions</qualifiedname>
        <briefdescription>
<para>Initializes a new instance of this class that can be used to save a document in the <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member">Html</ref> format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a specific encoding when saving a document to .epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>specify<sp/>the<sp/>encoding<sp/>for<sp/>a<sp/>document<sp/>that<sp/>we<sp/>will<sp/>save.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_SaveFormat(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>output<sp/>.epub<sp/>document<sp/>will<sp/>have<sp/>all<sp/>its<sp/>contents<sp/>in<sp/>one<sp/>HTML<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>split<sp/>criterion<sp/>allows<sp/>us<sp/>to<sp/>segment<sp/>the<sp/>document<sp/>into<sp/>several<sp/>HTML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>set<sp/>the<sp/>criteria<sp/>to<sp/>split<sp/>the<sp/>document<sp/>into<sp/>heading<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>readers<sp/>who<sp/>cannot<sp/>read<sp/>HTML<sp/>files<sp/>more<sp/>significant<sp/>than<sp/>a<sp/>specific<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>that<sp/>we<sp/>want<sp/>to<sp/>export<sp/>document<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportDocumentProperties(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.Doc2EpubSaveOptions.epub&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2920" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2eb1915a21e04129b8b1b337c49bb6e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Saving::HtmlSaveOptions::HtmlSaveOptions</definition>
        <argsstring>(Aspose::Words::SaveFormat saveFormat)</argsstring>
        <name>HtmlSaveOptions</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::HtmlSaveOptions</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
          <declname>saveFormat</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of this class that can be used to save a document in the <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member">Html</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member">Mhtml</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member">Epub</ref> or <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5f432cf9f04ad9b9c20d41651e6689fe" kindref="member">Azw3</ref> format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>saveFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>Can be <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member">Html</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member">Mhtml</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member">Epub</ref> or <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5f432cf9f04ad9b9c20d41651e6689fe" kindref="member">Azw3</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to save a document to a specific version of HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_HtmlVersion(htmlVersion);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HtmlVersions.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>HTML<sp/>documents<sp/>will<sp/>have<sp/>minor<sp/>differences<sp/>to<sp/>be<sp/>compatible<sp/>with<sp/>different<sp/>HTML<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HtmlVersions.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(htmlVersion)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a674e7b063b14efa7a8c9588418cc360e" kindref="member" tooltip="Saves the document in compliance with the HTML 5 standard.">HtmlVersion::Html5</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;a<sp/>id=\&quot;_Toc76372689\&quot;&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;a<sp/>id=\&quot;_Toc76372689\&quot;&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>style=\&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a5cc8cd15b35743590d1128730bcc8937" kindref="member" tooltip="Saves the document in compliance with the XHTML 1.0 Transitional standard.">HtmlVersion::Xhtml</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;a<sp/>name=\&quot;_Toc76372689\&quot;&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;ul<sp/>type=\&quot;disc\&quot;<sp/>style=\&quot;margin:0pt;<sp/>padding-left:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2961" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9f855205143e9424f6bda726f0e518dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_AllowNegativeIndent</definition>
        <argsstring>() const</argsstring>
        <name>get_AllowNegativeIndent</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_AllowNegativeIndent</qualifiedname>
        <briefdescription>
<para>Specifies whether negative left and right indents of paragraphs are normalized when saving to HTML, MHTML or EPUB. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When negative indent is not allowed, it is exported as zero margin to HTML. When negative indent is allowed, a paragraph might appear partially outside of the browser window.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to preserve negative indents in the output .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>table<sp/>with<sp/>a<sp/>negative<sp/>indent,<sp/>which<sp/>will<sp/>push<sp/>it<sp/>to<sp/>the<sp/>left<sp/>past<sp/>the<sp/>left<sp/>page<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_LeftIndent(-36);</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_PreferredWidth(PreferredWidth::FromPoints(144));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2eac3316c9c335ce5fa8638df2fc5d518d4" kindref="member" tooltip="Break between paragraphs.">BreakType::ParagraphBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>table<sp/>with<sp/>a<sp/>positive<sp/>indent,<sp/>which<sp/>will<sp/>push<sp/>the<sp/>table<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_LeftIndent(36);</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_PreferredWidth(PreferredWidth::FromPoints(144));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>a<sp/>document<sp/>to<sp/>HTML,<sp/>Aspose.Words<sp/>will<sp/>only<sp/>preserve<sp/>negative<sp/>indents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>the<sp/>one<sp/>we<sp/>have<sp/>applied<sp/>to<sp/>the<sp/>first<sp/>table<sp/>if<sp/>we<sp/>set<sp/>the<sp/>&quot;AllowNegativeIndent&quot;<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>SaveOptions<sp/>object<sp/>that<sp/>we<sp/>will<sp/>pass<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_AllowNegativeIndent(allowNegativeIndent);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_TableWidthOutputMode(<ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9a9aa4e1861600ab4ca55905490de997eb" kindref="member" tooltip="Element sizes are exported only if they are specified in relative units in the document....">HtmlElementSizeOutputMode::RelativeOnly</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.NegativeIndent.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.NegativeIndent.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowNegativeIndent)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;margin-left:-41.65pt;<sp/>border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;margin-left:30.35pt;<sp/>border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;margin-left:30.35pt;<sp/>border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="334" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1abe234d6feed09dc1bd141adc1b7e2cb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_CssClassNamePrefix</definition>
        <argsstring>() const</argsstring>
        <name>get_CssClassNamePrefix</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_CssClassNamePrefix</qualifiedname>
        <briefdescription>
<para>Specifies a prefix which is added to all CSS class names. Default value is an empty string and generated CSS class names have no common prefix. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not empty, all CSS classes generated by Aspose.Words will start with the specified prefix. This might be useful, for example, if you add custom CSS to generated documents and want to prevent class name conflicts.</para>
<para>If the value is not <computeroutput>null</computeroutput> or empty, it must be a valid CSS identifier.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>The value is not empty and is not a valid CSS identifier.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to save a document to HTML, and add a prefix to all of its CSS class names. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_CssClassNamePrefix(u</highlight><highlight class="stringliteral">&quot;myprefix-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.CssClassNamePrefix.html&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.CssClassNamePrefix.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>class=\&quot;myprefix-Header\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>class=\&quot;myprefix-Footer\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.CssClassNamePrefix.css&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;.myprefix-Footer<sp/>{<sp/>margin-bottom:0pt;<sp/>line-height:normal;<sp/>font-family:Arial;<sp/>font-size:11pt<sp/>}\r\n&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;.myprefix-Header<sp/>{<sp/>margin-bottom:0pt;<sp/>line-height:normal;<sp/>font-family:Arial;<sp/>font-size:11pt<sp/>}\r\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="531" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6a5625b40f58df39564f08f9eefbe57b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_css_saving_callback" kindref="compound">Aspose::Words::Saving::ICssSavingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Saving::ICssSavingCallback &gt; Aspose::Words::Saving::HtmlSaveOptions::get_CssSavingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_CssSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_CssSavingCallback</qualifiedname>
        <briefdescription>
<para>Allows to control how CSS styles are saved when a document is saved to HTML, MHTML or EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with CSS stylesheets that an HTML conversion creates. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExternalCssFilenames()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>&quot;HtmlFixedSaveOptions&quot;<sp/>object,<sp/>which<sp/>we<sp/>can<sp/>pass<sp/>to<sp/>the<sp/>document&apos;s<sp/>&quot;Save&quot;<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>modify<sp/>how<sp/>we<sp/>convert<sp/>the<sp/>document<sp/>to<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;CssStylesheetType&quot;<sp/>property<sp/>to<sp/>&quot;CssStyleSheetType.External&quot;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accompany<sp/>a<sp/>saved<sp/>HTML<sp/>document<sp/>with<sp/>an<sp/>external<sp/>CSS<sp/>stylesheet<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>directories<sp/>and<sp/>filenames<sp/>for<sp/>output<sp/>CSS<sp/>stylesheets.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Use<sp/>the<sp/>&quot;CssStyleSheetFileName&quot;<sp/>property<sp/>to<sp/>assign<sp/>a<sp/>filename<sp/>to<sp/>our<sp/>stylesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssStyleSheetFileName(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.css&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Use<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>name<sp/>our<sp/>stylesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssSavingCallback(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;ExSavingCallback::CustomCssSavingCallback&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.css&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">CustomCssSavingCallback<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ICssSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CustomCssSavingCallback(String<sp/>cssDocFilename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExportNeeded,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepCssStreamOpen)<sp/>:<sp/>mIsExportNeeded(false),<sp/>mKeepCssStreamOpen(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCssTextFileName<sp/>=<sp/>cssDocFilename;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsExportNeeded<sp/>=<sp/>isExportNeeded;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mKeepCssStreamOpen<sp/>=<sp/>keepCssStreamOpen;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CssSaving(SharedPtr&lt;CssSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>entire<sp/>source<sp/>document<sp/>via<sp/>the<sp/>&quot;Document&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_CssStream(MakeObject&lt;System::IO::FileStream&gt;(mCssTextFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_IsExportNeeded(mIsExportNeeded);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_KeepCssStreamOpen(mKeepCssStreamOpen);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_CssStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mCssTextFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsExportNeeded;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mKeepCssStreamOpen;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="728" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetFileName</definition>
        <argsstring>() const</argsstring>
        <name>get_CssStyleSheetFileName</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetFileName</qualifiedname>
        <briefdescription>
<para>Specifies the path and the name of the Cascading <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Style</ref> Sheet (CSS) file written when a document is exported to HTML. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para>This property has effect only when saving a document to HTML format and external CSS style sheet is requested using <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0d0a6686ce68066c2281fe2d854758ad" kindref="member">CssStyleSheetType</ref>.</para>
<para>If this property is empty, the CSS file will be saved into the same folder and with the same name as the HTML document but with the &quot;.css&quot; extension.</para>
<para>If only path but no file name is specified in this property, the CSS file will be saved into the specified folder and will have the same name as the HTML document but with the &quot;.css&quot; extension.</para>
<para>If the folder specified by this property doesn&apos;t exist, it will be created automatically before the CSS file is saved.</para>
<para>Another way to specify a folder where external CSS file is saved is to use <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolderAlias</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0d0a6686ce68066c2281fe2d854758ad" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetType</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with CSS stylesheets that an HTML conversion creates. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExternalCssFilenames()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>&quot;HtmlFixedSaveOptions&quot;<sp/>object,<sp/>which<sp/>we<sp/>can<sp/>pass<sp/>to<sp/>the<sp/>document&apos;s<sp/>&quot;Save&quot;<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>modify<sp/>how<sp/>we<sp/>convert<sp/>the<sp/>document<sp/>to<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;CssStylesheetType&quot;<sp/>property<sp/>to<sp/>&quot;CssStyleSheetType.External&quot;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accompany<sp/>a<sp/>saved<sp/>HTML<sp/>document<sp/>with<sp/>an<sp/>external<sp/>CSS<sp/>stylesheet<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>directories<sp/>and<sp/>filenames<sp/>for<sp/>output<sp/>CSS<sp/>stylesheets.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Use<sp/>the<sp/>&quot;CssStyleSheetFileName&quot;<sp/>property<sp/>to<sp/>assign<sp/>a<sp/>filename<sp/>to<sp/>our<sp/>stylesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssStyleSheetFileName(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.css&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Use<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>name<sp/>our<sp/>stylesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssSavingCallback(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;ExSavingCallback::CustomCssSavingCallback&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.css&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">CustomCssSavingCallback<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ICssSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CustomCssSavingCallback(String<sp/>cssDocFilename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExportNeeded,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepCssStreamOpen)<sp/>:<sp/>mIsExportNeeded(false),<sp/>mKeepCssStreamOpen(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCssTextFileName<sp/>=<sp/>cssDocFilename;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsExportNeeded<sp/>=<sp/>isExportNeeded;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mKeepCssStreamOpen<sp/>=<sp/>keepCssStreamOpen;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CssSaving(SharedPtr&lt;CssSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>entire<sp/>source<sp/>document<sp/>via<sp/>the<sp/>&quot;Document&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_CssStream(MakeObject&lt;System::IO::FileStream&gt;(mCssTextFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_IsExportNeeded(mIsExportNeeded);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_KeepCssStreamOpen(mKeepCssStreamOpen);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_CssStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mCssTextFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsExportNeeded;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mKeepCssStreamOpen;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="419" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0d0a6686ce68066c2281fe2d854758ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0" kindref="member">Aspose::Words::Saving::CssStyleSheetType</ref></type>
        <definition>Aspose::Words::Saving::CssStyleSheetType Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetType</definition>
        <argsstring>() const</argsstring>
        <name>get_CssStyleSheetType</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetType</qualifiedname>
        <briefdescription>
<para>Specifies how CSS (Cascading <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Style</ref> Sheet) styles are exported to HTML, MHTML or EPUB. Default value is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0a0125cf5f3ca38b312ca5d3b511c45a13" kindref="member">Inline</ref> for HTML/MHTML and <ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member">External</ref> for EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_saving" kindref="compound">Saving</ref> CSS style sheet into an external file is only supported when saving to HTML. When you are exporting to one of the container formats (EPUB or MHTML) and specifying <ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member">External</ref>, CSS file will be encapsulated into the output package.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetFileName</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with CSS stylesheets that an HTML conversion creates. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ExternalCssFilenames()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>&quot;HtmlFixedSaveOptions&quot;<sp/>object,<sp/>which<sp/>we<sp/>can<sp/>pass<sp/>to<sp/>the<sp/>document&apos;s<sp/>&quot;Save&quot;<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>modify<sp/>how<sp/>we<sp/>convert<sp/>the<sp/>document<sp/>to<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;CssStylesheetType&quot;<sp/>property<sp/>to<sp/>&quot;CssStyleSheetType.External&quot;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accompany<sp/>a<sp/>saved<sp/>HTML<sp/>document<sp/>with<sp/>an<sp/>external<sp/>CSS<sp/>stylesheet<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>directories<sp/>and<sp/>filenames<sp/>for<sp/>output<sp/>CSS<sp/>stylesheets.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Use<sp/>the<sp/>&quot;CssStyleSheetFileName&quot;<sp/>property<sp/>to<sp/>assign<sp/>a<sp/>filename<sp/>to<sp/>our<sp/>stylesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssStyleSheetFileName(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.css&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Use<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>name<sp/>our<sp/>stylesheet:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_CssSavingCallback(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;ExSavingCallback::CustomCssSavingCallback&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.css&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.ExternalCssFilenames.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">CustomCssSavingCallback<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ICssSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CustomCssSavingCallback(String<sp/>cssDocFilename,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isExportNeeded,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keepCssStreamOpen)<sp/>:<sp/>mIsExportNeeded(false),<sp/>mKeepCssStreamOpen(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCssTextFileName<sp/>=<sp/>cssDocFilename;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIsExportNeeded<sp/>=<sp/>isExportNeeded;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mKeepCssStreamOpen<sp/>=<sp/>keepCssStreamOpen;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CssSaving(SharedPtr&lt;CssSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>entire<sp/>source<sp/>document<sp/>via<sp/>the<sp/>&quot;Document&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_CssStream(MakeObject&lt;System::IO::FileStream&gt;(mCssTextFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_IsExportNeeded(mIsExportNeeded);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_KeepCssStreamOpen(mKeepCssStreamOpen);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_CssStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mCssTextFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsExportNeeded;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mKeepCssStreamOpen;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="493" column="49"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa97d90dadf11005be9c6c683c72d8856" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_document_part_saving_callback" kindref="compound">Aspose::Words::Saving::IDocumentPartSavingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Saving::IDocumentPartSavingCallback &gt; Aspose::Words::Saving::HtmlSaveOptions::get_DocumentPartSavingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_DocumentPartSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_DocumentPartSavingCallback</qualifiedname>
        <briefdescription>
<para>Allows to control how document parts are saved when a document is saved to HTML or EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to split a document into parts and save them. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DocumentPartsFileNames()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outFileName<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.DocumentPartsFileNames.html&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>&quot;HtmlFixedSaveOptions&quot;<sp/>object,<sp/>which<sp/>we<sp/>can<sp/>pass<sp/>to<sp/>the<sp/>document&apos;s<sp/>&quot;Save&quot;<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>modify<sp/>how<sp/>we<sp/>convert<sp/>the<sp/>document<sp/>to<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>save<sp/>the<sp/>document<sp/>normally,<sp/>there<sp/>will<sp/>be<sp/>one<sp/>output<sp/>HTML</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>document<sp/>with<sp/>all<sp/>the<sp/>source<sp/>document&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;DocumentSplitCriteria&quot;<sp/>property<sp/>to<sp/>&quot;DocumentSplitCriteria.SectionBreak&quot;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>our<sp/>document<sp/>to<sp/>multiple<sp/>HTML<sp/>files:<sp/>one<sp/>for<sp/>each<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07ac6788b2b9719f26994fd409d52a778fb" kindref="member" tooltip="The document is split into parts at a section break of any type.">DocumentSplitCriteria::SectionBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>the<sp/>&quot;DocumentPartSavingCallback&quot;<sp/>property<sp/>to<sp/>alter<sp/>the<sp/>document<sp/>part<sp/>saving<sp/>logic.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_DocumentPartSavingCallback(MakeObject&lt;ExSavingCallback::SavedDocumentPartRename&gt;(outFileName,<sp/>options-&gt;get_DocumentSplitCriteria()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>convert<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>images<sp/>into<sp/>html,<sp/>we<sp/>will<sp/>end<sp/>up<sp/>with<sp/>one<sp/>html<sp/>file<sp/>which<sp/>links<sp/>to<sp/>several<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>image<sp/>will<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>file<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>also<sp/>a<sp/>callback<sp/>that<sp/>can<sp/>customize<sp/>the<sp/>name<sp/>and<sp/>file<sp/>system<sp/>location<sp/>of<sp/>each<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ImageSavingCallback(MakeObject&lt;ExSavingCallback::SavedImageRename&gt;(outFileName));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>outFileName,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">SavedDocumentPartRename<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IDocumentPartSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SavedDocumentPartRename(String<sp/>outFileName,<sp/>DocumentSplitCriteria<sp/>documentSplitCriteria)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mCount(0),<sp/>mDocumentSplitCriteria(((<ref refid="namespace_aspose" kindref="compound">Aspose</ref>::<ref refid="namespace_aspose_1_1_words_1aedb2afadc4813c7e4de736b7b7481c94a6f15b8d4b7287d60a8ea3d1c5cbadc84" kindref="member">Words</ref>::Saving::<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member" tooltip="Specifies how the document is split into parts when saving to Html, Epub or Azw3 format.">DocumentSplitCriteria</ref>)0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutFileName<sp/>=<sp/>outFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDocumentSplitCriteria<sp/>=<sp/>documentSplitCriteria;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mOutFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member" tooltip="Specifies how the document is split into parts when saving to Html, Epub or Azw3 format.">DocumentSplitCriteria</ref><sp/>mDocumentSplitCriteria;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DocumentPartSaving(SharedPtr&lt;DocumentPartSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>entire<sp/>source<sp/>document<sp/>via<sp/>the<sp/>&quot;Document&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>partType<sp/>=<sp/>String::Empty;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mDocumentSplitCriteria)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::PageBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Page&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::ColumnBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Column&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::SectionBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Section&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::HeadingParagraph:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>from<sp/>heading&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>partFileName<sp/>=<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>part<sp/>{1},<sp/>of<sp/>type<sp/>{2}{3}&quot;</highlight><highlight class="normal">,<sp/>mOutFileName,<sp/>++mCount,<sp/>partType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.path/_1ae9e0f0c8b345ecfab2ca997411b81f97" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::GetExtension</ref>(args-&gt;get_DocumentPartFileName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>where<sp/>Aspose.Words<sp/>will<sp/>save<sp/>each<sp/>part<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>output<sp/>part<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_DocumentPartFileName(partFileName);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Create<sp/>a<sp/>custom<sp/>stream<sp/>for<sp/>the<sp/>output<sp/>part<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_DocumentPartStream(MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>partFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_DocumentPartStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepDocumentPartStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">SavedImageRename<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IImageSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SavedImageRename(String<sp/>outFileName)<sp/>:<sp/>mCount(0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutFileName<sp/>=<sp/>outFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mOutFileName;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageSaving(SharedPtr&lt;ImageSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imageFileName<sp/>=<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>shape<sp/>{1},<sp/>of<sp/>type<sp/>{2}{3}&quot;</highlight><highlight class="normal">,<sp/>mOutFileName,<sp/>++mCount,<sp/>args-&gt;get_CurrentShape()-&gt;get_ShapeType(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.path/_1ae9e0f0c8b345ecfab2ca997411b81f97" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::GetExtension</ref>(args-&gt;get_ImageFileName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>where<sp/>Aspose.Words<sp/>will<sp/>save<sp/>each<sp/>part<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>output<sp/>image<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_ImageFileName(imageFileName);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Create<sp/>a<sp/>custom<sp/>stream<sp/>for<sp/>the<sp/>output<sp/>image<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_ImageStream(MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>imageFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_ImageStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsImageAvailable());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepImageStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="663" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af23548aa91432c2c0c6f63be12e653d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member">Aspose::Words::Saving::DocumentSplitCriteria</ref></type>
        <definition>Aspose::Words::Saving::DocumentSplitCriteria Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitCriteria</definition>
        <argsstring>() const</argsstring>
        <name>get_DocumentSplitCriteria</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitCriteria</qualifiedname>
        <briefdescription>
<para>Specifies how the document should be split when saving to <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member">Html</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member">Epub</ref> or <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5f432cf9f04ad9b9c20d41651e6689fe" kindref="member">Azw3</ref> format. Default is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref> for HTML and <ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member">HeadingParagraph</ref> for EPUB and AZW3. </para>
        </briefdescription>
        <detaileddescription>
<para>Normally you would want a document saved to HTML as a single file. But in some cases it is preferable to split the output into several smaller HTML pages. When saving to HTML format these pages will be output to individual files or streams. When saving to EPUB format they will be incorporated into corresponding packages.</para>
<para>A document cannot be split when saving in the MHTML format.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad59118a2a555868ddf111e66eddc03ca" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitHeadingLevel</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa97d90dadf11005be9c6c683c72d8856" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentPartSavingCallback</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a specific encoding when saving a document to .epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>specify<sp/>the<sp/>encoding<sp/>for<sp/>a<sp/>document<sp/>that<sp/>we<sp/>will<sp/>save.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_SaveFormat(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>output<sp/>.epub<sp/>document<sp/>will<sp/>have<sp/>all<sp/>its<sp/>contents<sp/>in<sp/>one<sp/>HTML<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>split<sp/>criterion<sp/>allows<sp/>us<sp/>to<sp/>segment<sp/>the<sp/>document<sp/>into<sp/>several<sp/>HTML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>set<sp/>the<sp/>criteria<sp/>to<sp/>split<sp/>the<sp/>document<sp/>into<sp/>heading<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>readers<sp/>who<sp/>cannot<sp/>read<sp/>HTML<sp/>files<sp/>more<sp/>significant<sp/>than<sp/>a<sp/>specific<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>that<sp/>we<sp/>want<sp/>to<sp/>export<sp/>document<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportDocumentProperties(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.Doc2EpubSaveOptions.epub&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="770" column="53"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad59118a2a555868ddf111e66eddc03ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitHeadingLevel</definition>
        <argsstring>() const</argsstring>
        <name>get_DocumentSplitHeadingLevel</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitHeadingLevel</qualifiedname>
        <briefdescription>
<para>Specifies the maximum level of headings at which to split the document. Default value is <computeroutput>%2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af23548aa91432c2c0c6f63be12e653d4" kindref="member">DocumentSplitCriteria</ref> includes <ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member">HeadingParagraph</ref> and this property is set to a value from 1 to 9, the document will be split at paragraphs formatted using <bold>Heading 1</bold>, <bold>Heading 2</bold> , <bold>Heading 3</bold> etc. styles up to the specified heading level.</para>
<para>By default, only <bold>Heading 1</bold> and <bold>Heading 2</bold> paragraphs cause the document to be split. Setting this property to zero will cause the document not to be split at heading paragraphs at all.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af23548aa91432c2c0c6f63be12e653d4" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitCriteria</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa97d90dadf11005be9c6c683c72d8856" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentPartSavingCallback</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to split an output HTML document by headings into several parts. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>paragraph<sp/>that<sp/>we<sp/>format<sp/>using<sp/>a<sp/>&quot;Heading&quot;<sp/>style<sp/>can<sp/>serve<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>heading<sp/>may<sp/>also<sp/>have<sp/>a<sp/>heading<sp/>level,<sp/>determined<sp/>by<sp/>the<sp/>number<sp/>of<sp/>its<sp/>heading<sp/>style.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>headings<sp/>below<sp/>are<sp/>of<sp/>levels<sp/>1-3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>HtmlSaveOptions<sp/>object<sp/>and<sp/>set<sp/>the<sp/>split<sp/>criteria<sp/>to<sp/>&quot;HeadingParagraph&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>criteria<sp/>will<sp/>split<sp/>the<sp/>document<sp/>at<sp/>paragraphs<sp/>with<sp/>&quot;Heading&quot;<sp/>styles<sp/>into<sp/>several<sp/>smaller<sp/>documents,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>save<sp/>each<sp/>document<sp/>in<sp/>a<sp/>separate<sp/>HTML<sp/>file<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>also<sp/>set<sp/>the<sp/>maximum<sp/>heading<sp/>level,<sp/>which<sp/>splits<sp/>the<sp/>document<sp/>to<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Saving<sp/>the<sp/>document<sp/>will<sp/>split<sp/>it<sp/>at<sp/>headings<sp/>of<sp/>levels<sp/>1<sp/>and<sp/>2,<sp/>but<sp/>not<sp/>at<sp/>3<sp/>to<sp/>9.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_DocumentSplitHeadingLevel(2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>document<sp/>has<sp/>four<sp/>headings<sp/>of<sp/>levels<sp/>1<sp/>-<sp/>2.<sp/>One<sp/>of<sp/>those<sp/>headings<sp/>will<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>split<sp/>point<sp/>since<sp/>it<sp/>is<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>saving<sp/>operation<sp/>will<sp/>split<sp/>our<sp/>document<sp/>at<sp/>three<sp/>places,<sp/>into<sp/>four<sp/>smaller<sp/>documents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HeadingLevels.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HeadingLevels.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#1&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HeadingLevels-01.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#2\r&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#3&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HeadingLevels-02.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#4&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HeadingLevels-03.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#5\r&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#6&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="841" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aee4bc6780a8ffd3cfe5530df8eed65ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.text.encoding/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding</ref> &gt;</type>
        <definition>System::SharedPtr&lt; System::Text::Encoding &gt; Aspose::Words::Saving::HtmlSaveOptions::get_Encoding</definition>
        <argsstring>() const</argsstring>
        <name>get_Encoding</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_Encoding</qualifiedname>
        <briefdescription>
<para>Specifies the encoding to use when exporting to HTML, MHTML or EPUB. Default value is <computeroutput>new UTF8Encoding(false)</computeroutput> (UTF-8 without BOM). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a specific encoding when saving a document to .epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>specify<sp/>the<sp/>encoding<sp/>for<sp/>a<sp/>document<sp/>that<sp/>we<sp/>will<sp/>save.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_SaveFormat(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>output<sp/>.epub<sp/>document<sp/>will<sp/>have<sp/>all<sp/>its<sp/>contents<sp/>in<sp/>one<sp/>HTML<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>split<sp/>criterion<sp/>allows<sp/>us<sp/>to<sp/>segment<sp/>the<sp/>document<sp/>into<sp/>several<sp/>HTML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>set<sp/>the<sp/>criteria<sp/>to<sp/>split<sp/>the<sp/>document<sp/>into<sp/>heading<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>readers<sp/>who<sp/>cannot<sp/>read<sp/>HTML<sp/>files<sp/>more<sp/>significant<sp/>than<sp/>a<sp/>specific<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>that<sp/>we<sp/>want<sp/>to<sp/>export<sp/>document<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportDocumentProperties(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.Doc2EpubSaveOptions.epub&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="871" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a25efc3be72c2bee8b4ec1143c7e03af8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Saving::HtmlSaveOptions::get_EpubNavigationMapLevel</definition>
        <argsstring>() const</argsstring>
        <name>get_EpubNavigationMapLevel</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_EpubNavigationMapLevel</qualifiedname>
        <briefdescription>
<para>Specifies the maximum level of headings populated to the navigation map when exporting to IDPF EPUB format. Default value is <computeroutput>%3</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Navigation map in IDPF EPUB format allows user agents to provide easy way of navigation through the document structure. Usually navigation points correspond to headings in the document. To populate headings up to level <bold>N</bold> assign this value to <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a25efc3be72c2bee8b4ec1143c7e03af8" kindref="member">EpubNavigationMapLevel</ref>.</para>
<para>By default, three levels of headings are populated: paragraphs of styles <bold>Heading 1</bold>, <bold>Heading 2</bold> and <bold>Heading 3</bold>. You can set this property to a value from 1 to 9 to request corresponding maximum level. Setting it to zero will reduce navigation map to only document root or roots of document parts.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to filter headings that appear in the navigation panel of a saved Epub document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>paragraph<sp/>that<sp/>we<sp/>format<sp/>using<sp/>a<sp/>&quot;Heading&quot;<sp/>style<sp/>can<sp/>serve<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>heading<sp/>may<sp/>also<sp/>have<sp/>a<sp/>heading<sp/>level,<sp/>determined<sp/>by<sp/>the<sp/>number<sp/>of<sp/>its<sp/>heading<sp/>style.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>headings<sp/>below<sp/>are<sp/>of<sp/>levels<sp/>1-3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>#6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Epub<sp/>readers<sp/>typically<sp/>create<sp/>a<sp/>table<sp/>of<sp/>contents<sp/>for<sp/>their<sp/>documents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>paragraph<sp/>with<sp/>a<sp/>&quot;Heading&quot;<sp/>style<sp/>in<sp/>the<sp/>document<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>this<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;EpubNavigationMapLevel&quot;<sp/>property<sp/>to<sp/>set<sp/>a<sp/>maximum<sp/>heading<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Epub<sp/>reader<sp/>will<sp/>not<sp/>add<sp/>headings<sp/>with<sp/>a<sp/>level<sp/>above<sp/>the<sp/>one<sp/>we<sp/>specify<sp/>to<sp/>the<sp/>contents<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_EpubNavigationMapLevel(2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>document<sp/>has<sp/>six<sp/>headings,<sp/>two<sp/>of<sp/>which<sp/>are<sp/>above<sp/>level<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>table<sp/>of<sp/>contents<sp/>for<sp/>this<sp/>document<sp/>will<sp/>have<sp/>four<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.EpubHeadings.epub&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="922" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a27de60d4cec114bf97e9cdd6019d0155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportCidUrlsForMhtmlResources</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportCidUrlsForMhtmlResources</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportCidUrlsForMhtmlResources</qualifiedname>
        <briefdescription>
<para>Specifies whether to use CID (Content-ID) URLs to reference resources (images, fonts, CSS) included in MHTML documents. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This option affects only documents being saved to MHTML.</para>
<para>By default, resources in MHTML documents are referenced by file name (for example, &quot;image.png&quot;), which are matched against &quot;Content-Location&quot; headers of MIME parts.</para>
<para>This option enables an alternative method, where references to resource files are written as CID (Content-ID) URLs (for example, &quot;cid:image.png&quot;) and are matched against &quot;Content-ID&quot; headers.</para>
<para>In theory, there should be no difference between the two referencing methods and either of them should work fine in any browser or mail agent. In practice, however, some agents fail to fetch resources by file name. If your browser or mail agent refuses to load resources included in an MTHML document (doesn&apos;t show images or doesn&apos;t load CSS styles), try exporting the document with CID URLs.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to enable content IDs for output MHTML documents. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>flag<sp/>will<sp/>replace<sp/>&quot;Content-Location&quot;<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>&quot;Content-ID&quot;<sp/>tags<sp/>for<sp/>each<sp/>resource<sp/>from<sp/>the<sp/>input<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member" tooltip="Saves the document in the MHTML (Web archive) format.">SaveFormat::Mhtml</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportCidUrlsForMhtmlResources(exportCidUrlsForMhtmlResources);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ContentIdUrls.mht&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ContentIdUrls.mht&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportCidUrlsForMhtmlResources)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;Content-ID:<sp/>&lt;document.html&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;link<sp/>href=3D\&quot;cid:styles.css\&quot;<sp/>type=3D\&quot;text/css\&quot;<sp/>rel=3D\&quot;stylesheet\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;@font-face<sp/>{<sp/>font-family:&apos;Arial<sp/>Black&apos;;<sp/>src:url(&apos;cid:ariblk.ttf&apos;)<sp/>}&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=3D\&quot;cid:image.003.jpeg\&quot;<sp/>width=3D\&quot;350\&quot;<sp/>height=3D\&quot;180\&quot;<sp/>alt=3D\&quot;\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;Content-Location:<sp/>document.html&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;link<sp/>href=3D\&quot;styles.css\&quot;<sp/>type=3D\&quot;text/css\&quot;<sp/>rel=3D\&quot;stylesheet\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;@font-face<sp/>{<sp/>font-family:&apos;Arial<sp/>Black&apos;;<sp/>src:url(&apos;ariblk.ttf&apos;)<sp/>}&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=3D\&quot;image.003.jpeg\&quot;<sp/>width=3D\&quot;350\&quot;<sp/>height=3D\&quot;180\&quot;<sp/>alt=3D\&quot;\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2875" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa3adb4ef38ee5167ef468e233299e4e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportDocumentProperties</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportDocumentProperties</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportDocumentProperties</qualifiedname>
        <briefdescription>
<para>Specifies whether to export built-in and custom document properties to HTML, MHTML or EPUB. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a specific encoding when saving a document to .epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>specify<sp/>the<sp/>encoding<sp/>for<sp/>a<sp/>document<sp/>that<sp/>we<sp/>will<sp/>save.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_SaveFormat(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>output<sp/>.epub<sp/>document<sp/>will<sp/>have<sp/>all<sp/>its<sp/>contents<sp/>in<sp/>one<sp/>HTML<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>split<sp/>criterion<sp/>allows<sp/>us<sp/>to<sp/>segment<sp/>the<sp/>document<sp/>into<sp/>several<sp/>HTML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>set<sp/>the<sp/>criteria<sp/>to<sp/>split<sp/>the<sp/>document<sp/>into<sp/>heading<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>readers<sp/>who<sp/>cannot<sp/>read<sp/>HTML<sp/>files<sp/>more<sp/>significant<sp/>than<sp/>a<sp/>specific<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>that<sp/>we<sp/>want<sp/>to<sp/>export<sp/>document<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportDocumentProperties(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.Doc2EpubSaveOptions.epub&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="952" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9fcd99c68d72d5edbaf218f8474e73a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportDropDownFormFieldAsText</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportDropDownFormFieldAsText</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportDropDownFormFieldAsText</qualifiedname>
        <briefdescription>
<para>Controls how drop-down form fields are saved to HTML or MHTML. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When set to <computeroutput>true</computeroutput>, exports drop-down form fields as normal text. When <computeroutput>false</computeroutput>, exports drop-down form fields as SELECT element in HTML.</para>
<para>When exporting to EPUB, text drop-down form fields are always saved as text due to requirements of this format.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to get drop-down combo box form fields to blend in with paragraph text when saving to html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>document<sp/>builder<sp/>to<sp/>insert<sp/>a<sp/>combo<sp/>box<sp/>with<sp/>the<sp/>value<sp/>&quot;Two&quot;<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertComboBox(u</highlight><highlight class="stringliteral">&quot;MyComboBox&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;One&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Two&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Three&quot;</highlight><highlight class="normal">}),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;ExportDropDownFormFieldAsText&quot;<sp/>flag<sp/>of<sp/>this<sp/>SaveOptions<sp/>object<sp/>allows<sp/>us<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>control<sp/>how<sp/>saving<sp/>the<sp/>document<sp/>to<sp/>HTML<sp/>treats<sp/>drop-down<sp/>combo<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>it<sp/>to<sp/>&quot;true&quot;<sp/>will<sp/>convert<sp/>each<sp/>combo<sp/>box<sp/>into<sp/>simple<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>displays<sp/>the<sp/>combo<sp/>box&apos;s<sp/>currently<sp/>selected<sp/>value,<sp/>effectively<sp/>freezing<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>it<sp/>to<sp/>&quot;false&quot;<sp/>will<sp/>preserve<sp/>the<sp/>functionality<sp/>of<sp/>the<sp/>combo<sp/>box<sp/>using<sp/>&lt;select&gt;<sp/>and<sp/>&lt;option&gt;<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportDropDownFormFieldAsText(exportDropDownFormFieldAsText);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.DropDownFormField.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.DropDownFormField.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportDropDownFormFieldAsText)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Two&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;select<sp/>name=\&quot;MyComboBox\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;option&gt;One&lt;/option&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;option<sp/>selected=\&quot;selected\&quot;&gt;Two&lt;/option&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;option&gt;Three&lt;/option&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/select&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1697" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontResources</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportFontResources</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontResources</qualifiedname>
        <briefdescription>
<para>Specifies whether font resources should be exported to HTML, MHTML or EPUB. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Exporting font resources allows for consistent document rendering independent of the fonts available in a given user&apos;s environment.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">ExportFontResources</ref> is set to <computeroutput>true</computeroutput>, main HTML document will refer to every font via the CSS 3 <bold>%@font-face</bold> at-rule and fonts will be output as separate files. When exporting to IDPF EPUB or MHTML formats, fonts will be embedded into the corresponding package along with other subsidiary files.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa1439577562a1a9d045a6c80eda4f578" kindref="member">ExportFontsAsBase64</ref> is set to <computeroutput>true</computeroutput>, fonts will not be saved to separate files. Instead, they will be embedded into <bold>%@font-face</bold> at-rules in Base64 encoding.</para>
<para><bold>Important!</bold> When exporting font resources, font licensing issues should be considered. Authors who want to use specific fonts via a downloadable font mechanism must always carefully verify that their intended use is within the scope of the font license. Many commercial fonts presently do not allow web downloading of their fonts in any form. <ref refid="class_aspose_1_1_words_1_1_license" kindref="compound">License</ref> agreements that cover some fonts specifically note that usage via <bold>%@font-face</bold> rules in CSS style sheets is not allowed. <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> subsetting can also violate license terms.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1add89277511fce7088ef8f275c1bafe34" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontResourcesSubsettingSizeThreshold</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to define custom logic for exporting fonts when saving to HTML. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveExportedFonts()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>export<sp/>fonts<sp/>to<sp/>separate<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>callback<sp/>that<sp/>will<sp/>handle<sp/>font<sp/>saving<sp/>in<sp/>a<sp/>custom<sp/>manner.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_FontSavingCallback(MakeObject&lt;ExHtmlSaveOptions::HandleFontSaving&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>callback<sp/>will<sp/>export<sp/>.ttf<sp/>files<sp/>and<sp/>save<sp/>them<sp/>alongside<sp/>the<sp/>output<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.SaveExportedFonts.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;bool(String<sp/>s)&gt;<sp/>endsWithTtf<sp/>=<sp/>[](<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>s)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.EndsWith(u</highlight><highlight class="stringliteral">&quot;.ttf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(String<sp/>fontFilename<sp/>:<sp/><ref refid="class/system.array/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Array&lt;String&gt;::FindAll</ref>(<ref refid="class/system.i_o.directory/_1a175e3c7c67d67de4fc93cd54b8fb6f2d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::GetFiles</ref>(ArtifactsDir),<sp/>endsWithTtf))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fontFilename<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">HandleFontSaving<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IFontSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FontSaving(SharedPtr&lt;FontSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Font:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_FontFamilyName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args-&gt;get_Bold())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>bold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args-&gt;get_Italic())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>italic&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nSource:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_OriginalFileName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_OriginalFileSize()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>source<sp/>document<sp/>from<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsExportNeeded());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsSubsettingNeeded());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>saving<sp/>an<sp/>exported<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Save<sp/>it<sp/>to<sp/>a<sp/>local<sp/>file<sp/>system<sp/>location:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_FontFileName(args-&gt;get_OriginalFileName().Split(MakeArray&lt;char16_t&gt;({System::IO::Path::DirectorySeparatorChar}))-&gt;LINQ_Last());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Save<sp/>it<sp/>to<sp/>a<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_FontStream(MakeObject&lt;System::IO::FileStream&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArtifactsDir<sp/>+<sp/>args-&gt;get_OriginalFileName().Split(MakeArray&lt;char16_t&gt;({System::IO::Path::DirectorySeparatorChar}))-&gt;LINQ_Last(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepFontStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1043" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa1439577562a1a9d045a6c80eda4f578" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontsAsBase64</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportFontsAsBase64</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontsAsBase64</qualifiedname>
        <briefdescription>
<para>Specifies whether fonts resources should be embedded to HTML in Base64 encoding. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, fonts are written to separate files. If this option is set to <computeroutput>true</computeroutput>, fonts will be embedded into the document&apos;s CSS in Base64 encoding.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to save a .html document with images embedded inside it. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportImagesAsBase64(exportItemsAsBase64);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportImagesAsBase64.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportImagesAsBase64.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(exportItemsAsBase64<sp/>?<sp/>outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;data:image/png;base64&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.ExportImagesAsBase64.001.png\&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para>
<para>Shows how to embed fonts inside a saved HTML document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontsAsBase64(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0a069e7821d3b4c0bbf437147263eb4d0e" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet embedded in the HTML file.">CssStyleSheetType::Embedded</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportFontsAsBase64.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1083" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f1b34fd1e1c6dcba07f80bf31a04540" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188a" kindref="member">Aspose::Words::Saving::ExportHeadersFootersMode</ref></type>
        <definition>Aspose::Words::Saving::ExportHeadersFootersMode Aspose::Words::Saving::HtmlSaveOptions::get_ExportHeadersFootersMode</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportHeadersFootersMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportHeadersFootersMode</qualifiedname>
        <briefdescription>
<para>Specifies how headers and footers are output to HTML, MHTML or EPUB. Default value is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188aacdbeb6fd8d75ff67fe2bcbaabbac2c0f" kindref="member">PerSection</ref> for HTML/MHTML and <ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188aa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref> for EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para>It is hard to meaningfully output headers and footers to HTML because HTML is not paginated.</para>
<para>When this property is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188aacdbeb6fd8d75ff67fe2bcbaabbac2c0f" kindref="member">PerSection</ref>, Aspose.Words exports only primary headers and footers at the beginning and the end of each section.</para>
<para>When it is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188aa8e97ff5209d2866fdd36a329bba9643a" kindref="member">FirstSectionHeaderLastSectionFooter</ref> only first primary header and the last primary footer (including linked to previous) are exported.</para>
<para>You can disable export of headers and footers altogether by setting this property to <ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188aa6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to omit headers/footers when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Header<sp/>and<sp/>footer<sp/>types.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>document<sp/>contains<sp/>headers<sp/>and<sp/>footers.<sp/>We<sp/>can<sp/>access<sp/>them<sp/>via<sp/>the<sp/>&quot;HeadersFooters&quot;<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;First<sp/>header&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_FirstSection()-&gt;get_HeadersFooters()-&gt;idx_get(<ref refid="namespace_aspose_1_1_words_1a10e750a2a2dc23104fb5cb70787e3a69a545b1c922d56aca91ca2080eed0d7913" kindref="member" tooltip="Header for the first page of the section.">HeaderFooterType::HeaderFirst</ref>)-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Formats<sp/>such<sp/>as<sp/>.html<sp/>do<sp/>not<sp/>split<sp/>the<sp/>document<sp/>into<sp/>pages,<sp/>so<sp/>headers/footers<sp/>will<sp/>not<sp/>function<sp/>the<sp/>same<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>they<sp/>would<sp/>when<sp/>we<sp/>open<sp/>the<sp/>document<sp/>as<sp/>a<sp/>.docx<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>convert<sp/>a<sp/>document<sp/>with<sp/>headers/footers<sp/>to<sp/>html,<sp/>the<sp/>conversion<sp/>will<sp/>assimilate<sp/>the<sp/>headers/footers<sp/>into<sp/>body<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>omit<sp/>headers/footers<sp/>while<sp/>converting<sp/>to<sp/>html.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportHeadersFootersMode(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188aa6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="Headers and footers are not exported.">ExportHeadersFootersMode::None</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HeaderFooter.ExportMode.html&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>our<sp/>saved<sp/>document<sp/>and<sp/>verify<sp/>that<sp/>it<sp/>does<sp/>not<sp/>contain<sp/>the<sp/>header&apos;s<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HeaderFooter.ExportMode.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_Range()-&gt;get_Text().Contains(u</highlight><highlight class="stringliteral">&quot;First<sp/>header&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1126" column="56"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac31cb0638ccc73cec1acdea99363f0d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportImagesAsBase64</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportImagesAsBase64</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportImagesAsBase64</qualifiedname>
        <briefdescription>
<para>Specifies whether images are saved in Base64 format to the output HTML, MHTML or EPUB. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When this property is set to <computeroutput>true</computeroutput> images data are exported directly into the <bold>img</bold> elements and separate files are not created.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to save a .html document with images embedded inside it. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportImagesAsBase64(exportItemsAsBase64);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportImagesAsBase64.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportImagesAsBase64.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(exportItemsAsBase64<sp/>?<sp/>outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;data:image/png;base64&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.ExportImagesAsBase64.001.png\&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting></para>
<para>Shows how to embed fonts inside a saved HTML document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontsAsBase64(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0a069e7821d3b4c0bbf437147263eb4d0e" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet embedded in the HTML file.">CssStyleSheetType::Embedded</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportFontsAsBase64.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1166" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1afd21b1e23400769165c337e66619a7f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportLanguageInformation</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportLanguageInformation</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportLanguageInformation</qualifiedname>
        <briefdescription>
<para>Specifies whether language information is exported to HTML, MHTML or EPUB. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When this property is set to <computeroutput>true</computeroutput> Aspose.Words outputs <bold>lang</bold> HTML attribute on the document elements that specify language. This can be needed to preserve language related semantics.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to preserve language information when saving to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>builder<sp/>to<sp/>write<sp/>text<sp/>while<sp/>formatting<sp/>it<sp/>in<sp/>different<sp/>locales.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_LocaleId(MakeObject&lt;System::Globalization::CultureInfo&gt;(u</highlight><highlight class="stringliteral">&quot;en-US&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_LocaleId(MakeObject&lt;System::Globalization::CultureInfo&gt;(u</highlight><highlight class="stringliteral">&quot;en-GB&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>again!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_LocaleId(MakeObject&lt;System::Globalization::CultureInfo&gt;(u</highlight><highlight class="stringliteral">&quot;ru-RU&quot;</highlight><highlight class="normal">)-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Привет,<sp/>мир!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>saving<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>either<sp/>preserve<sp/>or<sp/>discard<sp/>each<sp/>formatted<sp/>text&apos;s<sp/>locale.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportLanguageInformation&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>output<sp/>HTML<sp/>document<sp/>will<sp/>contain<sp/>the<sp/>locales<sp/>in<sp/>&quot;lang&quot;<sp/>attributes<sp/>of<sp/>&lt;span&gt;<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportLanguageInformation&quot;<sp/>flag<sp/>to<sp/>&quot;false&apos;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>text<sp/>in<sp/>the<sp/>output<sp/>HTML<sp/>document<sp/>will<sp/>not<sp/>contain<sp/>any<sp/>locale<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportLanguageInformation(exportLanguageInformation);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportLanguageInformation.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportLanguageInformation.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportLanguageInformation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Hello<sp/>world!&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>lang=\&quot;en-GB\&quot;&gt;Hello<sp/>again!&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>lang=\&quot;ru-RU\&quot;&gt;Привет,<sp/>мир!&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Hello<sp/>world!&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Hello<sp/>again!&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Привет,<sp/>мир!&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1221" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af6b948d8f9a84e96024899b81f45b5a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a66cd463fe9f5d741ccead0c92a630272" kindref="member">Aspose::Words::Saving::ExportListLabels</ref></type>
        <definition>Aspose::Words::Saving::ExportListLabels Aspose::Words::Saving::HtmlSaveOptions::get_ExportListLabels</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportListLabels</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportListLabels</qualifiedname>
        <briefdescription>
<para>Controls how list labels are output to HTML, MHTML or EPUB. Default value is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a66cd463fe9f5d741ccead0c92a630272a06b9281e396db002010bde1de57262eb" kindref="member">Auto</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to configure list exporting to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Aspose::Words::Lists::List&gt;<sp/>list<sp/>=<sp/>doc-&gt;get_Lists()-&gt;Add(ListTemplate::NumberDefault);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;set_List(list);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Default<sp/>numbered<sp/>list<sp/>item<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Default<sp/>numbered<sp/>list<sp/>item<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;ListIndent();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Default<sp/>numbered<sp/>list<sp/>item<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;RemoveNumbers();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">list<sp/>=<sp/>doc-&gt;get_Lists()-&gt;Add(ListTemplate::OutlineHeadingsLegal);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;set_List(list);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;ListIndent();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;ListIndent();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>4.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;ListIndent();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>5.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ListFormat()-&gt;RemoveNumbers();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>saving<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>decide<sp/>which<sp/>HTML<sp/>elements<sp/>the<sp/>document<sp/>will<sp/>use<sp/>to<sp/>represent<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;ExportListLabels&quot;<sp/>property<sp/>to<sp/>&quot;ExportListLabels.AsInlineText&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>create<sp/>lists<sp/>by<sp/>formatting<sp/>spans.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;ExportListLabels&quot;<sp/>property<sp/>to<sp/>&quot;ExportListLabels.Auto&quot;<sp/>will<sp/>use<sp/>the<sp/>&lt;p&gt;<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>build<sp/>lists<sp/>in<sp/>cases<sp/>when<sp/>using<sp/>the<sp/>&lt;ol&gt;<sp/>and<sp/>&lt;li&gt;<sp/>tags<sp/>may<sp/>cause<sp/>loss<sp/>of<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;ExportListLabels&quot;<sp/>property<sp/>to<sp/>&quot;ExportListLabels.ByHtmlTags&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>use<sp/>&lt;ol&gt;<sp/>and<sp/>&lt;li&gt;<sp/>tags<sp/>to<sp/>build<sp/>all<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportListLabels(exportListLabels);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.List.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.List.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(exportListLabels)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a66cd463fe9f5d741ccead0c92a630272ad7dd35f8c2fd047ce7943a568e331a95" kindref="member" tooltip="Outputs all list labels as inline text.">ExportListLabels::AsInlineText</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-left:72pt;<sp/>margin-bottom:0pt;<sp/>text-indent:-18pt;<sp/>-aw-import:list-item;<sp/>-aw-list-level-number:1;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-list-number-format:&apos;%1.&apos;;<sp/>-aw-list-number-styles:&apos;lowerLetter&apos;;<sp/>-aw-list-number-values:&apos;1&apos;;<sp/>-aw-list-padding-sml:9.67pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-import:ignore\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;a.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;width:9.67pt;<sp/>font:7pt<sp/>&apos;Times<sp/>New<sp/>Roman&apos;;<sp/>display:inline-block;<sp/>-aw-import:spaces\&quot;&gt;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Default<sp/>numbered<sp/>list<sp/>item<sp/>3.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-left:43.2pt;<sp/>margin-bottom:0pt;<sp/>text-indent:-43.2pt;<sp/>-aw-import:list-item;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-list-level-number:3;<sp/>-aw-list-number-format:&apos;%0.%1.%2.%3&apos;;<sp/>-aw-list-number-styles:&apos;decimal<sp/>decimal<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;decimal<sp/>decimal&apos;;<sp/>-aw-list-number-values:&apos;2<sp/>1<sp/>1<sp/>1&apos;;<sp/>-aw-list-padding-sml:10.2pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-import:ignore\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;2.1.1.1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;width:10.2pt;<sp/>font:7pt<sp/>&apos;Times<sp/>New<sp/>Roman&apos;;<sp/>display:inline-block;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-import:spaces\&quot;&gt;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;<sp/>&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>5.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a66cd463fe9f5d741ccead0c92a630272a06b9281e396db002010bde1de57262eb" kindref="member" tooltip="Outputs list labels in auto mode. Uses HTML native elements when possible.">ExportListLabels::Auto</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;ol<sp/>type=\&quot;a\&quot;<sp/>style=\&quot;margin-right:0pt;<sp/>margin-left:0pt;<sp/>padding-left:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;li<sp/>style=\&quot;margin-left:31.33pt;<sp/>padding-left:4.67pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Default<sp/>numbered<sp/>list<sp/>item<sp/>3.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/li&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/ol&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-left:43.2pt;<sp/>margin-bottom:0pt;<sp/>text-indent:-43.2pt;<sp/>-aw-import:list-item;<sp/>-aw-list-level-number:3;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-list-number-format:&apos;%0.%1.%2.%3&apos;;<sp/>-aw-list-number-styles:&apos;decimal<sp/>decimal<sp/>decimal<sp/>decimal&apos;;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-list-number-values:&apos;2<sp/>1<sp/>1<sp/>1&apos;;<sp/>-aw-list-padding-sml:10.2pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-import:ignore\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;2.1.1.1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;width:10.2pt;<sp/>font:7pt<sp/>&apos;Times<sp/>New<sp/>Roman&apos;;<sp/>display:inline-block;<sp/>-aw-import:spaces\&quot;&gt;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>5.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a66cd463fe9f5d741ccead0c92a630272a5b56e3a505459c8454144370f88b6cd8" kindref="member" tooltip="Outputs all list labels as HTML native elements.">ExportListLabels::ByHtmlTags</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;ol<sp/>type=\&quot;a\&quot;<sp/>style=\&quot;margin-right:0pt;<sp/>margin-left:0pt;<sp/>padding-left:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;li<sp/>style=\&quot;margin-left:31.33pt;<sp/>padding-left:4.67pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Default<sp/>numbered<sp/>list<sp/>item<sp/>3.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/li&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/ol&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;ol<sp/>type=\&quot;1\&quot;<sp/>class=\&quot;awlist3\&quot;<sp/>style=\&quot;margin-right:0pt;<sp/>margin-left:0pt;<sp/>padding-left:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;li<sp/>style=\&quot;margin-left:7.2pt;<sp/>text-indent:-43.2pt;<sp/>-aw-list-padding-sml:10.2pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;width:10.2pt;<sp/>font:7pt<sp/>&apos;Times<sp/>New<sp/>Roman&apos;;<sp/>display:inline-block;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-import:ignore\&quot;&gt;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;&amp;#xa0;<sp/>&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Outline<sp/>legal<sp/>heading<sp/>list<sp/>item<sp/>5.&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/li&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/ol&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1318" column="48"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab92617acb48775a6808cdfa119231b7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportOriginalUrlForLinkedImages</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportOriginalUrlForLinkedImages</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportOriginalUrlForLinkedImages</qualifiedname>
        <briefdescription>
<para>Specifies whether original URL should be used as the URL of the linked images. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If value is set to <computeroutput>true</computeroutput><ref refid="class_aspose_1_1_words_1_1_drawing_1_1_image_data_1a9b59019bb8da0aca952457544d9d3c58" kindref="member">SourceFullName</ref> value is used as the URL of linked images and linked images are not loaded into document&apos;s folder or <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref>.</para>
<para>If value is set to <computeroutput>false</computeroutput> linked images are loaded into document&apos;s folder or <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> and URL of each linked image is constructed depending on document&apos;s folder, <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> properties.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2821" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae04c56cc9a55c736a1ab5918b1ce5e80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportPageMargins</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportPageMargins</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportPageMargins</qualifiedname>
        <briefdescription>
<para>Specifies whether page margins is exported to HTML, MHTML or EPUB. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to show out-of-bounds objects in output HTML documents. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>builder<sp/>to<sp/>insert<sp/>a<sp/>shape<sp/>with<sp/>no<sp/>wrapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Shape&gt;<sp/>shape<sp/>=<sp/>builder-&gt;InsertShape(ShapeType::Cube,<sp/>200,<sp/>200);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">shape-&gt;set_RelativeHorizontalPosition(RelativeHorizontalPosition::Page);</highlight></codeline>
<codeline><highlight class="normal">shape-&gt;set_RelativeVerticalPosition(RelativeVerticalPosition::Page);</highlight></codeline>
<codeline><highlight class="normal">shape-&gt;set_WrapType(WrapType::None);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Negative<sp/>shape<sp/>position<sp/>values<sp/>may<sp/>place<sp/>the<sp/>shape<sp/>outside<sp/>of<sp/>page<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>export<sp/>this<sp/>to<sp/>HTML,<sp/>the<sp/>shape<sp/>will<sp/>appear<sp/>truncated.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">shape-&gt;set_Left(-150);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>saving<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>decide<sp/>whether<sp/>to<sp/>adjust<sp/>the<sp/>page<sp/>to<sp/>display<sp/>out-of-bounds<sp/>objects<sp/>fully.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportPageMargins&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;,<sp/>the<sp/>shape<sp/>will<sp/>be<sp/>fully<sp/>visible<sp/>in<sp/>the<sp/>output<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportPageMargins&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>our<sp/>document<sp/>will<sp/>display<sp/>the<sp/>shape<sp/>truncated<sp/>as<sp/>we<sp/>would<sp/>see<sp/>it<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportPageMargins(exportPageMargins);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportPageMargins.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportPageMargins.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportPageMargins)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;style<sp/>type=\&quot;text/css\&quot;&gt;div.Section1<sp/>{<sp/>margin:70.85pt<sp/>}&lt;/style&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;div<sp/>class=\&quot;Section1\&quot;&gt;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-left:151pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;style<sp/>type=\&quot;text/css\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;div&gt;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-left:221.85pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1499" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0652fef82d977fc7642bfa1b5244c41b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportPageSetup</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportPageSetup</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportPageSetup</qualifiedname>
        <briefdescription>
<para>Specifies whether page setup is exported to HTML, MHTML or EPUB. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Each <ref refid="class_aspose_1_1_words_1_1_section" kindref="compound">Section</ref> in Aspose.Words document model provides page setup information via <ref refid="class_aspose_1_1_words_1_1_page_setup" kindref="compound">PageSetup</ref> class. When you export a document to HTML format you might need to keep this information for further usage. In particular, page setup might be important for rendering to paged media (printing) or subsequent conversion to the native Microsoft Word file formats (DOCX, DOC, RTF, WML).</para>
<para>In most cases HTML is intended for viewing in browsers where pagination is not performed. So this feature is inactive by default.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how decide whether to preserve section structure/page setup information when saving to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Section<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea8e798e1e673d70f3c9d8b7be6234320b" kindref="member" tooltip="Specifies start of new section on a new page.">BreakType::SectionBreakNewPage</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Section<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;PageSetup&gt;<sp/>pageSetup<sp/>=<sp/>doc-&gt;get_Sections()-&gt;idx_get(0)-&gt;get_PageSetup();</highlight></codeline>
<codeline><highlight class="normal">pageSetup-&gt;set_TopMargin(36.0);</highlight></codeline>
<codeline><highlight class="normal">pageSetup-&gt;set_BottomMargin(36.0);</highlight></codeline>
<codeline><highlight class="normal">pageSetup-&gt;set_PaperSize(<ref refid="namespace_aspose_1_1_words_1a1a2f6b44133c9bd897dabca36c39ba25ac6f2f93133905f75da4b02ccc19ab66a" kindref="member" tooltip="148 x 210 mm.">PaperSize::A5</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>saving<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>decide<sp/>whether<sp/>to<sp/>preserve<sp/>or<sp/>discard<sp/>page<sp/>setup<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportPageSetup&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;,<sp/>the<sp/>output<sp/>HTML<sp/>document<sp/>will<sp/>contain<sp/>our<sp/>page<sp/>setup<sp/>configuration.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportPageSetup&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;,<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>discard<sp/>our<sp/>page<sp/>setup<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>first<sp/>section,<sp/>and<sp/>both<sp/>sections<sp/>will<sp/>look<sp/>identical.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportPageSetup(exportPageSetup);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportPageSetup.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportPageSetup.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportPageSetup)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;style<sp/>type=\&quot;text/css\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;@page<sp/>Section1<sp/>{<sp/>size:419.55pt<sp/>595.3pt;<sp/>margin:36pt<sp/>70.85pt<sp/>}&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;@page<sp/>Section2<sp/>{<sp/>size:612pt<sp/>792pt;<sp/>margin:70.85pt<sp/>}&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;div.Section1<sp/>{<sp/>page:Section1<sp/>}div.Section2<sp/>{<sp/>page:Section2<sp/>}&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/style&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;div<sp/>class=\&quot;Section1\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Section<sp/>1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;style<sp/>type=\&quot;text/css\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;div&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Section<sp/>1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1450" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75f62a5a25e49521bc4e477d8dc1e23a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportRelativeFontSize</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportRelativeFontSize</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportRelativeFontSize</qualifiedname>
        <briefdescription>
<para>Specifies whether font sizes should be output in relative units when saving to HTML, MHTML or EPUB. Default is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>In many existing documents (HTML, IDPF EPUB) font sizes are specified in relative units. This allows applications to adjust text size when viewing/processing documents. For instance, Microsoft Internet Explorer has &quot;View-&gt;Text Size&quot; submenu, Adobe Digital Editions has two buttons: Increase/Decrease Text Size. If you expect this functionality to work then set <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75f62a5a25e49521bc4e477d8dc1e23a" kindref="member">ExportRelativeFontSize</ref> property to <computeroutput>true</computeroutput>.</para>
<para><ref refid="namespace_aspose" kindref="compound">Aspose</ref> <ref refid="namespace_aspose_1_1_words" kindref="compound">Words</ref> document model contains and operates only with absolute font size units. Relative units need additional logic to be recalculated from some initial (standard) size. <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> size of <bold>Normal</bold> document style is taken as standard. For instance, if <bold>Normal</bold> has 12pt font and some text is 18pt then it will be output as <bold>%1.5em.</bold> to the HTML.</para>
<para>When this option is enabled, document elements other than text will still have absolute sizes. Also some text-related attributes might be expressed absolutely. In particular, line spacing specified with &quot;exactly&quot; rule might produce unwanted results when scaling text. So the source documents should be properly designed and tested when exporting with <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75f62a5a25e49521bc4e477d8dc1e23a" kindref="member">ExportRelativeFontSize</ref> set to <computeroutput>true</computeroutput>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use relative font sizes when saving to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Default<sp/>font<sp/>size,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Size(24);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;2x<sp/>default<sp/>font<sp/>size,&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Size(96);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;8x<sp/>default<sp/>font<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>whether<sp/>to<sp/>use<sp/>relative<sp/>or<sp/>absolute<sp/>font<sp/>sizes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;ExportRelativeFontSize&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>to<sp/>declare<sp/>font<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>&quot;em&quot;<sp/>measurement<sp/>unit,<sp/>which<sp/>is<sp/>a<sp/>factor<sp/>that<sp/>multiplies<sp/>the<sp/>current<sp/>font<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;ExportRelativeFontSize&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>to<sp/>declare<sp/>font<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>the<sp/>&quot;pt&quot;<sp/>measurement<sp/>unit,<sp/>which<sp/>is<sp/>the<sp/>font&apos;s<sp/>absolute<sp/>size<sp/>in<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportRelativeFontSize(exportRelativeFontSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.RelativeFontSize.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.RelativeFontSize.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportRelativeFontSize)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;body<sp/>style=\&quot;font-family:&apos;Times<sp/>New<sp/>Roman&apos;\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;div&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Default<sp/>font<sp/>size,<sp/>&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt;<sp/>font-size:2em\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;2x<sp/>default<sp/>font<sp/>size,&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt;<sp/>font-size:8em\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;8x<sp/>default<sp/>font<sp/>size&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/body&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;body<sp/>style=\&quot;font-family:&apos;Times<sp/>New<sp/>Roman&apos;;<sp/>font-size:12pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;div&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Default<sp/>font<sp/>size,<sp/>&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt;<sp/>font-size:24pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;2x<sp/>default<sp/>font<sp/>size,&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt;<sp/>font-size:96pt\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;8x<sp/>default<sp/>font<sp/>size&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/div&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/body&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1565" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a7fe0a32e742927a323a1a7c087b3cc0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportRoundtripInformation</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportRoundtripInformation</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportRoundtripInformation</qualifiedname>
        <briefdescription>
<para>Specifies whether to write the roundtrip information when saving to HTML, MHTML or EPUB. Default value is <computeroutput>true</computeroutput> for HTML and <computeroutput>false</computeroutput> for MHTML and EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_saving" kindref="compound">Saving</ref> of the roundtrip information allows to restore document properties such as tab stops, comments, headers and footers during the HTML documents loading back into a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> object.</para>
<para>When <computeroutput>true</computeroutput>, the roundtrip information is exported as -aw-* CSS properties of the corresponding HTML elements.</para>
<para>When <computeroutput>false</computeroutput>, causes no roundtrip information to be output into produced files.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to preserve hidden elements when converting to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>converting<sp/>a<sp/>document<sp/>to<sp/>.html,<sp/>some<sp/>elements<sp/>such<sp/>as<sp/>hidden<sp/>bookmarks,<sp/>original<sp/>shape<sp/>positions,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>footnotes<sp/>will<sp/>be<sp/>either<sp/>removed<sp/>or<sp/>converted<sp/>to<sp/>plain<sp/>text<sp/>and<sp/>effectively<sp/>be<sp/>lost.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Saving<sp/>with<sp/>a<sp/>HtmlSaveOptions<sp/>object<sp/>with<sp/>ExportRoundtripInformation<sp/>set<sp/>to<sp/>true<sp/>will<sp/>preserve<sp/>these<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>determine</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>how<sp/>the<sp/>saving<sp/>operation<sp/>will<sp/>export<sp/>document<sp/>elements<sp/>that<sp/>HTML<sp/>does<sp/>not<sp/>support<sp/>or<sp/>use,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>hidden<sp/>bookmarks<sp/>and<sp/>original<sp/>shape<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportRoundtripInformation&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;,<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>preserve<sp/>these<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportRoundTripInformation&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;,<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>discard<sp/>these<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>want<sp/>to<sp/>preserve<sp/>such<sp/>elements<sp/>if<sp/>we<sp/>intend<sp/>to<sp/>load<sp/>the<sp/>saved<sp/>HTML<sp/>using<sp/>Aspose.Words,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>they<sp/>could<sp/>be<sp/>of<sp/>use<sp/>once<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportRoundtripInformation(exportRoundtripInformation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.RoundTripInformation.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.RoundTripInformation.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.RoundTripInformation.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportRoundtripInformation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;div<sp/>style=\&quot;-aw-headerfooter-type:header-primary;<sp/>clear:both\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-import:ignore\&quot;&gt;&amp;#xa0;&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;td<sp/>colspan=\&quot;2\&quot;<sp/>style=\&quot;width:210.6pt;<sp/>border-style:solid;<sp/>border-width:0.75pt<sp/>6pt<sp/>0.75pt<sp/>0.75pt;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;padding-right:2.4pt;<sp/>padding-left:5.03pt;<sp/>vertical-align:top;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-bottom:0.5pt<sp/>single;<sp/>-aw-border-left:0.5pt<sp/>single;<sp/>-aw-border-top:0.5pt<sp/>single\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;li<sp/>style=\&quot;margin-left:30.2pt;<sp/>padding-left:5.8pt;<sp/>-aw-font-family:&apos;Courier<sp/>New&apos;;<sp/>-aw-font-weight:normal;<sp/>-aw-number-format:&apos;o&apos;\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.RoundTripInformation.003.jpeg\&quot;<sp/>width=\&quot;350\&quot;<sp/>height=\&quot;180\&quot;<sp/>alt=\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;style=\&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Page<sp/>number<sp/>&lt;/span&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-field-start:true\&quot;&gt;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-field-code:&apos;<sp/>PAGE<sp/><sp/><sp/>\\\\*<sp/>MERGEFORMAT<sp/>&apos;\&quot;&gt;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-field-separator:true\&quot;&gt;&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-field-end:true\&quot;&gt;&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;LINQ_Count([](SharedPtr&lt;Field&gt;<sp/>f)<sp/>{<sp/>return<sp/>f-&gt;get_Type()<sp/>==<sp/>FieldType::FieldPage;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;div<sp/>style=\&quot;clear:both\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;&amp;#xa0;&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;td<sp/>colspan=\&quot;2\&quot;<sp/>style=\&quot;width:210.6pt;<sp/>border-style:solid;<sp/>border-width:0.75pt<sp/>6pt<sp/>0.75pt<sp/>0.75pt;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;padding-right:2.4pt;<sp/>padding-left:5.03pt;<sp/>vertical-align:top\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;li<sp/>style=\&quot;margin-left:30.2pt;<sp/>padding-left:5.8pt\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.RoundTripInformation.003.jpeg\&quot;<sp/>width=\&quot;350\&quot;<sp/>height=\&quot;180\&quot;<sp/>alt=\&quot;\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Page<sp/>number<sp/>1&lt;/span&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(0,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;LINQ_Count([](SharedPtr&lt;Field&gt;<sp/>f)<sp/>{<sp/>return<sp/>f-&gt;get_Type()<sp/>==<sp/>FieldType::FieldPage;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1968" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab3ff9253ac8773483633aa4af1e31131" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportShapesAsSvg</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportShapesAsSvg</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportShapesAsSvg</qualifiedname>
        <briefdescription>
<para>Controls whether <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_shape" kindref="compound">Shape</ref> nodes are converted to SVG images when saving to HTML, MHTML, EPUB or AZW3. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If this option is set to <computeroutput>true</computeroutput>, <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_shape" kindref="compound">Shape</ref> nodes are exported as &lt;svg&gt; elements. Otherwise, they are rendered to bitmaps and are exported as &lt;img&gt; elements.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to export text boxes as scalable vector graphics. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Shape&gt;<sp/>textBox<sp/>=<sp/>builder-&gt;InsertShape(ShapeType::TextBox,<sp/>100.0,<sp/>60.0);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;MoveTo(textBox-&gt;get_FirstParagraph());</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;My<sp/>text<sp/>box&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>how<sp/>the<sp/>saving<sp/>operation<sp/>will<sp/>export<sp/>text<sp/>box<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportShapesAsSvg&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>convert<sp/>shapes<sp/>with<sp/>text<sp/>into<sp/>SVG<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportShapesAsSvg&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>convert<sp/>shapes<sp/>with<sp/>text<sp/>into<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportShapesAsSvg(exportShapesAsSvg);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportTextBox.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportTextBox.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportShapesAsSvg)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;svg<sp/>xmlns=\&quot;http://www.w3.org/2000/svg\&quot;<sp/>xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot;<sp/>version=\&quot;1.1\&quot;<sp/>width=\&quot;133\&quot;<sp/>height=\&quot;80\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.ExportTextBox.001.png\&quot;<sp/>width=\&quot;136\&quot;<sp/>height=\&quot;83\&quot;<sp/>alt=\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;style=\&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1651" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a050c08aee078e4c8d9693fb973d9f156" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportTextInputFormFieldAsText</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportTextInputFormFieldAsText</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportTextInputFormFieldAsText</qualifiedname>
        <briefdescription>
<para>Controls how text input form fields are saved to HTML or MHTML. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>When set to <computeroutput>true</computeroutput>, exports text input form fields as normal text. When <computeroutput>false</computeroutput>, exports Word text input form fields as INPUT elements in HTML.</para>
<para>When exporting to EPUB, text input form fields are always saved as text due to requirements of this format.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify the folder for storing linked images after saving to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imagesDir<sp/>=<sp/><ref refid="class/system.i_o.path/_1a29adb2a8493ae80f056243b88dbf4de7" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::Combine</ref>(ArtifactsDir,<sp/>u</highlight><highlight class="stringliteral">&quot;SaveHtmlWithOptions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class/system.i_o.directory/_1a8898c7613b377294f56ca21ff2de72e2" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::Exists</ref>(imagesDir))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.directory/_1a8c695f303996f8d22e79189c219fd147" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::Delete</ref>(imagesDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.i_o.directory/_1a2fdf34c13286610724abbd6207d618d7" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::CreateDirectory_</ref>(imagesDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>an<sp/>option<sp/>to<sp/>export<sp/>form<sp/>fields<sp/>as<sp/>plain<sp/>text<sp/>instead<sp/>of<sp/>HTML<sp/>input<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportTextInputFormFieldAsText(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(imagesDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.SaveHtmlWithOptions.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1601" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a660e73dbc6030fdad2bf8c5cf8ccfb52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportTocPageNumbers</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportTocPageNumbers</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportTocPageNumbers</qualifiedname>
        <briefdescription>
<para>Specifies whether to write page numbers to table of contents when saving HTML, MHTML and EPUB. Default value is <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to display page numbers when saving a document with a table of contents to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>table<sp/>of<sp/>contents,<sp/>and<sp/>then<sp/>populate<sp/>the<sp/>document<sp/>with<sp/>paragraphs<sp/>formatted<sp/>using<sp/>a<sp/>&quot;Heading&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>style<sp/>that<sp/>the<sp/>table<sp/>of<sp/>contents<sp/>will<sp/>pick<sp/>up<sp/>as<sp/>entries.<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>heading<sp/>paragraph<sp/>on<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>number<sp/>that<sp/>contains<sp/>the<sp/>heading<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(FieldType::FieldTOC,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Entry<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Entry<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Entry<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Entry<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>HTML<sp/>documents<sp/>do<sp/>not<sp/>have<sp/>pages.<sp/>If<sp/>we<sp/>save<sp/>this<sp/>document<sp/>to<sp/>HTML,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>page<sp/>numbers<sp/>that<sp/>our<sp/>TOC<sp/>displays<sp/>will<sp/>have<sp/>no<sp/>meaning.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>omit<sp/>these<sp/>page<sp/>numbers<sp/>from<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportTocPageNumbers&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>heading,<sp/>separator,<sp/>and<sp/>page<sp/>number,<sp/>preserving<sp/>its<sp/>appearance<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportTocPageNumbers&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>omit<sp/>both<sp/>the<sp/>separator<sp/>and<sp/>page<sp/>number<sp/>and<sp/>leave<sp/>the<sp/>heading<sp/>for<sp/>each<sp/>entry<sp/>intact.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportTocPageNumbers(exportTocPageNumbers);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportTocPageNumbers.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportTocPageNumbers.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exportTocPageNumbers)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Entry<sp/>1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;width:428.14pt;<sp/>font-family:&apos;Lucida<sp/>Console&apos;;<sp/>font-size:10pt;<sp/>display:inline-block;<sp/>-aw-font-family:&apos;Times<sp/>New<sp/>Roman&apos;;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-tabstop-align:right;<sp/>-aw-tabstop-leader:dots;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-tabstop-pos:469.8pt\&quot;&gt;.......................................................................&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;2&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span&gt;Entry<sp/>1&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1756" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aed2872b56172d48033db769352711dcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ExportXhtmlTransitional</definition>
        <argsstring>() const</argsstring>
        <name>get_ExportXhtmlTransitional</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ExportXhtmlTransitional</qualifiedname>
        <briefdescription>
<para>Specifies whether to write the DOCTYPE declaration when saving to HTML or MHTML. When <computeroutput>true</computeroutput>, writes a DOCTYPE declaration in the document prior to the root element. Default value is <computeroutput>false</computeroutput>. When saving to EPUB or HTML5 (<ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a674e7b063b14efa7a8c9588418cc360e" kindref="member">Html5</ref>) the DOCTYPE declaration is always written. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words always writes well formed HTML regardless of this setting.</para>
<para>When <computeroutput>true</computeroutput>, the beginning of the HTML output document will look like this:</para>
<para><programlisting><codeline><highlight class="normal">&lt;?xml<sp/>version=</highlight><highlight class="stringliteral">&quot;1.0&quot;</highlight><highlight class="normal"><sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal"><sp/>standalone=</highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal"><sp/>?&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;!DOCTYPE<sp/>html</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUBLIC<sp/></highlight><highlight class="stringliteral">&quot;-//W3C//DTD<sp/>XHTML<sp/>1.0<sp/>Transitional//EN&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;html<sp/>xmlns=</highlight><highlight class="stringliteral">&quot;http://www.w3.org/1999/xhtml&quot;</highlight><highlight class="normal"><sp/>xml:lang=</highlight><highlight class="stringliteral">&quot;en&quot;</highlight><highlight class="normal"><sp/>lang=</highlight><highlight class="stringliteral">&quot;en&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para>
<para>Aspose.Words aims to output XHTML according to the XHTML 1.0 Transitional specification, but the output will not always validate against the DTD. Some structures inside a Microsoft Word document are hard or impossible to map to a document that will validate against the XHTML schema. For example, XHTML does not allow nested lists (UL cannot be nested inside another UL element), but in Microsoft Word document multilevel lists occur quite often.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to display a DOCTYPE heading when converting documents to the Xhtml 1.0 transitional standard. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_HtmlVersion(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a5cc8cd15b35743590d1128730bcc8937" kindref="member" tooltip="Saves the document in compliance with the XHTML 1.0 Transitional standard.">HtmlVersion::Xhtml</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportXhtmlTransitional(showDoctypeDeclaration);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportXhtmlTransitional.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>document<sp/>will<sp/>only<sp/>contain<sp/>a<sp/>DOCTYPE<sp/>declaration<sp/>heading<sp/>if<sp/>we<sp/>have<sp/>set<sp/>the<sp/>&quot;ExportXhtmlTransitional&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportXhtmlTransitional.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(showDoctypeDeclaration)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;1.0\&quot;<sp/>encoding=\&quot;utf-8\&quot;<sp/>standalone=\&quot;no\&quot;?&gt;\r\n&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;!DOCTYPE<sp/>html<sp/>PUBLIC<sp/>\&quot;-//W3C//DTD<sp/>XHTML<sp/>1.0<sp/>Transitional//EN\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\&quot;&gt;\r\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;html<sp/>xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;html&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1816" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1add89277511fce7088ef8f275c1bafe34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Saving::HtmlSaveOptions::get_FontResourcesSubsettingSizeThreshold</definition>
        <argsstring>() const</argsstring>
        <name>get_FontResourcesSubsettingSizeThreshold</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_FontResourcesSubsettingSizeThreshold</qualifiedname>
        <briefdescription>
<para>Controls which font resources need subsetting when saving to HTML, MHTML or EPUB. Default is <computeroutput>%0</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">ExportFontResources</ref> allows exporting fonts as subsidiary files or as parts of the output package. If the document uses many fonts, especially with large number of glyphs, then output size can grow significantly. <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> subsetting reduces the size of the exported font resource by filtering out glyphs that are not used by the current document.</para>
<para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> subsetting works as follows:</para>
<para><itemizedlist>
<listitem><para>By default, all exported fonts are subsetted.</para>
</listitem><listitem><para>Setting <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1add89277511fce7088ef8f275c1bafe34" kindref="member">FontResourcesSubsettingSizeThreshold</ref> to a positive value instructs Aspose.Words to subset fonts which file size is larger than the specified value.</para>
</listitem><listitem><para>Setting the property to <ref refid="class/system.int32/_1a4c222f79dc3caab5e705249d5e36491f" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MaxValue</ref> suppresses font subsetting.</para>
</listitem></itemizedlist>
</para>
<para><bold>Important!</bold> When exporting font resources, font licensing issues should be considered. Authors who want to use specific fonts via a downloadable font mechanism must always carefully verify that their intended use is within the scope of the font license. Many commercial fonts presently do not allow web downloading of their fonts in any form. <ref refid="class_aspose_1_1_words_1_1_license" kindref="compound">License</ref> agreements that cover some fonts specifically note that usage via <bold>%@font-face</bold> rules in CSS style sheets is not allowed. <ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> subsetting can also violate license terms.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontResources</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with font subsetting. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Courier<sp/>New&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object<sp/>configure<sp/>font<sp/>subsetting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Suppose<sp/>we<sp/>set<sp/>the<sp/>&quot;ExportFontResources&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>and<sp/>also<sp/>name<sp/>a<sp/>folder<sp/>in<sp/>the<sp/>&quot;FontsFolder&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>that<sp/>case,<sp/>the<sp/>saving<sp/>operation<sp/>will<sp/>create<sp/>that<sp/>folder<sp/>and<sp/>place<sp/>a<sp/>.ttf<sp/>file<sp/>inside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>folder<sp/>for<sp/>each<sp/>font<sp/>that<sp/>our<sp/>document<sp/>uses.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>.ttf<sp/>file<sp/>will<sp/>contain<sp/>that<sp/>font&apos;s<sp/>entire<sp/>glyph<sp/>set,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>may<sp/>potentially<sp/>result<sp/>in<sp/>a<sp/>very<sp/>large<sp/>file<sp/>that<sp/>accompanies<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>apply<sp/>subsetting<sp/>to<sp/>a<sp/>font,<sp/>its<sp/>exported<sp/>raw<sp/>data<sp/>will<sp/>only<sp/>contain<sp/>the<sp/>glyphs<sp/>that<sp/>the<sp/>document<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>using<sp/>instead<sp/>of<sp/>the<sp/>entire<sp/>glyph<sp/>set.<sp/>If<sp/>the<sp/>text<sp/>in<sp/>our<sp/>document<sp/>only<sp/>uses<sp/>a<sp/>small<sp/>fraction<sp/>of<sp/>a<sp/>font&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>glyph<sp/>set,<sp/>then<sp/>subsetting<sp/>will<sp/>significantly<sp/>reduce<sp/>our<sp/>output<sp/>documents&apos;<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;FontResourcesSubsettingSizeThreshold&quot;<sp/>property<sp/>to<sp/>define<sp/>a<sp/>.ttf<sp/>file<sp/>size,<sp/>in<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>exported<sp/>font<sp/>creates<sp/>a<sp/>size<sp/>bigger<sp/>file<sp/>than<sp/>that,<sp/>then<sp/>the<sp/>save<sp/>operation<sp/>will<sp/>apply<sp/>subsetting<sp/>to<sp/>that<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>a<sp/>threshold<sp/>of<sp/>0<sp/>applies<sp/>subsetting<sp/>to<sp/>all<sp/>fonts,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>setting<sp/>it<sp/>to<sp/>&quot;int.MaxValue&quot;<sp/>effectively<sp/>disables<sp/>subsetting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fontsFolder<sp/>=<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FontSubsetting.Fonts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(fontsFolder);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(fontResourcesSubsettingSizeThreshold);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FontSubsetting.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;String&gt;<sp/>fontFileNames<sp/>=<sp/><ref refid="class/system.i_o.directory/_1a175e3c7c67d67de4fc93cd54b8fb6f2d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::GetFiles</ref>(fontsFolder)-&gt;LINQ_Where([](String<sp/>s)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.EndsWith(u</highlight><highlight class="stringliteral">&quot;.ttf&quot;</highlight><highlight class="normal">);<sp/>})-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>fontFileNames-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(String<sp/>filename<sp/>:<sp/>fontFileNames)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>the<sp/>.ttf<sp/>files<sp/>for<sp/>each<sp/>of<sp/>our<sp/>three<sp/>fonts<sp/>will<sp/>be<sp/>over<sp/>700MB.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subsetting<sp/>will<sp/>reduce<sp/>them<sp/>all<sp/>to<sp/>under<sp/>30MB.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontFileInfo<sp/>=<sp/>MakeObject&lt;System::IO::FileInfo&gt;(filename);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontFileInfo-&gt;get_Length()<sp/>&gt;<sp/>700000<sp/>||<sp/>fontFileInfo-&gt;get_Length()<sp/>&lt;<sp/>30000);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(<ref refid="struct/system.math/_1a75fe2d82fb7db877343b3c6a09465694" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Math::Max</ref>(fontResourcesSubsettingSizeThreshold,<sp/>30000)<sp/>&gt;<sp/>MakeObject&lt;System::IO::FileInfo&gt;(filename)-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2242" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a880c85d68ac40402c59f81ac077328a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_font_saving_callback" kindref="compound">Aspose::Words::Saving::IFontSavingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Saving::IFontSavingCallback &gt; Aspose::Words::Saving::HtmlSaveOptions::get_FontSavingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_FontSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_FontSavingCallback</qualifiedname>
        <briefdescription>
<para>Allows to control how fonts are saved when a document is saved to HTML, MHTML or EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to define custom logic for exporting fonts when saving to HTML. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveExportedFonts()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>export<sp/>fonts<sp/>to<sp/>separate<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>callback<sp/>that<sp/>will<sp/>handle<sp/>font<sp/>saving<sp/>in<sp/>a<sp/>custom<sp/>manner.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_FontSavingCallback(MakeObject&lt;ExHtmlSaveOptions::HandleFontSaving&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>callback<sp/>will<sp/>export<sp/>.ttf<sp/>files<sp/>and<sp/>save<sp/>them<sp/>alongside<sp/>the<sp/>output<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.SaveExportedFonts.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;bool(String<sp/>s)&gt;<sp/>endsWithTtf<sp/>=<sp/>[](<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>s)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.EndsWith(u</highlight><highlight class="stringliteral">&quot;.ttf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(String<sp/>fontFilename<sp/>:<sp/><ref refid="class/system.array/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Array&lt;String&gt;::FindAll</ref>(<ref refid="class/system.i_o.directory/_1a175e3c7c67d67de4fc93cd54b8fb6f2d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::GetFiles</ref>(ArtifactsDir),<sp/>endsWithTtf))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fontFilename<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">HandleFontSaving<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IFontSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FontSaving(SharedPtr&lt;FontSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Font:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_FontFamilyName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args-&gt;get_Bold())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>bold&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args-&gt;get_Italic())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>italic&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nSource:\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_OriginalFileName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_OriginalFileSize()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>source<sp/>document<sp/>from<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsExportNeeded());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsSubsettingNeeded());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>saving<sp/>an<sp/>exported<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Save<sp/>it<sp/>to<sp/>a<sp/>local<sp/>file<sp/>system<sp/>location:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_FontFileName(args-&gt;get_OriginalFileName().Split(MakeArray&lt;char16_t&gt;({System::IO::Path::DirectorySeparatorChar}))-&gt;LINQ_Last());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Save<sp/>it<sp/>to<sp/>a<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_FontStream(MakeObject&lt;System::IO::FileStream&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArtifactsDir<sp/>+<sp/>args-&gt;get_OriginalFileName().Split(MakeArray&lt;char16_t&gt;({System::IO::Path::DirectorySeparatorChar}))-&gt;LINQ_Last(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepFontStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2315" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolder</definition>
        <argsstring>() const</argsstring>
        <name>get_FontsFolder</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolder</qualifiedname>
        <briefdescription>
<para>Specifies the physical folder where fonts are saved when exporting a document to HTML. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para>When you save a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> in HTML format and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">ExportFontResources</ref> is set to <computeroutput>true</computeroutput>, Aspose.Words needs to save fonts used in the document as standalone files. <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref> allows you to specify where the fonts will be saved and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> allows to specify how the font URIs will be constructed.</para>
<para>If you save a document into a file and provide a file name, Aspose.Words, by default, saves the fonts in the same folder where the document file is saved. Use <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref> to override this behavior.</para>
<para>If you save a document into a stream, Aspose.Words does not have a folder where to save the fonts, but still needs to save the fonts somewhere. In this case, you need to specify an accessible folder in the <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref> property or provide custom streams via the <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a880c85d68ac40402c59f81ac077328a8" kindref="member">FontSavingCallback</ref> event handler.</para>
<para>If the folder specified by <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref> doesn&apos;t exist, it will be created automatically.</para>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> is another way to specify a folder where fonts should be saved.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontResources</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolderAlias</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a880c85d68ac40402c59f81ac077328a8" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontSavingCallback</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2113" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolderAlias</definition>
        <argsstring>() const</argsstring>
        <name>get_FontsFolderAlias</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolderAlias</qualifiedname>
        <briefdescription>
<para>Specifies the name of the folder used to construct font URIs written into an HTML document. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para>When you save a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> in HTML format and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">ExportFontResources</ref> is set to <computeroutput>true</computeroutput>, Aspose.Words needs to save fonts used in the document as standalone files. <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref> allows you to specify where the fonts will be saved and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> allows to specify how the font URIs will be constructed.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> is not an empty string, then the font URI written to HTML will be <emphasis>FontsFolderAlias + &lt;font file name&gt;</emphasis>.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> is an empty string, then the font URI written to HTML will be <emphasis>FontsFolder + &lt;font file name&gt;</emphasis>.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> is set to &apos;.&apos; (dot), then the font file name will be written to HTML without path regardless of other options.</para>
<para>Alternative way to specify the name of the folder to construct font URIs is to use <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolderAlias</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontResources</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a880c85d68ac40402c59f81ac077328a8" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontSavingCallback</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2164" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa5ef1ab52004a90c011a1807db98d825" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034" kindref="member">Aspose::Words::Saving::HtmlVersion</ref></type>
        <definition>Aspose::Words::Saving::HtmlVersion Aspose::Words::Saving::HtmlSaveOptions::get_HtmlVersion</definition>
        <argsstring>() const</argsstring>
        <name>get_HtmlVersion</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_HtmlVersion</qualifiedname>
        <briefdescription>
<para>Specifies version of HTML standard that should be used when saving the document to HTML or MHTML. Default value is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a5cc8cd15b35743590d1128730bcc8937" kindref="member">Xhtml</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to save a document to a specific version of HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_HtmlVersion(htmlVersion);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HtmlVersions.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>HTML<sp/>documents<sp/>will<sp/>have<sp/>minor<sp/>differences<sp/>to<sp/>be<sp/>compatible<sp/>with<sp/>different<sp/>HTML<sp/>versions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.HtmlVersions.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(htmlVersion)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a674e7b063b14efa7a8c9588418cc360e" kindref="member" tooltip="Saves the document in compliance with the HTML 5 standard.">HtmlVersion::Html5</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;a<sp/>id=\&quot;_Toc76372689\&quot;&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;a<sp/>id=\&quot;_Toc76372689\&quot;&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>style=\&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a5cc8cd15b35743590d1128730bcc8937" kindref="member" tooltip="Saves the document in compliance with the XHTML 1.0 Transitional standard.">HtmlVersion::Xhtml</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;a<sp/>name=\&quot;_Toc76372689\&quot;&gt;&lt;/a&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;ul<sp/>type=\&quot;disc\&quot;<sp/>style=\&quot;margin:0pt;<sp/>padding-left:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Shows how to display a DOCTYPE heading when converting documents to the Xhtml 1.0 transitional standard. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_HtmlVersion(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034a5cc8cd15b35743590d1128730bcc8937" kindref="member" tooltip="Saves the document in compliance with the XHTML 1.0 Transitional standard.">HtmlVersion::Xhtml</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportXhtmlTransitional(showDoctypeDeclaration);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_PrettyFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportXhtmlTransitional.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Our<sp/>document<sp/>will<sp/>only<sp/>contain<sp/>a<sp/>DOCTYPE<sp/>declaration<sp/>heading<sp/>if<sp/>we<sp/>have<sp/>set<sp/>the<sp/>&quot;ExportXhtmlTransitional&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ExportXhtmlTransitional.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(showDoctypeDeclaration)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;?xml<sp/>version=\&quot;1.0\&quot;<sp/>encoding=\&quot;utf-8\&quot;<sp/>standalone=\&quot;no\&quot;?&gt;\r\n&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;!DOCTYPE<sp/>html<sp/>PUBLIC<sp/>\&quot;-//W3C//DTD<sp/>XHTML<sp/>1.0<sp/>Transitional//EN\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\&quot;&gt;\r\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;html<sp/>xmlns=\&quot;http://www.w3.org/1999/xhtml\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;html&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1886" column="43"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adb618046819b5f1a5f09683b94a11ad1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Saving::HtmlSaveOptions::get_ImageResolution</definition>
        <argsstring>() const</argsstring>
        <name>get_ImageResolution</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ImageResolution</qualifiedname>
        <briefdescription>
<para>Specifies the output resolution for images when exporting to HTML, MHTML or EPUB. Default is <computeroutput>%96 dpi</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This property effects raster images when <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">ScaleImageToShapeSize</ref> is <computeroutput>true</computeroutput> and effects metafiles exported as raster images. Some image properties such as cropping or rotation require saving transformed images and in this case transformed images are created in the given resolution.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ScaleImageToShapeSize</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2453" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1fad0446faf123eefffbf5b0003f23ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_image_saving_callback" kindref="compound">Aspose::Words::Saving::IImageSavingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Saving::IImageSavingCallback &gt; Aspose::Words::Saving::HtmlSaveOptions::get_ImageSavingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_ImageSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ImageSavingCallback</qualifiedname>
        <briefdescription>
<para>Allows to control how images are saved when a document is saved to HTML, MHTML or EPUB. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to split a document into parts and save them. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DocumentPartsFileNames()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outFileName<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.DocumentPartsFileNames.html&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>&quot;HtmlFixedSaveOptions&quot;<sp/>object,<sp/>which<sp/>we<sp/>can<sp/>pass<sp/>to<sp/>the<sp/>document&apos;s<sp/>&quot;Save&quot;<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>modify<sp/>how<sp/>we<sp/>convert<sp/>the<sp/>document<sp/>to<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>save<sp/>the<sp/>document<sp/>normally,<sp/>there<sp/>will<sp/>be<sp/>one<sp/>output<sp/>HTML</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>document<sp/>with<sp/>all<sp/>the<sp/>source<sp/>document&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;DocumentSplitCriteria&quot;<sp/>property<sp/>to<sp/>&quot;DocumentSplitCriteria.SectionBreak&quot;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>our<sp/>document<sp/>to<sp/>multiple<sp/>HTML<sp/>files:<sp/>one<sp/>for<sp/>each<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07ac6788b2b9719f26994fd409d52a778fb" kindref="member" tooltip="The document is split into parts at a section break of any type.">DocumentSplitCriteria::SectionBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>the<sp/>&quot;DocumentPartSavingCallback&quot;<sp/>property<sp/>to<sp/>alter<sp/>the<sp/>document<sp/>part<sp/>saving<sp/>logic.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_DocumentPartSavingCallback(MakeObject&lt;ExSavingCallback::SavedDocumentPartRename&gt;(outFileName,<sp/>options-&gt;get_DocumentSplitCriteria()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>convert<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>images<sp/>into<sp/>html,<sp/>we<sp/>will<sp/>end<sp/>up<sp/>with<sp/>one<sp/>html<sp/>file<sp/>which<sp/>links<sp/>to<sp/>several<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>image<sp/>will<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>file<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>also<sp/>a<sp/>callback<sp/>that<sp/>can<sp/>customize<sp/>the<sp/>name<sp/>and<sp/>file<sp/>system<sp/>location<sp/>of<sp/>each<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ImageSavingCallback(MakeObject&lt;ExSavingCallback::SavedImageRename&gt;(outFileName));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>outFileName,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">SavedDocumentPartRename<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IDocumentPartSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SavedDocumentPartRename(String<sp/>outFileName,<sp/>DocumentSplitCriteria<sp/>documentSplitCriteria)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mCount(0),<sp/>mDocumentSplitCriteria(((<ref refid="namespace_aspose" kindref="compound">Aspose</ref>::<ref refid="namespace_aspose_1_1_words_1aedb2afadc4813c7e4de736b7b7481c94a6f15b8d4b7287d60a8ea3d1c5cbadc84" kindref="member">Words</ref>::Saving::<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member" tooltip="Specifies how the document is split into parts when saving to Html, Epub or Azw3 format.">DocumentSplitCriteria</ref>)0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutFileName<sp/>=<sp/>outFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDocumentSplitCriteria<sp/>=<sp/>documentSplitCriteria;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mOutFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member" tooltip="Specifies how the document is split into parts when saving to Html, Epub or Azw3 format.">DocumentSplitCriteria</ref><sp/>mDocumentSplitCriteria;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DocumentPartSaving(SharedPtr&lt;DocumentPartSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>entire<sp/>source<sp/>document<sp/>via<sp/>the<sp/>&quot;Document&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>partType<sp/>=<sp/>String::Empty;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mDocumentSplitCriteria)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::PageBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Page&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::ColumnBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Column&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::SectionBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Section&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::HeadingParagraph:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>from<sp/>heading&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>partFileName<sp/>=<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>part<sp/>{1},<sp/>of<sp/>type<sp/>{2}{3}&quot;</highlight><highlight class="normal">,<sp/>mOutFileName,<sp/>++mCount,<sp/>partType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.path/_1ae9e0f0c8b345ecfab2ca997411b81f97" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::GetExtension</ref>(args-&gt;get_DocumentPartFileName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>where<sp/>Aspose.Words<sp/>will<sp/>save<sp/>each<sp/>part<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>output<sp/>part<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_DocumentPartFileName(partFileName);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Create<sp/>a<sp/>custom<sp/>stream<sp/>for<sp/>the<sp/>output<sp/>part<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_DocumentPartStream(MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>partFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_DocumentPartStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepDocumentPartStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">SavedImageRename<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IImageSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SavedImageRename(String<sp/>outFileName)<sp/>:<sp/>mCount(0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutFileName<sp/>=<sp/>outFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mOutFileName;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageSaving(SharedPtr&lt;ImageSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imageFileName<sp/>=<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>shape<sp/>{1},<sp/>of<sp/>type<sp/>{2}{3}&quot;</highlight><highlight class="normal">,<sp/>mOutFileName,<sp/>++mCount,<sp/>args-&gt;get_CurrentShape()-&gt;get_ShapeType(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.path/_1ae9e0f0c8b345ecfab2ca997411b81f97" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::GetExtension</ref>(args-&gt;get_ImageFileName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>where<sp/>Aspose.Words<sp/>will<sp/>save<sp/>each<sp/>part<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>output<sp/>image<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_ImageFileName(imageFileName);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Create<sp/>a<sp/>custom<sp/>stream<sp/>for<sp/>the<sp/>output<sp/>image<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_ImageStream(MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>imageFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_ImageStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsImageAvailable());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepImageStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2585" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolder</definition>
        <argsstring>() const</argsstring>
        <name>get_ImagesFolder</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolder</qualifiedname>
        <briefdescription>
<para>Specifies the physical folder where images are saved when exporting a document to HTML format. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para>When you save a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> in HTML format, Aspose.Words needs to save all images embedded in the document as standalone files. <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> allows you to specify where the images will be saved and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> allows to specify how the image URIs will be constructed.</para>
<para>If you save a document into a file and provide a file name, Aspose.Words, by default, saves the images in the same folder where the document file is saved. Use <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> to override this behavior.</para>
<para>If you save a document into a stream, Aspose.Words does not have a folder where to save the images, but still needs to save the images somewhere. In this case, you need to specify an accessible folder in the <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> property or provide custom streams via the <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1fad0446faf123eefffbf5b0003f23ac" kindref="member">ImageSavingCallback</ref> event handler.</para>
<para>If the folder specified by <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> doesn&apos;t exist, it will be created automatically.</para>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> is another way to specify a folder where images should be saved.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolderAlias</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1fad0446faf123eefffbf5b0003f23ac" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImageSavingCallback</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify the folder for storing linked images after saving to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imagesDir<sp/>=<sp/><ref refid="class/system.i_o.path/_1a29adb2a8493ae80f056243b88dbf4de7" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::Combine</ref>(ArtifactsDir,<sp/>u</highlight><highlight class="stringliteral">&quot;SaveHtmlWithOptions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class/system.i_o.directory/_1a8898c7613b377294f56ca21ff2de72e2" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::Exists</ref>(imagesDir))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.directory/_1a8c695f303996f8d22e79189c219fd147" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::Delete</ref>(imagesDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.i_o.directory/_1a2fdf34c13286610724abbd6207d618d7" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::CreateDirectory_</ref>(imagesDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>an<sp/>option<sp/>to<sp/>export<sp/>form<sp/>fields<sp/>as<sp/>plain<sp/>text<sp/>instead<sp/>of<sp/>HTML<sp/>input<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportTextInputFormFieldAsText(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(imagesDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.SaveHtmlWithOptions.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2367" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolderAlias</definition>
        <argsstring>() const</argsstring>
        <name>get_ImagesFolderAlias</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolderAlias</qualifiedname>
        <briefdescription>
<para>Specifies the name of the folder used to construct image URIs written into an HTML document. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para>When you save a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> in HTML format, Aspose.Words needs to save all images embedded in the document as standalone files. <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref> allows you to specify where the images will be saved and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> allows to specify how the image URIs will be constructed.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> is not an empty string, then the image URI written to HTML will be <emphasis>ImagesFolderAlias + &lt;image file name&gt;</emphasis>.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> is an empty string, then the image URI written to HTML will be <emphasis>ImagesFolder + &lt;image file name&gt;</emphasis>.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> is set to &apos;.&apos; (dot), then the image file name will be written to HTML without path regardless of other options.</para>
<para>Alternative way to specify the name of the folder to construct image URIs is to use <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolderAlias</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1fad0446faf123eefffbf5b0003f23ac" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImageSavingCallback</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2417" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a84415ca9aabd758629a416bbd3ee9cc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9eb4c5ed475b1520ae4f001dd9663246" kindref="member">Aspose::Words::Saving::HtmlMetafileFormat</ref></type>
        <definition>Aspose::Words::Saving::HtmlMetafileFormat Aspose::Words::Saving::HtmlSaveOptions::get_MetafileFormat</definition>
        <argsstring>() const</argsstring>
        <name>get_MetafileFormat</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_MetafileFormat</qualifiedname>
        <briefdescription>
<para>Specifies in what format metafiles are saved when exporting to HTML, MHTML, or EPUB. Default value is <ref refid="namespace_aspose_1_1_words_1_1_saving_1a9eb4c5ed475b1520ae4f001dd9663246af8fd4f1b5b05c6b1cc6a661141fd4f54" kindref="member">Png</ref>, meaning that metafiles are rendered to raster PNG images. </para>
        </briefdescription>
        <detaileddescription>
<para>Metafiles are not natively displayed by HTML browsers. By default, Aspose.Words converts WMF and EMF images into PNG files when exporting to HTML. Other options are to convert metafiles to SVG images or to export them as is without conversion.</para>
<para>Some image transforms, in particular image cropping, will not be applied to metafile images if they are exported to HTML without conversion.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adb618046819b5f1a5f09683b94a11ad1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImageResolution</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ScaleImageToShapeSize</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to convert SVG objects to a different format when saving HTML documents. <programlisting><codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>html<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;html&gt;\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;svg<sp/>xmlns=&apos;http://www.w3.org/2000/svg&apos;<sp/>width=&apos;500&apos;<sp/>height=&apos;40&apos;<sp/>viewBox=&apos;0<sp/>0<sp/>500<sp/>40&apos;&gt;\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;text<sp/>x=&apos;0&apos;<sp/>y=&apos;35&apos;<sp/>font-family=&apos;Verdana&apos;<sp/>font-size=&apos;35&apos;&gt;Hello<sp/>world!&lt;/text&gt;\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/svg&gt;\r\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;/html&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>&apos;ConvertSvgToEmf&apos;<sp/>to<sp/>turn<sp/>back<sp/>the<sp/>legacy<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>where<sp/>all<sp/>SVG<sp/>images<sp/>loaded<sp/>from<sp/>an<sp/>HTML<sp/>document<sp/>were<sp/>converted<sp/>to<sp/>EMF.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>SVG<sp/>images<sp/>are<sp/>loaded<sp/>without<sp/>conversion</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>MS<sp/>Word<sp/>version<sp/>specified<sp/>in<sp/>load<sp/>options<sp/>supports<sp/>SVG<sp/>images<sp/>natively.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;HtmlLoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_ConvertSvgToEmf(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MakeObject&lt;System::IO::MemoryStream&gt;(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>()-&gt;GetBytes(html)),<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>document<sp/>contains<sp/>a<sp/>&lt;svg&gt;<sp/>element<sp/>in<sp/>the<sp/>form<sp/>of<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>how<sp/>the<sp/>saving<sp/>operation<sp/>handles<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;MetafileFormat&quot;<sp/>property<sp/>to<sp/>&quot;HtmlMetafileFormat.Png&quot;<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>PNG<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;MetafileFormat&quot;<sp/>property<sp/>to<sp/>&quot;HtmlMetafileFormat.Svg&quot;<sp/>preserve<sp/>it<sp/>as<sp/>a<sp/>SVG<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;MetafileFormat&quot;<sp/>property<sp/>to<sp/>&quot;HtmlMetafileFormat.EmfOrWmf&quot;<sp/>to<sp/>convert<sp/>it<sp/>to<sp/>a<sp/>metafile.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_MetafileFormat(htmlMetafileFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.MetafileFormat.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.MetafileFormat.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(htmlMetafileFormat)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9eb4c5ed475b1520ae4f001dd9663246af8fd4f1b5b05c6b1cc6a661141fd4f54" kindref="member" tooltip="Metafiles are rendered to raster PNG images.">HtmlMetafileFormat::Png</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.MetafileFormat.001.png\&quot;<sp/>width=\&quot;500\&quot;<sp/>height=\&quot;40\&quot;<sp/>alt=\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;style=\&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9eb4c5ed475b1520ae4f001dd9663246a1a9a612a14f347adfbf122cc7c0e985b" kindref="member" tooltip="Metafiles are converted to vector SVG images.">HtmlMetafileFormat::Svg</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;svg<sp/>xmlns=\&quot;http://www.w3.org/2000/svg\&quot;<sp/>xmlns:xlink=\&quot;http://www.w3.org/1999/xlink\&quot;<sp/>version=\&quot;1.1\&quot;<sp/>width=\&quot;499\&quot;<sp/>height=\&quot;40\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9eb4c5ed475b1520ae4f001dd9663246aa127048d7a0d35c8c37f1d888b7d465f" kindref="member" tooltip="Metafiles are saved as is, without conversion.">HtmlMetafileFormat::EmfOrWmf</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:0pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.MetafileFormat.001.emf\&quot;<sp/>width=\&quot;500\&quot;<sp/>height=\&quot;40\&quot;<sp/>alt=\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;style=\&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1389" column="50"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa2c0c7663271d7c0779368688ac74a32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a1316692d4f8b98a8c033fd5a34bcfbbf" kindref="member">Aspose::Words::Saving::HtmlOfficeMathOutputMode</ref></type>
        <definition>Aspose::Words::Saving::HtmlOfficeMathOutputMode Aspose::Words::Saving::HtmlSaveOptions::get_OfficeMathOutputMode</definition>
        <argsstring>() const</argsstring>
        <name>get_OfficeMathOutputMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_OfficeMathOutputMode</qualifiedname>
        <briefdescription>
<para>Controls how OfficeMath objects are exported to HTML, MHTML or EPUB. Default value is <computeroutput>HtmlOfficeMathOutputMode.Image</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify how to export Microsoft OfficeMath objects to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Office<sp/>math.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>determine<sp/>how<sp/>the<sp/>saving<sp/>operation<sp/>handles<sp/>OfficeMath<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;OfficeMathOutputMode&quot;<sp/>property<sp/>to<sp/>&quot;HtmlOfficeMathOutputMode.Image&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>render<sp/>each<sp/>OfficeMath<sp/>object<sp/>into<sp/>an<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;OfficeMathOutputMode&quot;<sp/>property<sp/>to<sp/>&quot;HtmlOfficeMathOutputMode.MathML&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>convert<sp/>each<sp/>OfficeMath<sp/>object<sp/>into<sp/>MathML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;OfficeMathOutputMode&quot;<sp/>property<sp/>to<sp/>&quot;HtmlOfficeMathOutputMode.Text&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>represent<sp/>each<sp/>OfficeMath<sp/>formula<sp/>using<sp/>plain<sp/>HTML<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_OfficeMathOutputMode(htmlOfficeMathOutputMode);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.OfficeMathOutputMode.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.OfficeMathOutputMode.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(htmlOfficeMathOutputMode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a1316692d4f8b98a8c033fd5a34bcfbbfabe53a0541a6d36f6ecb879fa2c584b08" kindref="member" tooltip="OfficeMath is converted to HTML as image specified by &lt;img&gt; tag.">HtmlOfficeMathOutputMode::Image</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.text.regular_expressions.regex/_1a80bbc92cafa9d727e9c5e125a2d21585" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::RegularExpressions::Regex::Match</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:10pt\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;img<sp/>src=\&quot;HtmlSaveOptions.OfficeMathOutputMode.001.png\&quot;<sp/>width=\&quot;159\&quot;<sp/>height=\&quot;19\&quot;<sp/>alt=\&quot;\&quot;<sp/>style=\&quot;vertical-align:middle;<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-left-pos:0pt;<sp/>-aw-rel-hpos:column;<sp/>-aw-rel-vpos:paragraph;<sp/>-aw-top-pos:0pt;<sp/>-aw-wrap-type:inline\&quot;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;get_Success());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a1316692d4f8b98a8c033fd5a34bcfbbfa0bfc3f1e7b0d3f60d5fbf1e001aafb55" kindref="member" tooltip="OfficeMath is converted to HTML using MathML.">HtmlOfficeMathOutputMode::MathML</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(<ref refid="class/system.text.regular_expressions.regex/_1a80bbc92cafa9d727e9c5e125a2d21585" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::RegularExpressions::Regex::Match</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\&quot;margin-top:0pt;<sp/>margin-bottom:10pt;<sp/>text-align:center\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;math<sp/>xmlns=\&quot;http://www.w3.org/1998/Math/MathML\&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;mi&gt;i&lt;/mi&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;mo&gt;[+]&lt;/mo&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;mi&gt;b&lt;/mi&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;mo&gt;-&lt;/mo&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;mi&gt;c&lt;/mi&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;mo&gt;≥&lt;/mo&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;.*&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/math&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;get_Success());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a1316692d4f8b98a8c033fd5a34bcfbbfa9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="OfficeMath is converted to HTML as sequence of runs specified by &lt;span&gt; tags.">HtmlOfficeMathOutputMode::Text</ref>:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(<ref refid="class/system.text.regular_expressions.regex/_1a80bbc92cafa9d727e9c5e125a2d21585" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::RegularExpressions::Regex::Match</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;&lt;p<sp/>style=\\\&quot;margin-top:0pt;<sp/>margin-bottom:10pt;<sp/>text-align:center\\\&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;span<sp/>style=\\\&quot;font-family:&apos;Cambria<sp/>Math&apos;\\\&quot;&gt;i[+]b-c≥iM[+]bM-cM<sp/>&lt;/span&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;/p&gt;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;get_Success());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2783" column="56"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6926d29b189e448cd45204d6eb6941b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ResolveFontNames</definition>
        <argsstring>() const</argsstring>
        <name>get_ResolveFontNames</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ResolveFontNames</qualifiedname>
        <briefdescription>
<para>Specifies whether font family names used in the document are resolved and substituted according to <ref refid="class_aspose_1_1_words_1_1_document_1ae14f8d8796557559e973fae7ab88ac8d" kindref="member">FontSettings</ref> when being written into HTML-based formats. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, this option is set to <computeroutput>false</computeroutput> and font family names are written to HTML as specified in source documents. That is, <ref refid="class_aspose_1_1_words_1_1_document_1ae14f8d8796557559e973fae7ab88ac8d" kindref="member">FontSettings</ref> are ignored and no resolution or substitution of font family names is performed.</para>
<para>If this option is set to <computeroutput>true</computeroutput>, Aspose.Words uses <ref refid="class_aspose_1_1_words_1_1_document_1ae14f8d8796557559e973fae7ab88ac8d" kindref="member">FontSettings</ref> to resolve each font family name specified in a source document into the name of an available font family, performing font substitution as required. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2890" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</definition>
        <argsstring>() const</argsstring>
        <name>get_ResourceFolder</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</qualifiedname>
        <briefdescription>
<para>Specifies a physical folder where all resources like images, fonts, and external CSS are saved when a document is exported to HTML. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> is the simplest way to specify a folder where all resources should be written. Another way is to use individual properties <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref>, <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref>, and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" kindref="member">CssStyleSheetFileName</ref>.</para>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> has a lower priority than folders specified via <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref>, <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">ImagesFolder</ref>, and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" kindref="member">CssStyleSheetFileName</ref>. For example, if both <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref> are specified, fonts will be saved to <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">FontsFolder</ref>, while images and CSS will be saved to <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref>.</para>
<para>If the folder specified by <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> doesn&apos;t exist, it will be created automatically.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetFileName</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2012" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolderAlias</definition>
        <argsstring>() const</argsstring>
        <name>get_ResourceFolderAlias</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolderAlias</qualifiedname>
        <briefdescription>
<para>Specifies the name of the folder used to construct URIs of all resources written into an HTML document. Default is an empty string. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref> is the simplest way to specify how URIs for all resource files should be constructed. Same information can be specified for images and fonts separately via <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref> and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> properties, respectively. However, there is no individual property for CSS.</para>
<para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref> has lower priority than <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">ImagesFolderAlias</ref>. For example, if both <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref> and <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref> are specified, fonts&apos; URIs will be constructed using <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">FontsFolderAlias</ref>, while URIs of images and CSS will be constructed using <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref>.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref> is empty, the <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">ResourceFolder</ref> property value will be used to construct resource URIs.</para>
<para>If <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">ResourceFolderAlias</ref> is set to &apos;.&apos; (dot), resource URIs will contain file names only, without any path.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolderAlias</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolderAlias</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set folders and folder aliases for externally saved resources that Aspose.Words will create when saving a document to HTML. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_CssStyleSheetType(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0ab206a1b4ea1097761f78e8876f6da779" kindref="member" tooltip="CSS styles are written separately from the content in a style sheet in an external file....">CssStyleSheetType::External</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportFontResources(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImageResolution(72);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontResourcesSubsettingSizeThreshold(0);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_FontsFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/fonts&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/images&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ResourceFolderAlias(u</highlight><highlight class="stringliteral">&quot;http://example.com/resources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportOriginalUrlForLinkedImages(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.FolderAlias.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2061" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa895246fb972053c3a63f3e944f3efec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
        <definition>Aspose::Words::SaveFormat Aspose::Words::Saving::HtmlSaveOptions::get_SaveFormat</definition>
        <argsstring>() override</argsstring>
        <name>get_SaveFormat</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_SaveFormat</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a6df9e8d37cc7794640ea5c5932134253">get_SaveFormat</reimplements>
        <briefdescription>
<para>Specifies the format in which the document will be saved if this save options object is used. Can be <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member">Html</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member">Mhtml</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member">Epub</ref> or <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5f432cf9f04ad9b9c20d41651e6689fe" kindref="member">Azw3</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a specific encoding when saving a document to .epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>specify<sp/>the<sp/>encoding<sp/>for<sp/>a<sp/>document<sp/>that<sp/>we<sp/>will<sp/>save.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_SaveFormat(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>output<sp/>.epub<sp/>document<sp/>will<sp/>have<sp/>all<sp/>its<sp/>contents<sp/>in<sp/>one<sp/>HTML<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>split<sp/>criterion<sp/>allows<sp/>us<sp/>to<sp/>segment<sp/>the<sp/>document<sp/>into<sp/>several<sp/>HTML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>set<sp/>the<sp/>criteria<sp/>to<sp/>split<sp/>the<sp/>document<sp/>into<sp/>heading<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>readers<sp/>who<sp/>cannot<sp/>read<sp/>HTML<sp/>files<sp/>more<sp/>significant<sp/>than<sp/>a<sp/>specific<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>that<sp/>we<sp/>want<sp/>to<sp/>export<sp/>document<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportDocumentProperties(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.Doc2EpubSaveOptions.epub&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="263" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Saving::HtmlSaveOptions::get_ScaleImageToShapeSize</definition>
        <argsstring>() const</argsstring>
        <name>get_ScaleImageToShapeSize</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_ScaleImageToShapeSize</qualifiedname>
        <briefdescription>
<para>Specifies whether images are scaled by Aspose.Words to the bounding shape size when exporting to HTML, MHTML or EPUB. Default value is <computeroutput>true</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>An image in a Microsoft Word document is a shape. The shape has a size and the image has its own size. The sizes are not directly linked. For example, the image can be 1024x786 pixels, but shape that displays this image can be 400x300 points.</para>
<para>In order to display an image in the browser, it must be scaled to the shape size. The <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">ScaleImageToShapeSize</ref> property controls where the scaling of the image takes place: in Aspose.Words during export to HTML or in the browser when displaying the document.</para>
<para>When <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">ScaleImageToShapeSize</ref> is <computeroutput>true</computeroutput>, the image is scaled by <ref refid="namespace_aspose_1_1_words" kindref="compound">Aspose.Words</ref> using high quality scaling during export to HTML. When <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">ScaleImageToShapeSize</ref> is <computeroutput>false</computeroutput>, the image is output with its original size and the browser has to scale it.</para>
<para>In general, browsers do quick and poor quality scaling. As a result, you will normally get better display quality in the browser and smaller file size when <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">ScaleImageToShapeSize</ref> is <computeroutput>true</computeroutput>, but better printing quality and faster conversion when <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">ScaleImageToShapeSize</ref> is <computeroutput>false</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adb618046819b5f1a5f09683b94a11ad1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImageResolution</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to disable the scaling of images to their parent shape dimensions when saving to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>shape<sp/>which<sp/>contains<sp/>an<sp/>image,<sp/>and<sp/>then<sp/>make<sp/>that<sp/>shape<sp/>considerably<sp/>smaller<sp/>than<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;System::Drawing::Image&gt;<sp/>image<sp/>=<sp/><ref refid="class/system.drawing.image/_1a744ad35e2fcb00393fb7ce4e24e59263" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Image::FromFile</ref>(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Transparent<sp/>background<sp/>logo.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(400,<sp/>image-&gt;get_Size().get_Width());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(400,<sp/>image-&gt;get_Size().get_Height());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Shape&gt;<sp/>imageShape<sp/>=<sp/>builder-&gt;InsertImage(image);</highlight></codeline>
<codeline><highlight class="normal">imageShape-&gt;set_Width(50);</highlight></codeline>
<codeline><highlight class="normal">imageShape-&gt;set_Height(50);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Saving<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>shapes<sp/>with<sp/>images<sp/>to<sp/>HTML<sp/>will<sp/>create<sp/>an<sp/>image<sp/>file<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>such<sp/>shape.<sp/>The<sp/>output<sp/>HTML<sp/>document<sp/>will<sp/>use<sp/>&lt;image&gt;<sp/>tags<sp/>to<sp/>link<sp/>to<sp/>and<sp/>display<sp/>these<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>the<sp/>document<sp/>to<sp/>HTML,<sp/>we<sp/>can<sp/>pass<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>determine</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>whether<sp/>to<sp/>scale<sp/>all<sp/>images<sp/>that<sp/>are<sp/>inside<sp/>shapes<sp/>to<sp/>the<sp/>sizes<sp/>of<sp/>their<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;ScaleImageToShapeSize&quot;<sp/>flag<sp/>to<sp/>&quot;true&quot;<sp/>will<sp/>shrink<sp/>every<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>shape<sp/>that<sp/>contains<sp/>it,<sp/>so<sp/>that<sp/>no<sp/>saved<sp/>images<sp/>will<sp/>be<sp/>larger<sp/>than<sp/>the<sp/>document<sp/>requires<sp/>them<sp/>to<sp/>be.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>the<sp/>&quot;ScaleImageToShapeSize&quot;<sp/>flag<sp/>to<sp/>&quot;false&quot;<sp/>will<sp/>preserve<sp/>these<sp/>images&apos;<sp/>original<sp/>sizes,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>take<sp/>up<sp/>more<sp/>space<sp/>in<sp/>exchange<sp/>for<sp/>preserving<sp/>image<sp/>quality.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ScaleImageToShapeSize(scaleImageToShapeSize);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ScaleImageToShapeSize.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fileInfo<sp/>=<sp/>MakeObject&lt;System::IO::FileInfo&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.ScaleImageToShapeSize.001.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2644" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2395d89ea36442424067fbb1315ffc98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9" kindref="member">Aspose::Words::Saving::HtmlElementSizeOutputMode</ref></type>
        <definition>Aspose::Words::Saving::HtmlElementSizeOutputMode Aspose::Words::Saving::HtmlSaveOptions::get_TableWidthOutputMode</definition>
        <argsstring>() const</argsstring>
        <name>get_TableWidthOutputMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::get_TableWidthOutputMode</qualifiedname>
        <briefdescription>
<para>Controls how table, row and cell widths are exported to HTML, MHTML or EPUB. Default value is <ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member">All</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>In the HTML format, table, row and cell elements (<bold>%&lt;table&gt;</bold>, <bold>%&lt;tr&gt;</bold>, <bold>%&lt;th&gt;</bold>, <bold>%&lt;td&gt;</bold>) can have their widths specified either in relative (percentage) or in absolute units. In a document in Aspose.Words, tables, rows and cells can have their widths specified using either relative or absolute units too.</para>
<para>When you convert a document to HTML using Aspose.Words, you might want to control how table, row and cell widths are exported to affect how the resulting document is displayed in the visual agent (e.g. a browser or viewer).</para>
<para>Use this property as a filter to specify what table widths values are exported into the destination document. For example, if you are converting a document to EPUB and intend to view the document on a mobile reading device, then you probably want to avoid exporting absolute width values. To do this you need to specify the output mode <ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9a9aa4e1861600ab4ca55905490de997eb" kindref="member">RelativeOnly</ref> or <ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9a6adf97f83acf6453d4a6a4b1070f3754" kindref="member">None</ref> so the viewer on the mobile device can layout the table to fit the width of the screen as best as it can.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to preserve negative indents in the output .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>table<sp/>with<sp/>a<sp/>negative<sp/>indent,<sp/>which<sp/>will<sp/>push<sp/>it<sp/>to<sp/>the<sp/>left<sp/>past<sp/>the<sp/>left<sp/>page<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Table&gt;<sp/>table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_LeftIndent(-36);</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_PreferredWidth(PreferredWidth::FromPoints(144));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2eac3316c9c335ce5fa8638df2fc5d518d4" kindref="member" tooltip="Break between paragraphs.">BreakType::ParagraphBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>table<sp/>with<sp/>a<sp/>positive<sp/>indent,<sp/>which<sp/>will<sp/>push<sp/>the<sp/>table<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">table<sp/>=<sp/>builder-&gt;StartTable();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertCell();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Row<sp/>1,<sp/>Cell<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndTable();</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_LeftIndent(36);</highlight></codeline>
<codeline><highlight class="normal">table-&gt;set_PreferredWidth(PreferredWidth::FromPoints(144));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>save<sp/>a<sp/>document<sp/>to<sp/>HTML,<sp/>Aspose.Words<sp/>will<sp/>only<sp/>preserve<sp/>negative<sp/>indents</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>the<sp/>one<sp/>we<sp/>have<sp/>applied<sp/>to<sp/>the<sp/>first<sp/>table<sp/>if<sp/>we<sp/>set<sp/>the<sp/>&quot;AllowNegativeIndent&quot;<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>SaveOptions<sp/>object<sp/>that<sp/>we<sp/>will<sp/>pass<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_AllowNegativeIndent(allowNegativeIndent);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_TableWidthOutputMode(<ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9a9aa4e1861600ab4ca55905490de997eb" kindref="member" tooltip="Element sizes are exported only if they are specified in relative units in the document....">HtmlElementSizeOutputMode::RelativeOnly</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.NegativeIndent.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outDocContents<sp/>=<sp/><ref refid="class/system.i_o.file/_1a44b456da9461cd60c432ed0efac1e6d8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllText</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.NegativeIndent.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowNegativeIndent)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;margin-left:-41.65pt;<sp/>border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;margin-left:30.35pt;<sp/>border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outDocContents.Contains(u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(outDocContents.Contains(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;&lt;table<sp/>cellspacing=\&quot;0\&quot;<sp/>cellpadding=\&quot;0\&quot;<sp/>style=\&quot;margin-left:30.35pt;<sp/>border:0.75pt<sp/>solid<sp/>#000000;<sp/>-aw-border:0.5pt<sp/>single;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;-aw-border-insideh:0.5pt<sp/>single<sp/>#000000;<sp/>-aw-border-insidev:0.5pt<sp/>single<sp/>#000000;<sp/>border-collapse:collapse\&quot;&gt;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2727" column="57"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1a4b31e8d5e2225dfc847dc459d35995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_AllowNegativeIndent</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_AllowNegativeIndent</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_AllowNegativeIndent</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9f855205143e9424f6bda726f0e518dd" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_AllowNegativeIndent</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="337" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a51b95c1f087edec34b0e92f47c56b691" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_CssClassNamePrefix</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_CssClassNamePrefix</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_CssClassNamePrefix</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1abe234d6feed09dc1bd141adc1b7e2cb6" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssClassNamePrefix</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="534" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6c58daf1272760670077664f22b79b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_CssSavingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Saving::ICssSavingCallback &gt; &amp;value)</argsstring>
        <name>set_CssSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_CssSavingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_css_saving_callback" kindref="compound">Aspose::Words::Saving::ICssSavingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6a5625b40f58df39564f08f9eefbe57b" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssSavingCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="731" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9bae9b053786796d08bccece7f9900f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_CssStyleSheetFileName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_CssStyleSheetFileName</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_CssStyleSheetFileName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetFileName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="422" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a3cba12d832409ae3b389f35d5396ed42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_CssStyleSheetType</definition>
        <argsstring>(Aspose::Words::Saving::CssStyleSheetType value)</argsstring>
        <name>set_CssStyleSheetType</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_CssStyleSheetType</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9e298505d9b6f2eeda205342d52692b0" kindref="member">Aspose::Words::Saving::CssStyleSheetType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0d0a6686ce68066c2281fe2d854758ad" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_CssStyleSheetType</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="496" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab1ebb0456e33e4ed5242f53fe0dd15b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_DocumentPartSavingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Saving::IDocumentPartSavingCallback &gt; &amp;value)</argsstring>
        <name>set_DocumentPartSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_DocumentPartSavingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_document_part_saving_callback" kindref="compound">Aspose::Words::Saving::IDocumentPartSavingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa97d90dadf11005be9c6c683c72d8856" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentPartSavingCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="666" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab9a6b630e6a32c956abfd3812d59412c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_DocumentSplitCriteria</definition>
        <argsstring>(Aspose::Words::Saving::DocumentSplitCriteria value)</argsstring>
        <name>set_DocumentSplitCriteria</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_DocumentSplitCriteria</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member">Aspose::Words::Saving::DocumentSplitCriteria</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af23548aa91432c2c0c6f63be12e653d4" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitCriteria</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="773" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9b1479cdaaf86cdf13c3eb82de1572af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_DocumentSplitHeadingLevel</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_DocumentSplitHeadingLevel</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_DocumentSplitHeadingLevel</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad59118a2a555868ddf111e66eddc03ca" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_DocumentSplitHeadingLevel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="844" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aeaff76bac9cf6b0148a2b95a8206969b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_Encoding</definition>
        <argsstring>(const System::SharedPtr&lt; System::Text::Encoding &gt; &amp;value)</argsstring>
        <name>set_Encoding</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_Encoding</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.text.encoding/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aee4bc6780a8ffd3cfe5530df8eed65ad" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_Encoding</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="874" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a43f6d1fa77ffa568e511b2cbec43ae41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_EpubNavigationMapLevel</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_EpubNavigationMapLevel</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_EpubNavigationMapLevel</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a25efc3be72c2bee8b4ec1143c7e03af8" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_EpubNavigationMapLevel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="925" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1545aa5b0e44790a7cd3d71b4464c065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportCidUrlsForMhtmlResources</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportCidUrlsForMhtmlResources</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportCidUrlsForMhtmlResources</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a27de60d4cec114bf97e9cdd6019d0155" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportCidUrlsForMhtmlResources</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2878" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a01cec28c50ed0d90eb7accd4535581e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportDocumentProperties</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportDocumentProperties</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportDocumentProperties</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa3adb4ef38ee5167ef468e233299e4e2" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportDocumentProperties</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="955" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab2a20b5763192048f95361b5328cdd28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportDropDownFormFieldAsText</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportDropDownFormFieldAsText</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportDropDownFormFieldAsText</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9fcd99c68d72d5edbaf218f8474e73a2" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportDropDownFormFieldAsText</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1700" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab5bfb37917137146b298a9407b49a662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportFontResources</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportFontResources</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportFontResources</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontResources</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1046" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a531df8410c938d66949b21bc90b567ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportFontsAsBase64</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportFontsAsBase64</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportFontsAsBase64</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa1439577562a1a9d045a6c80eda4f578" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportFontsAsBase64</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1086" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f3156583e2218547a136e5e040da165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportHeadersFootersMode</definition>
        <argsstring>(Aspose::Words::Saving::ExportHeadersFootersMode value)</argsstring>
        <name>set_ExportHeadersFootersMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportHeadersFootersMode</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a304436b45e352edf3390ed39156b188a" kindref="member">Aspose::Words::Saving::ExportHeadersFootersMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f1b34fd1e1c6dcba07f80bf31a04540" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportHeadersFootersMode</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1129" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9332c2f0a0fb4033b33a2ef3c0d96553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportImagesAsBase64</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportImagesAsBase64</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportImagesAsBase64</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac31cb0638ccc73cec1acdea99363f0d5" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportImagesAsBase64</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1169" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0ee5a278180b4d84561c505af03d6c20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportLanguageInformation</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportLanguageInformation</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportLanguageInformation</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1afd21b1e23400769165c337e66619a7f3" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportLanguageInformation</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1224" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a331f6c0db3343ecbf8ffc6e28acc1a3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportListLabels</definition>
        <argsstring>(Aspose::Words::Saving::ExportListLabels value)</argsstring>
        <name>set_ExportListLabels</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportListLabels</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a66cd463fe9f5d741ccead0c92a630272" kindref="member">Aspose::Words::Saving::ExportListLabels</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af6b948d8f9a84e96024899b81f45b5a5" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportListLabels</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1321" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aad4f03b6adf4c36ae359aa6bb421d6f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportOriginalUrlForLinkedImages</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportOriginalUrlForLinkedImages</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportOriginalUrlForLinkedImages</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab92617acb48775a6808cdfa119231b7b" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportOriginalUrlForLinkedImages</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2824" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a23e373e434e00ed8933279de00b5764c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportPageMargins</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportPageMargins</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportPageMargins</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae04c56cc9a55c736a1ab5918b1ce5e80" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportPageMargins</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1502" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a161b7255768e6ec13ae7d2a5f19ff442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportPageSetup</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportPageSetup</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportPageSetup</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0652fef82d977fc7642bfa1b5244c41b" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportPageSetup</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1453" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a31066517f45533bf7cbc03f32492e6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportRelativeFontSize</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportRelativeFontSize</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportRelativeFontSize</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75f62a5a25e49521bc4e477d8dc1e23a" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportRelativeFontSize</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1568" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0e9928f9b81ed67ff671c60f0bf01a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportRoundtripInformation</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportRoundtripInformation</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportRoundtripInformation</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a7fe0a32e742927a323a1a7c087b3cc0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportRoundtripInformation</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1971" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae95b4eb5a3da381d395cf07c9afa4727" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportShapesAsSvg</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportShapesAsSvg</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportShapesAsSvg</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab3ff9253ac8773483633aa4af1e31131" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportShapesAsSvg</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1654" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad82cb4ac6f5654da5843716dd6d4e7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportTextInputFormFieldAsText</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportTextInputFormFieldAsText</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportTextInputFormFieldAsText</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a050c08aee078e4c8d9693fb973d9f156" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportTextInputFormFieldAsText</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1604" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8115af85664debf9a8930345d3bf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportTocPageNumbers</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportTocPageNumbers</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportTocPageNumbers</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a660e73dbc6030fdad2bf8c5cf8ccfb52" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportTocPageNumbers</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1759" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aee5a142462149fb6546999176ed64f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ExportXhtmlTransitional</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ExportXhtmlTransitional</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ExportXhtmlTransitional</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aed2872b56172d48033db769352711dcd" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ExportXhtmlTransitional</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1819" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a382caf8e86a90f84ebaec7ccb7f30586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_FontResourcesSubsettingSizeThreshold</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_FontResourcesSubsettingSizeThreshold</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_FontResourcesSubsettingSizeThreshold</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1add89277511fce7088ef8f275c1bafe34" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontResourcesSubsettingSizeThreshold</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2245" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a77f4c06ce722fae51410b4f67c74a73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_FontSavingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Saving::IFontSavingCallback &gt; &amp;value)</argsstring>
        <name>set_FontSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_FontSavingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_font_saving_callback" kindref="compound">Aspose::Words::Saving::IFontSavingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a880c85d68ac40402c59f81ac077328a8" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontSavingCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2318" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a339e75f20f6aea400c385922be504617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_FontsFolder</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_FontsFolder</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_FontsFolder</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2116" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a76f0df2e71ad5e94a59ff95b306dd6d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_FontsFolderAlias</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_FontsFolderAlias</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_FontsFolderAlias</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_FontsFolderAlias</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2167" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a909f8f13b089a754efeae774c0c273c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_HtmlVersion</definition>
        <argsstring>(Aspose::Words::Saving::HtmlVersion value)</argsstring>
        <name>set_HtmlVersion</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_HtmlVersion</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a086cb2dea649972f2a6927c090e77034" kindref="member">Aspose::Words::Saving::HtmlVersion</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa5ef1ab52004a90c011a1807db98d825" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_HtmlVersion</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1889" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a45cdf96a2fe01d6738e1e8cdf82295cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ImageResolution</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_ImageResolution</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ImageResolution</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adb618046819b5f1a5f09683b94a11ad1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImageResolution</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2456" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8800097bfbac34d19112c91d91f7f2ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ImageSavingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Saving::IImageSavingCallback &gt; &amp;value)</argsstring>
        <name>set_ImageSavingCallback</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ImageSavingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_saving_1_1_i_image_saving_callback" kindref="compound">Aspose::Words::Saving::IImageSavingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1fad0446faf123eefffbf5b0003f23ac" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImageSavingCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2588" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a81ffe10917a8c70e8beb1646a4cc8acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ImagesFolder</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ImagesFolder</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ImagesFolder</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2370" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9096f7e546a51cfdcb92ad23131f968c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ImagesFolderAlias</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ImagesFolderAlias</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ImagesFolderAlias</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ImagesFolderAlias</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2420" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af82fc83c021aa770a005d29da0b7f9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_MetafileFormat</definition>
        <argsstring>(Aspose::Words::Saving::HtmlMetafileFormat value)</argsstring>
        <name>set_MetafileFormat</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_MetafileFormat</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a9eb4c5ed475b1520ae4f001dd9663246" kindref="member">Aspose::Words::Saving::HtmlMetafileFormat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a84415ca9aabd758629a416bbd3ee9cc8" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_MetafileFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="1392" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad52d12c5f3d7a2fc5a0764e34e95aebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_OfficeMathOutputMode</definition>
        <argsstring>(Aspose::Words::Saving::HtmlOfficeMathOutputMode value)</argsstring>
        <name>set_OfficeMathOutputMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_OfficeMathOutputMode</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1a1316692d4f8b98a8c033fd5a34bcfbbf" kindref="member">Aspose::Words::Saving::HtmlOfficeMathOutputMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa2c0c7663271d7c0779368688ac74a32" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_OfficeMathOutputMode</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2786" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8026e5cfb96ab4fe030f923e3fb61d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ResolveFontNames</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ResolveFontNames</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ResolveFontNames</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6926d29b189e448cd45204d6eb6941b5" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResolveFontNames</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2893" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a05eaf9ad470015f270a5206b2dcac770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ResourceFolder</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ResourceFolder</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ResourceFolder</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2015" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a3764c36801a1b26c44217024e42f1b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ResourceFolderAlias</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ResourceFolderAlias</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ResourceFolderAlias</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ResourceFolderAlias</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2064" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a56c2d8508c9d220fc4f3034511640223" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_SaveFormat</definition>
        <argsstring>(Aspose::Words::SaveFormat value) override</argsstring>
        <name>set_SaveFormat</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_SaveFormat</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a75d9ec81ad960179eba172764d2c60b9">set_SaveFormat</reimplements>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa895246fb972053c3a63f3e944f3efec" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_SaveFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="266" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a362019732c95aa2ac33046f88ede1d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_ScaleImageToShapeSize</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ScaleImageToShapeSize</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_ScaleImageToShapeSize</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_ScaleImageToShapeSize</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2647" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1abcd6f3edbd39bee21bd5464dbcdf3573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Saving::HtmlSaveOptions::set_TableWidthOutputMode</definition>
        <argsstring>(Aspose::Words::Saving::HtmlElementSizeOutputMode value)</argsstring>
        <name>set_TableWidthOutputMode</name>
        <qualifiedname>Aspose::Words::Saving::HtmlSaveOptions::set_TableWidthOutputMode</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_saving_1aa43d6b465eeb41d4f26823dd672041a9" kindref="member">Aspose::Words::Saving::HtmlElementSizeOutputMode</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2395d89ea36442424067fbb1315ffc98" kindref="member">Aspose::Words::Saving::HtmlSaveOptions::get_TableWidthOutputMode</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="2730" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Can be used to specify additional options when saving a document into the <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member">Html</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member">Mhtml</ref>, <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member">Epub</ref> or <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5f432cf9f04ad9b9c20d41651e6689fe" kindref="member">Azw3</ref> format. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a specific encoding when saving a document to .epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>specify<sp/>the<sp/>encoding<sp/>for<sp/>a<sp/>document<sp/>that<sp/>we<sp/>will<sp/>save.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_SaveFormat(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a95985d0da959aa35a89574de5fb4bfd8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF8</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>output<sp/>.epub<sp/>document<sp/>will<sp/>have<sp/>all<sp/>its<sp/>contents<sp/>in<sp/>one<sp/>HTML<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>split<sp/>criterion<sp/>allows<sp/>us<sp/>to<sp/>segment<sp/>the<sp/>document<sp/>into<sp/>several<sp/>HTML<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>set<sp/>the<sp/>criteria<sp/>to<sp/>split<sp/>the<sp/>document<sp/>into<sp/>heading<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>readers<sp/>who<sp/>cannot<sp/>read<sp/>HTML<sp/>files<sp/>more<sp/>significant<sp/>than<sp/>a<sp/>specific<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07a33a0de7ec0060653e6a8f963f2b0aa22" kindref="member" tooltip="The document is split into parts at a paragraph formatted using a heading style Heading 1,...">DocumentSplitCriteria::HeadingParagraph</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>that<sp/>we<sp/>want<sp/>to<sp/>export<sp/>document<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_ExportDocumentProperties(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.Doc2EpubSaveOptions.epub&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
</programlisting></para>
<para>Shows how to specify the folder for storing linked images after saving to .html. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imagesDir<sp/>=<sp/><ref refid="class/system.i_o.path/_1a29adb2a8493ae80f056243b88dbf4de7" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::Combine</ref>(ArtifactsDir,<sp/>u</highlight><highlight class="stringliteral">&quot;SaveHtmlWithOptions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class/system.i_o.directory/_1a8898c7613b377294f56ca21ff2de72e2" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::Exists</ref>(imagesDir))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.directory/_1a8c695f303996f8d22e79189c219fd147" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::Delete</ref>(imagesDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.i_o.directory/_1a2fdf34c13286610724abbd6207d618d7" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::CreateDirectory_</ref>(imagesDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>an<sp/>option<sp/>to<sp/>export<sp/>form<sp/>fields<sp/>as<sp/>plain<sp/>text<sp/>instead<sp/>of<sp/>HTML<sp/>input<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ExportTextInputFormFieldAsText(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_ImagesFolder(imagesDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlSaveOptions.SaveHtmlWithOptions.html&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
</programlisting></para>
<para>Shows how to split a document into parts and save them. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DocumentPartsFileNames()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outFileName<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;SavingCallback.DocumentPartsFileNames.html&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>&quot;HtmlFixedSaveOptions&quot;<sp/>object,<sp/>which<sp/>we<sp/>can<sp/>pass<sp/>to<sp/>the<sp/>document&apos;s<sp/>&quot;Save&quot;<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>modify<sp/>how<sp/>we<sp/>convert<sp/>the<sp/>document<sp/>to<sp/>HTML.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;HtmlSaveOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>save<sp/>the<sp/>document<sp/>normally,<sp/>there<sp/>will<sp/>be<sp/>one<sp/>output<sp/>HTML</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>document<sp/>with<sp/>all<sp/>the<sp/>source<sp/>document&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>&quot;DocumentSplitCriteria&quot;<sp/>property<sp/>to<sp/>&quot;DocumentSplitCriteria.SectionBreak&quot;<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>our<sp/>document<sp/>to<sp/>multiple<sp/>HTML<sp/>files:<sp/>one<sp/>for<sp/>each<sp/>section.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_DocumentSplitCriteria(<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07ac6788b2b9719f26994fd409d52a778fb" kindref="member" tooltip="The document is split into parts at a section break of any type.">DocumentSplitCriteria::SectionBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>custom<sp/>callback<sp/>to<sp/>the<sp/>&quot;DocumentPartSavingCallback&quot;<sp/>property<sp/>to<sp/>alter<sp/>the<sp/>document<sp/>part<sp/>saving<sp/>logic.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_DocumentPartSavingCallback(MakeObject&lt;ExSavingCallback::SavedDocumentPartRename&gt;(outFileName,<sp/>options-&gt;get_DocumentSplitCriteria()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>convert<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>images<sp/>into<sp/>html,<sp/>we<sp/>will<sp/>end<sp/>up<sp/>with<sp/>one<sp/>html<sp/>file<sp/>which<sp/>links<sp/>to<sp/>several<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>image<sp/>will<sp/>be<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>file<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>also<sp/>a<sp/>callback<sp/>that<sp/>can<sp/>customize<sp/>the<sp/>name<sp/>and<sp/>file<sp/>system<sp/>location<sp/>of<sp/>each<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_ImageSavingCallback(MakeObject&lt;ExSavingCallback::SavedImageRename&gt;(outFileName));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>outFileName,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">SavedDocumentPartRename<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IDocumentPartSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SavedDocumentPartRename(String<sp/>outFileName,<sp/>DocumentSplitCriteria<sp/>documentSplitCriteria)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mCount(0),<sp/>mDocumentSplitCriteria(((<ref refid="namespace_aspose" kindref="compound">Aspose</ref>::<ref refid="namespace_aspose_1_1_words_1aedb2afadc4813c7e4de736b7b7481c94a6f15b8d4b7287d60a8ea3d1c5cbadc84" kindref="member">Words</ref>::Saving::<ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member" tooltip="Specifies how the document is split into parts when saving to Html, Epub or Azw3 format.">DocumentSplitCriteria</ref>)0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutFileName<sp/>=<sp/>outFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDocumentSplitCriteria<sp/>=<sp/>documentSplitCriteria;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mOutFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_saving_1a21c39143a76e997332687767db80fc07" kindref="member" tooltip="Specifies how the document is split into parts when saving to Html, Epub or Azw3 format.">DocumentSplitCriteria</ref><sp/>mDocumentSplitCriteria;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DocumentPartSaving(SharedPtr&lt;DocumentPartSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>entire<sp/>source<sp/>document<sp/>via<sp/>the<sp/>&quot;Document&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_Document()-&gt;get_OriginalFileName().EndsWith(u</highlight><highlight class="stringliteral">&quot;Rendering.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>partType<sp/>=<sp/>String::Empty;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mDocumentSplitCriteria)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::PageBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Page&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::ColumnBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Column&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::SectionBreak:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Section&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DocumentSplitCriteria::HeadingParagraph:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partType<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>from<sp/>heading&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>partFileName<sp/>=<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>part<sp/>{1},<sp/>of<sp/>type<sp/>{2}{3}&quot;</highlight><highlight class="normal">,<sp/>mOutFileName,<sp/>++mCount,<sp/>partType,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.path/_1ae9e0f0c8b345ecfab2ca997411b81f97" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::GetExtension</ref>(args-&gt;get_DocumentPartFileName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>where<sp/>Aspose.Words<sp/>will<sp/>save<sp/>each<sp/>part<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>output<sp/>part<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_DocumentPartFileName(partFileName);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Create<sp/>a<sp/>custom<sp/>stream<sp/>for<sp/>the<sp/>output<sp/>part<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_DocumentPartStream(MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>partFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_DocumentPartStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepDocumentPartStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">SavedImageRename<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IImageSavingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SavedImageRename(String<sp/>outFileName)<sp/>:<sp/>mCount(0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutFileName<sp/>=<sp/>outFileName;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mOutFileName;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ImageSaving(SharedPtr&lt;ImageSavingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imageFileName<sp/>=<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>shape<sp/>{1},<sp/>of<sp/>type<sp/>{2}{3}&quot;</highlight><highlight class="normal">,<sp/>mOutFileName,<sp/>++mCount,<sp/>args-&gt;get_CurrentShape()-&gt;get_ShapeType(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class/system.i_o.path/_1ae9e0f0c8b345ecfab2ca997411b81f97" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::Path::GetExtension</ref>(args-&gt;get_ImageFileName()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>specifying<sp/>where<sp/>Aspose.Words<sp/>will<sp/>save<sp/>each<sp/>part<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Set<sp/>a<sp/>filename<sp/>for<sp/>the<sp/>output<sp/>image<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_ImageFileName(imageFileName);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Create<sp/>a<sp/>custom<sp/>stream<sp/>for<sp/>the<sp/>output<sp/>image<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;set_ImageStream(MakeObject&lt;System::IO::FileStream&gt;(ArtifactsDir<sp/>+<sp/>imageFileName,<sp/>System::IO::FileMode::Create));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_ImageStream()-&gt;get_CanWrite());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(args-&gt;get_IsImageAvailable());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(args-&gt;get_KeepImageStreamOpen());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Saving::HtmlSaveOptions</label>
        <link refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Saving::SaveOptions</label>
        <link refid="class_aspose_1_1_words_1_1_saving_1_1_save_options"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Saving::HtmlSaveOptions</label>
        <link refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Saving::SaveOptions</label>
        <link refid="class_aspose_1_1_words_1_1_saving_1_1_save_options"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" line="227" column="1" bodyfile="Aspose.Words.Cpp/Saving/HtmlSaveOptions.h" bodystart="228" bodyend="3017"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae7c86ffad1ebf9096a950265fb3017b2" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a5f8b7264160980e775d0ebc2bb87ec6d" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>CreateSaveOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a92aa5f878a1d0f3e06f620fd1376142f" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>CreateSaveOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a9fecca2156a70f1834bd1c913a129d47" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_AllowEmbeddingPostScriptFonts</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9f855205143e9424f6bda726f0e518dd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_AllowNegativeIndent</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1abe234d6feed09dc1bd141adc1b7e2cb6" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_CssClassNamePrefix</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6a5625b40f58df39564f08f9eefbe57b" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_CssSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2da9664fbb253c6d725b60088ef21423" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_CssStyleSheetFileName</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0d0a6686ce68066c2281fe2d854758ad" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_CssStyleSheetType</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1ab9a4c7be9e7070ecbd5248bf01535ef3" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_CustomTimeZoneInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a327b0f9146d84c39d72f09dffb55970d" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_DefaultTemplate</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1ac309d37b349e0fd18de204c4b3493113" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_Dml3DEffectsRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a0ad6a41669029f8bcb5d56ccd8eb1f25" prot="public" virt="virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_DmlEffectsRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a40d3faab0e88622c6fac579bbc050772" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_DmlRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa97d90dadf11005be9c6c683c72d8856" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_DocumentPartSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af23548aa91432c2c0c6f63be12e653d4" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_DocumentSplitCriteria</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad59118a2a555868ddf111e66eddc03ca" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_DocumentSplitHeadingLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aee4bc6780a8ffd3cfe5530df8eed65ad" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_Encoding</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a25efc3be72c2bee8b4ec1143c7e03af8" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_EpubNavigationMapLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a27de60d4cec114bf97e9cdd6019d0155" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportCidUrlsForMhtmlResources</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa3adb4ef38ee5167ef468e233299e4e2" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportDocumentProperties</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9fcd99c68d72d5edbaf218f8474e73a2" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportDropDownFormFieldAsText</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa11399e54dbb0dbe4de983d9e2092eb9" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportFontResources</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa1439577562a1a9d045a6c80eda4f578" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportFontsAsBase64</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1add57516835dfbc84b4ac55117e03a6a5" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportGeneratorName</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f1b34fd1e1c6dcba07f80bf31a04540" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportHeadersFootersMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac31cb0638ccc73cec1acdea99363f0d5" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportImagesAsBase64</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1afd21b1e23400769165c337e66619a7f3" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportLanguageInformation</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af6b948d8f9a84e96024899b81f45b5a5" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportListLabels</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab92617acb48775a6808cdfa119231b7b" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportOriginalUrlForLinkedImages</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae04c56cc9a55c736a1ab5918b1ce5e80" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportPageMargins</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0652fef82d977fc7642bfa1b5244c41b" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportPageSetup</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75f62a5a25e49521bc4e477d8dc1e23a" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportRelativeFontSize</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a7fe0a32e742927a323a1a7c087b3cc0c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportRoundtripInformation</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab3ff9253ac8773483633aa4af1e31131" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportShapesAsSvg</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a050c08aee078e4c8d9693fb973d9f156" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportTextInputFormFieldAsText</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a660e73dbc6030fdad2bf8c5cf8ccfb52" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportTocPageNumbers</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aed2872b56172d48033db769352711dcd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ExportXhtmlTransitional</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1add89277511fce7088ef8f275c1bafe34" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_FontResourcesSubsettingSizeThreshold</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a880c85d68ac40402c59f81ac077328a8" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_FontSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8d6f4c9b9619bb1049a9c899b6334e" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_FontsFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0fa12f2fc6073edd9872356c0dfcce53" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_FontsFolderAlias</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa5ef1ab52004a90c011a1807db98d825" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_HtmlVersion</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adb618046819b5f1a5f09683b94a11ad1" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ImageResolution</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1fad0446faf123eefffbf5b0003f23ac" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ImageSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e4c5920bfaadd9284e2ce32f8c11648" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ImagesFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6fefd0650e96b44c91e4a1f8f45fbf0c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ImagesFolderAlias</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a4032bbd708177dd64e3ba455a509e470" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ImlRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a24c6615734949b3fa18f490349839d78" prot="private" virt="virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_IsMultipleMainPartsAllowed</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a00434e0916cf24f88a1cff9f4952bff3" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_MemoryOptimization</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a84415ca9aabd758629a416bbd3ee9cc8" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_MetafileFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa2c0c7663271d7c0779368688ac74a32" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_OfficeMathOutputMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1af3590697cf94e5b1f546536a3bb20089" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_PrettyFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1aabbd691992af320129ecf001454428b1" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ProgressCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6926d29b189e448cd45204d6eb6941b5" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ResolveFontNames</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a75948280481cc4bad02c6430732226d1" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ResourceFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5e63c4e5f01af50a479b0dc9e85b6bbd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ResourceFolderAlias</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa895246fb972053c3a63f3e944f3efec" prot="public" virt="virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_SaveFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8caf44eece441467c89da4d4eec11d0c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_ScaleImageToShapeSize</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2395d89ea36442424067fbb1315ffc98" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_TableWidthOutputMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a2eb22d168e7885c69f1a5ee73dfa9a9c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_TempFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1aafd986a59939576b688baf70ae2982b9" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UpdateCreatedTimeProperty</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a9058403d0bf8ef363c7265927c7d9689" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UpdateFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1ae00124e73b7ed35821a822f59a98456d" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UpdateLastPrintedProperty</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1aa37a14113e46f96d6a4100f33dbb41cd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UpdateLastSavedTimeProperty</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a6ba4c67d7befc1d3959119554bc6ca0e" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UpdateSdtContent</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1ac07a919eda7dd3104c3539643caab82f" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UseAntiAliasing</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a926127b8a13db96c893d2e327d1ac458" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>get_UseHighQualityRendering</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af887e38e7a8024fab5e2a59f1ce3545b" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>HtmlSaveOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a2eb1915a21e04129b8b1b337c49bb6e3" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>HtmlSaveOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5ce58e7a575f1bf5fa405df0045d58a1" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a967d77ded1dc0d9b37636336c888ca45" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab924300c2a82215faf32c1b9b0fcf167" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField10</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac2753274f1cd3da30b2ddec7b14dae53" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField11</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5474c2d88a0987350da246ed2e00edbe" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField12</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4b633fbc2afa5b5ede43aaa82f2d91aa" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField13</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa3ef27027648982eca505d06bea7737c" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField14</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1afe15b329b0ab0a274255afe61d2d7f88" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField15</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae4ed2463c8732d3bd1381bb740aa5b3f" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField16</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1acee7e5a7f6c14742e105b2044468f436" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField17</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8490d9e22e4fdfd0945f21c54662bc0c" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField18</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aab89549a38328ea4fdd594796b6cdac5" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField19</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aded0dfc9c9ababb39b1f146878e50420" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a85d8409212fd6749240e3dcceb7fe377" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField20</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a7bce6c3d755ed1b82468fda3883affee" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField21</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0f7b141059f033bccf19a9b640288f85" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField22</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a42003fca4f663459432dbe549c32eec6" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField23</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9466678312cf312700bf9c775559c5a0" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField24</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae9e2e2282ddd76c3547c3237a74bebc5" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField25</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad586b52d00a1d378a2a448ebf7e35202" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField26</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac086fa4a106f542efe2cf34c54b875ad" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField27</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5dd4e0a31eae7bb0e708b40e55f0b2d7" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField28</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a55ff642e35ecd02734dcc207f48d3227" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField29</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a596ee6c7548ac2bf5e4da7b77c330b18" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a09848a2daaa312e4e7a48c3ca529237b" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField30</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae0b7255a35c600205bccd9fac930dcc5" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField31</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1f7d6dbb097c2712fa3ca960e76018dc" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField32</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a639f53406da51d7f6dc566d7a38fa65b" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField33</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4061540d4733a463f176d8fcc7189070" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField34</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aac5de8be59557ddbf609a6e2026bba5d" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField35</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ac92c634d7550004297090a43d96becab" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField36</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f0a88cafc5f37ba02a2604ed4418c78" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField37</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1acd8efe101c13622f2b0cd23f6d388032" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField38</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa055c00619afa32986ea67f9b090ae0d" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField39</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a3e09e5ac6c800399efa82c8b12e9f762" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a54adb4fc3a83f74fd6fd8982c7dc475d" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField40</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9a8f130faf6ea04d107a7078bfe5bb0c" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField41</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1acb3b5e26ecff600fd841bf2a0a4c832c" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField42</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1adfdb840f0ef7fa0aa2d718f083ddcf5b" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField43</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1e417e63a77a27b9468cf5bbb9628144" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField44</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a498b9d646280a0acd76400a019beffc9" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0f69bd503219c1e8982b17f2004513d2" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a5359277d71ba8ba359896dcacc70a89d" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0c14f83f6c6883516e3231b22c1b51a6" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField8</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6c79f64003b6ba793e3165d60d2ee8d0" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>mField9</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0b5358f08e7919de423e274c9453f78f" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a9bf0591a869b2046558fac161fb5c8b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_AllowEmbeddingPostScriptFonts</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1a4b31e8d5e2225dfc847dc459d35995" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_AllowNegativeIndent</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a51b95c1f087edec34b0e92f47c56b691" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_CssClassNamePrefix</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a6c58daf1272760670077664f22b79b4b" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_CssSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9bae9b053786796d08bccece7f9900f2" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_CssStyleSheetFileName</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a3cba12d832409ae3b389f35d5396ed42" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_CssStyleSheetType</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a70292d5b6ed5dd4ed81ab6779ada5037" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_CustomTimeZoneInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a6d50c71651e23523dd4edae9c8e03b0e" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_DefaultTemplate</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a52f28c6f920bd4829f304f586dd52a4e" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_Dml3DEffectsRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a0415bb8f17f114f5b8bfbf77822f3e33" prot="public" virt="virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_DmlEffectsRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a925282153c1c7004637ce406968cd6bd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_DmlRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab1ebb0456e33e4ed5242f53fe0dd15b4" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_DocumentPartSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab9a6b630e6a32c956abfd3812d59412c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_DocumentSplitCriteria</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9b1479cdaaf86cdf13c3eb82de1572af" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_DocumentSplitHeadingLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aeaff76bac9cf6b0148a2b95a8206969b" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_Encoding</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a43f6d1fa77ffa568e511b2cbec43ae41" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_EpubNavigationMapLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a1545aa5b0e44790a7cd3d71b4464c065" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportCidUrlsForMhtmlResources</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a01cec28c50ed0d90eb7accd4535581e6" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportDocumentProperties</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab2a20b5763192048f95361b5328cdd28" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportDropDownFormFieldAsText</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ab5bfb37917137146b298a9407b49a662" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportFontResources</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a531df8410c938d66949b21bc90b567ef" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportFontsAsBase64</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a2b3bada9094a54559b832d5051f5be6d" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportGeneratorName</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4f3156583e2218547a136e5e040da165" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportHeadersFootersMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9332c2f0a0fb4033b33a2ef3c0d96553" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportImagesAsBase64</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0ee5a278180b4d84561c505af03d6c20" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportLanguageInformation</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a331f6c0db3343ecbf8ffc6e28acc1a3f" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportListLabels</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aad4f03b6adf4c36ae359aa6bb421d6f0" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportOriginalUrlForLinkedImages</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a23e373e434e00ed8933279de00b5764c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportPageMargins</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a161b7255768e6ec13ae7d2a5f19ff442" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportPageSetup</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a31066517f45533bf7cbc03f32492e6d6" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportRelativeFontSize</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a0e9928f9b81ed67ff671c60f0bf01a97" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportRoundtripInformation</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae95b4eb5a3da381d395cf07c9afa4727" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportShapesAsSvg</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad82cb4ac6f5654da5843716dd6d4e7e3" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportTextInputFormFieldAsText</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a4a8115af85664debf9a8930345d3bf47" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportTocPageNumbers</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aee5a142462149fb6546999176ed64f4d" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ExportXhtmlTransitional</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a382caf8e86a90f84ebaec7ccb7f30586" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_FontResourcesSubsettingSizeThreshold</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a77f4c06ce722fae51410b4f67c74a73f" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_FontSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a339e75f20f6aea400c385922be504617" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_FontsFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a76f0df2e71ad5e94a59ff95b306dd6d5" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_FontsFolderAlias</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a909f8f13b089a754efeae774c0c273c6" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_HtmlVersion</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a45cdf96a2fe01d6738e1e8cdf82295cd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ImageResolution</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8800097bfbac34d19112c91d91f7f2ed" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ImageSavingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a81ffe10917a8c70e8beb1646a4cc8acb" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ImagesFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a9096f7e546a51cfdcb92ad23131f968c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ImagesFolderAlias</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1afe2fd3cb5119a04f528a9da4b6c643b6" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ImlRenderingMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a1b432af0d799842b6939005904d924b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_MemoryOptimization</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1af82fc83c021aa770a005d29da0b7f9ba" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_MetafileFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ad52d12c5f3d7a2fc5a0764e34e95aebd" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_OfficeMathOutputMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a0333c9e934c7b7066c108975a65291c9" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_PrettyFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a3ca5c36f7f1922b1f7b1f6e8528e29c4" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ProgressCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a8026e5cfb96ab4fe030f923e3fb61d14" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ResolveFontNames</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a05eaf9ad470015f270a5206b2dcac770" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ResourceFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a3764c36801a1b26c44217024e42f1b7a" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ResourceFolderAlias</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a56c2d8508c9d220fc4f3034511640223" prot="public" virt="virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_SaveFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a362019732c95aa2ac33046f88ede1d9f" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_ScaleImageToShapeSize</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1abcd6f3edbd39bee21bd5464dbcdf3573" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_TableWidthOutputMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a7488c6e1d35b21dda1fb3a6b24eb077c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_TempFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1aa6b3c59d2b5d93ecd4af333e7731a57a" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UpdateCreatedTimeProperty</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a1ca0e9e7685d9cfdacad9b0c1c47fede" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UpdateFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a9253b0a7481cec6751f2d6e186d15f89" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UpdateLastPrintedProperty</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1a3f8626f9e2fdd5ea38f656ecffea4433" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UpdateLastSavedTimeProperty</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1afc31fd439351d75447554d3196522687" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UpdateSdtContent</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1aee6a47d5aa51895c89fb99333990b15c" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UseAntiAliasing</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_save_options_1aadd8de8195c06388cf619673c020dad3" prot="public" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>set_UseHighQualityRendering</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1aa0145f0059be9dcc4b0f7fd59e028f8b" prot="private" virt="virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>SetTestMode</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1ae72b264971777ac6e6f28f3d506bdc75" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_saving_1_1_html_save_options_1a98b80369e81f52a6338b7dd6117e703f" prot="private" virt="non-virtual"><scope>Aspose::Words::Saving::HtmlSaveOptions</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
