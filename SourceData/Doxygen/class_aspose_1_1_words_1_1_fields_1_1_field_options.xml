<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_field_options" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Aspose::Words::Fields::FieldOptions</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_field_options_8h" local="no">Aspose.Words.Cpp/Fields/FieldOptions.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a23287978aae989beeb10616caaffe831" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Fields::FieldOptions::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="55" column="28" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a94299875f676865837fa1f4cc0ccd218" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options" kindref="compound">FieldOptions</ref></type>
        <definition>typedef FieldOptions Aspose::Words::Fields::FieldOptions::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="54" column="26" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a639344b726df5d352af8854b9bd1f36d" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Fields::FieldOptions::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="57" column="37" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aea585a357e8afca31c4a4283c65eef29" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Fields::FieldOptions::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1002" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1002" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aacc270736a064849c2c6e8171e1db2f6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1003" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a9c056a703fdeef63192316e74e10c92d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField10</definition>
        <argsstring></argsstring>
        <name>mField10</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1012" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ad1eca3a9197a4b1fbc6be0cd1744633e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField11</definition>
        <argsstring></argsstring>
        <name>mField11</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1013" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2afa9ee5488c02a574392925e2f008a1" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField12</definition>
        <argsstring></argsstring>
        <name>mField12</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1014" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a61a3f658ecd6de344effff706e6478cb" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField13</definition>
        <argsstring></argsstring>
        <name>mField13</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1015" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a3f48f22109a344e2360210abf6ced88b" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::mField14</definition>
        <argsstring></argsstring>
        <name>mField14</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1016" column="20" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1016" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a5a586b33fd011fa20c6add8a3db0810b" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::mField15</definition>
        <argsstring></argsstring>
        <name>mField15</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1017" column="20" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ab16fc0a658fe6c7e0436af24942899b3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField16</definition>
        <argsstring></argsstring>
        <name>mField16</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1018" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac407d0cf21c7f0afeaa28bf7a852be46" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField17</definition>
        <argsstring></argsstring>
        <name>mField17</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField17</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1019" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aeaa6ce724b423e245c21ba73e4fb1b9d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField18</definition>
        <argsstring></argsstring>
        <name>mField18</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField18</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1020" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ad904555a9b3e930792b2b719b9d6e074" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.weak_ptr/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::WeakPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::WeakPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField19</definition>
        <argsstring></argsstring>
        <name>mField19</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField19</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1021" column="21" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1abeb375f65c203712a065113f88a11dfd" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Fields::FieldOptions::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1004" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1004" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a35051b3285795965c4dbd644345f672c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1005" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1005" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a12d27ddb324aa24aff0f1e3aa3285cf2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1006" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1006" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a75a52fa785549e3a7a54481d01d3d2bd" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1007" column="20" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a50dd5584f5a3c7e5de9fdbffbe853380" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1008" column="20" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1008" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a0c7431a088de79594b5daab8af9bdffb" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Fields::FieldOptions::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1009" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a05f17af0332919ead1c9afb1c4ee2e22" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Fields::FieldOptions::mField8</definition>
        <argsstring></argsstring>
        <name>mField8</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1010" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aac9c8da40202cd1453fdab2767bc38e8" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldOptions::mField9</definition>
        <argsstring></argsstring>
        <name>mField9</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::mField9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="1011" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="1011" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e6fd0c1f43162c82f7489369663025b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::FieldOptions::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="58" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afbd1d6ced037d19b397fb6d019ac36e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_barcode_generator" kindref="compound">Aspose::Words::Fields::IBarcodeGenerator</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IBarcodeGenerator &gt; &amp; Aspose::Words::Fields::FieldOptions::get_BarcodeGenerator</definition>
        <argsstring>() const</argsstring>
        <name>get_BarcodeGenerator</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_BarcodeGenerator</qualifiedname>
        <briefdescription>
<para>Gets or set custom barcode generator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="497" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa3db347dc23df71fba9af7b904176e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &gt;</type>
        <definition>System::ArrayPtr&lt; System::String &gt; Aspose::Words::Fields::FieldOptions::get_BuiltInTemplatesPaths</definition>
        <argsstring>() const</argsstring>
        <name>get_BuiltInTemplatesPaths</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_BuiltInTemplatesPaths</qualifiedname>
        <briefdescription>
<para>Gets or sets paths of MS Word built-in templates. </para>
        </briefdescription>
        <detaileddescription>
<para>This property is used by the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_text" kindref="compound">FieldAutoText</ref> and <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_glossary" kindref="compound">FieldGlossary</ref> fields, if referenced auto text entry is not found in the <ref refid="class_aspose_1_1_words_1_1_document_1ac525b4a1f1d73951263e84f893e3bd21" kindref="member">AttachedTemplate</ref> template.</para>
<para>By default MS Word stores built-in templates in c:\Users\&lt;username&gt;\AppData\Roaming\<ref refid="namespace/microsoft/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">Microsoft</ref>\<ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> Building Blocks\1033\16\Built-In Building Blocks.dotx and C:\Users\&lt;username&gt;\AppData\Roaming\<ref refid="namespace/microsoft/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">Microsoft</ref>\Templates\Normal.dotm files.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to display a building block with AUTOTEXT and GLOSSARY fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>glossary<sp/>document<sp/>and<sp/>add<sp/>an<sp/>AutoText<sp/>building<sp/>block<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;set_GlossaryDocument(MakeObject&lt;GlossaryDocument&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buildingBlock<sp/>=<sp/>MakeObject&lt;BuildingBlock&gt;(doc-&gt;get_GlossaryDocument());</highlight></codeline>
<codeline><highlight class="normal">buildingBlock-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;MyBlock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">buildingBlock-&gt;set_Gallery(BuildingBlockGallery::AutoText);</highlight></codeline>
<codeline><highlight class="normal">buildingBlock-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;General&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">buildingBlock-&gt;set_Description(u</highlight><highlight class="stringliteral">&quot;MyBlock<sp/>description&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">buildingBlock-&gt;set_Behavior(BuildingBlockBehavior::Paragraph);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_GlossaryDocument()-&gt;AppendChild(buildingBlock);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>source<sp/>and<sp/>add<sp/>it<sp/>as<sp/>text<sp/>to<sp/>our<sp/>building<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buildingBlockSource<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buildingBlockSourceBuilder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(buildingBlockSource);</highlight></codeline>
<codeline><highlight class="normal">buildingBlockSourceBuilder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>World!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>buildingBlockContent<sp/>=<sp/>doc-&gt;get_GlossaryDocument()-&gt;ImportNode(buildingBlockSource-&gt;get_FirstSection(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">buildingBlock-&gt;AppendChild(buildingBlockContent);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>file<sp/>which<sp/>contains<sp/>parts<sp/>that<sp/>our<sp/>document,<sp/>or<sp/>its<sp/>attached<sp/>template<sp/>may<sp/>not<sp/>contain.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_BuiltInTemplatesPaths(MakeArray&lt;String&gt;({MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Busniess<sp/>brochure.dotx&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>to<sp/>use<sp/>fields<sp/>to<sp/>display<sp/>the<sp/>contents<sp/>of<sp/>our<sp/>building<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Using<sp/>an<sp/>AUTOTEXT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldAutoText<sp/>=<sp/>System::DynamicCast&lt;FieldAutoText&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecae60ff82a89ad28bd99a888a576e2ae9a" kindref="member" tooltip="Specifies the AUTOTEXT field.">FieldType::FieldAutoText</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldAutoText-&gt;set_EntryName(u</highlight><highlight class="stringliteral">&quot;MyBlock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTOTEXT<sp/><sp/>MyBlock&quot;</highlight><highlight class="normal">,<sp/>fieldAutoText-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Using<sp/>a<sp/>GLOSSARY<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldGlossary<sp/>=<sp/>System::DynamicCast&lt;FieldGlossary&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca5cf85d906af36bf958a49b15c5dd0ed8" kindref="member" tooltip="Specifies the GLOSSARY field.">FieldType::FieldGlossary</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldGlossary-&gt;set_EntryName(u</highlight><highlight class="stringliteral">&quot;MyBlock&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>GLOSSARY<sp/><sp/>MyBlock&quot;</highlight><highlight class="normal">,<sp/>fieldGlossary-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.AUTOTEXT.GLOSSARY.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="987" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afd8073c5f8ed694f9ee18c7f5bd978d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_comparison_expression_evaluator" kindref="compound">Aspose::Words::Fields::IComparisonExpressionEvaluator</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IComparisonExpressionEvaluator &gt; &amp; Aspose::Words::Fields::FieldOptions::get_ComparisonExpressionEvaluator</definition>
        <argsstring>() const</argsstring>
        <name>get_ComparisonExpressionEvaluator</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_ComparisonExpressionEvaluator</qualifiedname>
        <briefdescription>
<para>Gets or sets the field comparison expressions evaluator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_comparison_expression_evaluator" kindref="compound">Aspose::Words::Fields::IComparisonExpressionEvaluator</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to implement custom evaluation for the IF and COMPARE fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConditionEvaluationExtensionPoint(String<sp/>fieldCode,<sp/>int8_t<sp/>comparisonResult,<sp/>String<sp/>comparisonError,<sp/>String<sp/>expectedResult)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>left<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;left<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>operator_<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>right<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;right<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Field<sp/>codes<sp/>that<sp/>we<sp/>use<sp/>in<sp/>this<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/><sp/><sp/>&quot;<sp/>IF<sp/>{0}<sp/>{1}<sp/>{2}<sp/>\&quot;true<sp/>argument\&quot;<sp/>\&quot;false<sp/>argument\&quot;<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/><sp/><sp/>&quot;<sp/>COMPARE<sp/>{0}<sp/>{1}<sp/>{2}<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(String::Format(fieldCode,<sp/>left,<sp/>operator_,<sp/>right),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>&quot;comparisonResult&quot;<sp/>is<sp/>undefined,<sp/>we<sp/>create<sp/>&quot;ComparisonEvaluationResult&quot;<sp/>with<sp/>string,<sp/>instead<sp/>of<sp/>bool.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result<sp/>=<sp/>comparisonResult<sp/>!=<sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>MakeObject&lt;ComparisonEvaluationResult&gt;(comparisonResult<sp/>==<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comparisonError<sp/>!=<sp/>nullptr<sp/>?<sp/><ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;ComparisonEvaluationResult&gt;(comparisonError)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluator<sp/>=<sp/>MakeObject&lt;ExField::ComparisonExpressionEvaluator&gt;(result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;get_FieldOptions()-&gt;set_ComparisonExpressionEvaluator(evaluator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(expectedResult,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>evaluator-&gt;AssertInvocationsCount(1)-&gt;AssertInvocationArguments(0,<sp/>left,<sp/>operator_,<sp/>right);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">ComparisonExpressionEvaluator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IComparisonExpressionEvaluator</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ComparisonExpressionEvaluator(SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mInvocations(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">ArrayPtr</ref>&lt;<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>&gt;&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mResult<sp/>=<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>Evaluate(SharedPtr&lt;Field&gt;<sp/>field,<sp/>SharedPtr&lt;ComparisonExpression&gt;<sp/>expression)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInvocations-&gt;Add(MakeArray&lt;String&gt;({expression-&gt;get_LeftExpression(),<sp/>expression-&gt;get_ComparisonOperator(),<sp/>expression-&gt;get_RightExpression()}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationsCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expected,<sp/>mInvocations-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationArguments(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invocationIndex,<sp/>String<sp/>expectedLeftExpression,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>expectedComparisonOperator,<sp/>String<sp/>expectedRightExpression)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayPtr&lt;String&gt;<sp/>arguments<sp/>=<sp/>mInvocations-&gt;idx_get(invocationIndex);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedLeftExpression,<sp/>arguments[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedComparisonOperator,<sp/>arguments[1]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedRightExpression,<sp/>arguments[2]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~ComparisonExpressionEvaluator()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;ArrayPtr&lt;String&gt;&gt;&gt;<sp/>mInvocations;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="278" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1d27190d0b1c3dbcca36601eafe89326" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_user_information" kindref="compound">Aspose::Words::Fields::UserInformation</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::UserInformation &gt; &amp; Aspose::Words::Fields::FieldOptions::get_CurrentUser</definition>
        <argsstring>() const</argsstring>
        <name>get_CurrentUser</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_CurrentUser</qualifiedname>
        <briefdescription>
<para>Gets or sets the current user information. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set user details, and display them using fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>UserInformation<sp/>object<sp/>and<sp/>set<sp/>it<sp/>as<sp/>the<sp/>data<sp/>source<sp/>for<sp/>fields<sp/>that<sp/>display<sp/>user<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>userInformation<sp/>=<sp/>MakeObject&lt;UserInformation&gt;();</highlight></codeline>
<codeline><highlight class="normal">userInformation-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">userInformation-&gt;set_Initials(u</highlight><highlight class="stringliteral">&quot;J.<sp/>D.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">userInformation-&gt;set_Address(u</highlight><highlight class="stringliteral">&quot;123<sp/>Main<sp/>Street&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_CurrentUser(userInformation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>USERNAME,<sp/>USERINITIALS,<sp/>and<sp/>USERADDRESS<sp/>fields,<sp/>which<sp/>display<sp/>values<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>respective<sp/>properties<sp/>of<sp/>the<sp/>UserInformation<sp/>object<sp/>that<sp/>we<sp/>have<sp/>created<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(userInformation-&gt;get_Name(),<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>USERNAME<sp/>&quot;</highlight><highlight class="normal">)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(userInformation-&gt;get_Initials(),<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>USERINITIALS<sp/>&quot;</highlight><highlight class="normal">)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(userInformation-&gt;get_Address(),<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>USERADDRESS<sp/>&quot;</highlight><highlight class="normal">)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>field<sp/>options<sp/>object<sp/>also<sp/>has<sp/>a<sp/>static<sp/>default<sp/>user<sp/>that<sp/>fields<sp/>from<sp/>all<sp/>documents<sp/>can<sp/>refer<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_aspose_1_1_words_1_1_fields_1_1_user_information_1a4119867d9fbc2eab7941cbf67ab87ed8" kindref="member" tooltip="Default user information.">UserInformation::get_DefaultUser</ref>()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Default<sp/>User&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_aspose_1_1_words_1_1_fields_1_1_user_information_1a4119867d9fbc2eab7941cbf67ab87ed8" kindref="member" tooltip="Default user information.">UserInformation::get_DefaultUser</ref>()-&gt;set_Initials(u</highlight><highlight class="stringliteral">&quot;D.<sp/>U.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class_aspose_1_1_words_1_1_fields_1_1_user_information_1a4119867d9fbc2eab7941cbf67ab87ed8" kindref="member" tooltip="Default user information.">UserInformation::get_DefaultUser</ref>()-&gt;set_Address(u</highlight><highlight class="stringliteral">&quot;One<sp/>Microsoft<sp/>Way&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_CurrentUser(<ref refid="class_aspose_1_1_words_1_1_fields_1_1_user_information_1a4119867d9fbc2eab7941cbf67ab87ed8" kindref="member" tooltip="Default user information.">UserInformation::get_DefaultUser</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Default<sp/>User&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>USERNAME<sp/>&quot;</highlight><highlight class="normal">)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;D.<sp/>U.&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>USERINITIALS<sp/>&quot;</highlight><highlight class="normal">)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;One<sp/>Microsoft<sp/>Way&quot;</highlight><highlight class="normal">,<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>USERADDRESS<sp/>&quot;</highlight><highlight class="normal">)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FieldOptions.CurrentUser.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="577" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aecf67be0769cbff464d14d71fa4bf1ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::get_CustomTocStyleSeparator</definition>
        <argsstring>() const</argsstring>
        <name>get_CustomTocStyleSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_CustomTocStyleSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets custom style separator for the \t switch in <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc" kindref="compound">FieldToc</ref> field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="423" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa3952472f5c1613734215ec17875eeef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::get_DefaultDocumentAuthor</definition>
        <argsstring>() const</argsstring>
        <name>get_DefaultDocumentAuthor</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_DefaultDocumentAuthor</qualifiedname>
        <briefdescription>
<para>Gets or sets default document author&apos;s name. If author&apos;s name is already specified in built-in document properties, this option is not considered. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use an AUTHOR field to display a document creator&apos;s name. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHOR<sp/>fields<sp/>source<sp/>their<sp/>results<sp/>from<sp/>the<sp/>built-in<sp/>document<sp/>property<sp/>called<sp/>&quot;Author&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>create<sp/>and<sp/>save<sp/>a<sp/>document<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>have<sp/>our<sp/>username<sp/>in<sp/>that<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>However,<sp/>if<sp/>we<sp/>create<sp/>a<sp/>document<sp/>programmatically<sp/>using<sp/>Aspose.Words,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>&quot;Author&quot;<sp/>property,<sp/>by<sp/>default,<sp/>will<sp/>be<sp/>an<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(String::Empty,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>backup<sp/>author<sp/>name<sp/>for<sp/>AUTHOR<sp/>fields<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>&quot;Author&quot;<sp/>property<sp/>contains<sp/>an<sp/>empty<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_DefaultDocumentAuthor(u</highlight><highlight class="stringliteral">&quot;Joe<sp/>Bloggs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>document<sp/>was<sp/>created<sp/>by<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldAuthor&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca3fb8145fe86828004760321499e8c38b" kindref="member" tooltip="Specifies the AUTHOR field.">FieldType::FieldAuthor</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Joe<sp/>Bloggs&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Updating<sp/>an<sp/>AUTHOR<sp/>field<sp/>that<sp/>contains<sp/>a<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>apply<sp/>that<sp/>value<sp/>to<sp/>the<sp/>&quot;Author&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Joe<sp/>Bloggs&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changing<sp/>this<sp/>property,<sp/>then<sp/>updating<sp/>the<sp/>AUTHOR<sp/>field<sp/>will<sp/>apply<sp/>this<sp/>value<sp/>to<sp/>the<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>update<sp/>an<sp/>AUTHOR<sp/>field<sp/>after<sp/>changing<sp/>its<sp/>&quot;Name&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>field<sp/>will<sp/>display<sp/>the<sp/>new<sp/>name<sp/>and<sp/>apply<sp/>the<sp/>new<sp/>name<sp/>to<sp/>the<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_AuthorName(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;Jane<sp/>Doe\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHOR<sp/>fields<sp/>do<sp/>not<sp/>affect<sp/>the<sp/>DefaultDocumentAuthor<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Joe<sp/>Bloggs&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_FieldOptions()-&gt;get_DefaultDocumentAuthor());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.AUTHOR.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="336" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aca39b0d04b2a4695b01f1c98a93f58a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_database_provider" kindref="compound">Aspose::Words::Fields::IFieldDatabaseProvider</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IFieldDatabaseProvider &gt; &amp; Aspose::Words::Fields::FieldOptions::get_FieldDatabaseProvider</definition>
        <argsstring>() const</argsstring>
        <name>get_FieldDatabaseProvider</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_FieldDatabaseProvider</qualifiedname>
        <briefdescription>
<para>Gets a provider that returns a query result for the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_database" kindref="compound">FieldDatabase</ref> field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="503" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8fa1141b3d0a659bf5d1fc90a9ec1bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_fields_1acf25ece24d4c5aa72fcbc0fee82a9555" kindref="member">Aspose::Words::Fields::FieldIndexFormat</ref></type>
        <definition>Aspose::Words::Fields::FieldIndexFormat Aspose::Words::Fields::FieldOptions::get_FieldIndexFormat</definition>
        <argsstring>()</argsstring>
        <name>get_FieldIndexFormat</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_FieldIndexFormat</qualifiedname>
        <briefdescription>
<para>Gets or sets a <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8fa1141b3d0a659bf5d1fc90a9ec1bdb" kindref="member">FieldIndexFormat</ref> that represents the formatting for the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index" kindref="compound">FieldIndex</ref> fields in the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to formatting <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index" kindref="compound">FieldIndex</ref> fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2eafced549b9e8e487f42d2bcb5bb63616c" kindref="member" tooltip="Explicit line break.">BreakType::LineBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;XE<sp/>\&quot;A\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/>\\e<sp/>\&quot;<sp/>·<sp/>\&quot;<sp/>\\h<sp/>\&quot;A\&quot;<sp/>\\c<sp/>\&quot;2\&quot;<sp/>\\z<sp/>\&quot;1033\&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_FieldIndexFormat(<ref refid="namespace_aspose_1_1_words_1_1_fields_1acf25ece24d4c5aa72fcbc0fee82a9555a7f6ec4d9d12421a15cc0cb2f4003f293" kindref="member" tooltip="Fancy.">FieldIndexFormat::Fancy</ref>);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.SetFieldIndexFormat.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="653" column="48"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a7ef57d60fb6c87e31327d5c9fc039b6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_update_culture_provider" kindref="compound">Aspose::Words::Fields::IFieldUpdateCultureProvider</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IFieldUpdateCultureProvider &gt; &amp; Aspose::Words::Fields::FieldOptions::get_FieldUpdateCultureProvider</definition>
        <argsstring>() const</argsstring>
        <name>get_FieldUpdateCultureProvider</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_FieldUpdateCultureProvider</qualifiedname>
        <briefdescription>
<para>Gets or sets a provider that returns a culture object specific for each particular field. </para>
        </briefdescription>
        <detaileddescription>
<para>The provider is requested when the value of <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e85557629a14de862f3bda0dc79ec57" kindref="member">FieldUpdateCultureSource</ref> is <bold>FieldUpdateCultureSource.FieldCode</bold>.</para>
<para>If the provider is present, then the culture object it returns is used for the field update. Otherwise, a system culture is used.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify a culture which parses date/time formatting for each field. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DefineDateTimeFormatting()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca3af4f57120f24bb14c60b8d0e5ec91c4" kindref="member" tooltip="Specifies the TIME field.">FieldType::FieldTime</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_FieldUpdateCultureSource(<ref refid="namespace_aspose_1_1_words_1_1_fields_1ada00fa769416b360482566a3b6aefc8daddf7a4a5576ce625fee6ceb1e3ba650e" kindref="member" tooltip="The culture specified in the field formatting properties via language setting is used.">FieldUpdateCultureSource::FieldCode</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>provider<sp/>that<sp/>returns<sp/>a<sp/>culture<sp/>object<sp/>specific<sp/>to<sp/>each<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_FieldUpdateCultureProvider(MakeObject&lt;ExFieldOptions::FieldUpdateCultureProvider&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldDate<sp/>=<sp/>System::DynamicCast&lt;FieldTime&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldDate-&gt;get_LocaleId()<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)EditingLanguage::Russian)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldDate-&gt;set_LocaleId((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)EditingLanguage::Russian);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FieldOptions.UpdateDateTimeFormatting.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldUpdateCultureProvider<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IFieldUpdateCultureProvider</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Globalization::CultureInfo&gt;<sp/>GetCulture(String<sp/>name,<sp/>SharedPtr&lt;Field&gt;<sp/>field)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>u</highlight><highlight class="stringliteral">&quot;ru-RU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>culture<sp/>=<sp/>MakeObject&lt;System::Globalization::CultureInfo&gt;(name,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Globalization::DateTimeFormatInfo&gt;<sp/>format<sp/>=<sp/>culture-&gt;get_DateTimeFormat();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_MonthNames(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;месяц<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>5&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>6&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>7&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>8&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>9&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>10&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>11&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;месяц<sp/>12&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_MonthGenitiveNames(format-&gt;get_MonthNames());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_AbbreviatedMonthNames(MakeArray&lt;String&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{u</highlight><highlight class="stringliteral">&quot;мес<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>5&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>6&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>7&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>8&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>9&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>10&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>11&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;мес<sp/>12&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_AbbreviatedMonthGenitiveNames(format-&gt;get_AbbreviatedMonthNames());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_DayNames(MakeArray&lt;String&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>7&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>5&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>недели<sp/>6&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_AbbreviatedDayNames(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;день<sp/>7&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>5&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;день<sp/>6&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_ShortestDayNames(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;д7&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;д1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;д2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;д3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;д4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;д5&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;д6&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_AMDesignator(u</highlight><highlight class="stringliteral">&quot;До<sp/>полудня&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_PMDesignator(u</highlight><highlight class="stringliteral">&quot;После<sp/>полудня&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>pattern<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;yyyy<sp/>MM<sp/>(MMMM)<sp/>dd<sp/>(dddd)<sp/>hh:mm:ss<sp/>tt&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_LongDatePattern(pattern);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_LongTimePattern(pattern);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_ShortDatePattern(pattern);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format-&gt;set_ShortTimePattern(pattern);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>culture;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>u</highlight><highlight class="stringliteral">&quot;en-US&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MakeObject&lt;System::Globalization::CultureInfo&gt;(name,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="148" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e85557629a14de862f3bda0dc79ec57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_fields_1ada00fa769416b360482566a3b6aefc8d" kindref="member">Aspose::Words::Fields::FieldUpdateCultureSource</ref></type>
        <definition>Aspose::Words::Fields::FieldUpdateCultureSource Aspose::Words::Fields::FieldOptions::get_FieldUpdateCultureSource</definition>
        <argsstring>() const</argsstring>
        <name>get_FieldUpdateCultureSource</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_FieldUpdateCultureSource</qualifiedname>
        <briefdescription>
<para>Specifies what culture to use to format the field result. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, the culture of the current thread is used.</para>
<para>The setting affects only date/time fields with \\@ format switch. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="67" column="56"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a95ee8da669ce204a517051f3a3c62068" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_updating_callback" kindref="compound">Aspose::Words::Fields::IFieldUpdatingCallback</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IFieldUpdatingCallback &gt; &amp; Aspose::Words::Fields::FieldOptions::get_FieldUpdatingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_FieldUpdatingCallback</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_FieldUpdatingCallback</qualifiedname>
        <briefdescription>
<para>Gets <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_updating_callback" kindref="compound">IFieldUpdatingCallback</ref> implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="993" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1dc96af0cfc9e070b3c1d90b5f60872a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::get_FileName</definition>
        <argsstring>() const</argsstring>
        <name>get_FileName</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_FileName</qualifiedname>
        <briefdescription>
<para>Gets or sets the file name of the document. </para>
        </briefdescription>
        <detaileddescription>
<para>This property is used by the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_name" kindref="compound">FieldFileName</ref> field with higher priority than the <ref refid="class_aspose_1_1_words_1_1_document_1aeef5a15bccc35879b033ffd7dba7fdc4" kindref="member">OriginalFileName</ref> property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options" kindref="compound">FieldOptions</ref> to override the default value for the FILENAME field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;MoveToDocumentEnd();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>FILENAME<sp/>field<sp/>will<sp/>display<sp/>the<sp/>local<sp/>system<sp/>file<sp/>name<sp/>of<sp/>the<sp/>document<sp/>we<sp/>loaded.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldFileName&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca156f78ace61465a297709e0af11dcf9b" kindref="member" tooltip="Specifies the FILENAME field.">FieldType::FieldFileName</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>FILENAME<sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>the<sp/>FILENAME<sp/>field<sp/>shows<sp/>the<sp/>file&apos;s<sp/>name,<sp/>but<sp/>not<sp/>its<sp/>full<sp/>local<sp/>file<sp/>system<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>a<sp/>flag<sp/>to<sp/>make<sp/>it<sp/>show<sp/>the<sp/>full<sp/>file<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldFileName&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca156f78ace61465a297709e0af11dcf9b" kindref="member" tooltip="Specifies the FILENAME field.">FieldType::FieldFileName</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_IncludeFullPath(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>set<sp/>a<sp/>value<sp/>for<sp/>this<sp/>property<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>override<sp/>the<sp/>value<sp/>that<sp/>the<sp/>FILENAME<sp/>field<sp/>displays.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_FileName(u</highlight><highlight class="stringliteral">&quot;FieldOptions.FILENAME.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>FILENAME<sp/><sp/>\\p&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;FieldOptions.FILENAME.docx&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>doc-&gt;get_FieldOptions()-&gt;get_FileName());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="700" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac315fda213422e767e9caf5763320810" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldOptions::get_IsBidiTextSupportedOnUpdate</definition>
        <argsstring>() const</argsstring>
        <name>get_IsBidiTextSupportedOnUpdate</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_IsBidiTextSupportedOnUpdate</qualifiedname>
        <briefdescription>
<para>Gets or sets the value indicating whether bidirectional text is fully supported during field update or not. </para>
        </briefdescription>
        <detaileddescription>
<para>When this property is set to <bold>true</bold>, additional steps are performed to produce Right-To-Left language (i.e. Arabic or Hebrew) compatible field result during its update.</para>
<para>When this property is set to <bold>false</bold> and Right-To-Left language is used, correctness of field result after its update is not guaranteed.</para>
<para>The default value is <bold>false</bold>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options" kindref="compound">FieldOptions</ref> to ensure that field updating fully supports bi-directional text. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>any<sp/>field<sp/>operation<sp/>involving<sp/>right-to-left<sp/>text<sp/>is<sp/>performs<sp/>as<sp/>expected.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_IsBidiTextSupportedOnUpdate(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>document<sp/>builder<sp/>to<sp/>insert<sp/>a<sp/>field<sp/>that<sp/>contains<sp/>the<sp/>right-to-left<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FormField&gt;<sp/>comboBox<sp/>=<sp/>builder-&gt;InsertComboBox(u</highlight><highlight class="stringliteral">&quot;MyComboBox&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;עֶשְׂרִים&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;שְׁלוֹשִׁים&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;אַרְבָּעִים&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;חֲמִשִּׁים&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;שִׁשִּׁים&quot;</highlight><highlight class="normal">}),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal">comboBox-&gt;set_CalculateOnExit(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FieldOptions.Bidi.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="180" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8db83ae0832598d84bdf075d6a45556c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldOptions::get_LegacyNumberFormat</definition>
        <argsstring>() const</argsstring>
        <name>get_LegacyNumberFormat</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_LegacyNumberFormat</qualifiedname>
        <briefdescription>
<para>Gets or sets the value indicating whether legacy (early than AW 13.10) number format for fields is enabled or not. </para>
        </briefdescription>
        <detaileddescription>
<para>When this property is set to <bold>true</bold>, template symbol &quot;#&quot; worked as in .net: Replaces the pound sign with the corresponding digit if one is present; otherwise, no symbols appears in the result string.</para>
<para>When this property is set to <bold>false</bold>, template symbol &quot;#&quot; works as MS Word: This format item specifies the requisite numeric places to display in the result. If the result does not include a digit in that place, MS Word displays a space. For example, { = 9 + 6 \# $### } displays $ 15.</para>
<para>The default value is <bold>false</bold>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how enable legacy number formatting for fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3<sp/>\\#<sp/>$##&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$<sp/>5&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_LegacyNumberFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$5&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="455" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2bec5dd5dae0a7f1335b79ccd26c3515" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.globalization.culture_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; System::Globalization::CultureInfo &gt; &amp; Aspose::Words::Fields::FieldOptions::get_PreProcessCulture</definition>
        <argsstring>() const</argsstring>
        <name>get_PreProcessCulture</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_PreProcessCulture</qualifiedname>
        <briefdescription>
<para>Gets or sets the culture to preprocess field values. </para>
        </briefdescription>
        <detaileddescription>
<para>Currently this property only affects value of the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_property" kindref="compound">FieldDocProperty</ref> field.</para>
<para>The default value is <bold>null</bold>. When this property is set to <bold>null</bold>, the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_property" kindref="compound">FieldDocProperty</ref> field&apos;s value is preprocessed with the culture controlled by the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e85557629a14de862f3bda0dc79ec57" kindref="member">FieldUpdateCultureSource</ref> property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set the preprocess culture. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>culture<sp/>according<sp/>to<sp/>which<sp/>some<sp/>fields<sp/>will<sp/>format<sp/>their<sp/>displayed<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_PreProcessCulture(MakeObject&lt;System::Globalization::CultureInfo&gt;(u</highlight><highlight class="stringliteral">&quot;de-DE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DOCPROPERTY<sp/>CreateTime&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>DOCPROPERTY<sp/>field<sp/>will<sp/>display<sp/>its<sp/>result<sp/>formatted<sp/>according<sp/>to<sp/>the<sp/>preprocess<sp/>culture</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>set<sp/>to<sp/>German.<sp/>The<sp/>field<sp/>will<sp/>display<sp/>the<sp/>date/time<sp/>using<sp/>the<sp/>&quot;dd.mm.yyyy<sp/>hh:mm&quot;<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(<ref refid="class/system.text.regular_expressions.regex/_1a80bbc92cafa9d727e9c5e125a2d21585" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::RegularExpressions::Regex::Match</ref>(field-&gt;get_Result(),<sp/>u</highlight><highlight class="stringliteral">&quot;\\d{2}[.]\\d{2}[.]\\d{4}<sp/>\\d{2}[:]\\d{2}&quot;</highlight><highlight class="normal">)-&gt;get_Success());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_PreProcessCulture(<ref refid="class/system.globalization.culture_info/_1a9aa42809a6c430259b85001a659efd3c" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::get_InvariantCulture</ref>());</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>switching<sp/>to<sp/>the<sp/>invariant<sp/>culture,<sp/>the<sp/>DOCPROPERTY<sp/>field<sp/>will<sp/>use<sp/>the<sp/>&quot;mm/dd/yyyy<sp/>hh:mm&quot;<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(<ref refid="class/system.text.regular_expressions.regex/_1a80bbc92cafa9d727e9c5e125a2d21585" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::RegularExpressions::Regex::Match</ref>(field-&gt;get_Result(),<sp/>u</highlight><highlight class="stringliteral">&quot;\\d{2}[/]\\d{2}[/]\\d{4}<sp/>\\d{2}[:]\\d{2}&quot;</highlight><highlight class="normal">)-&gt;get_Success());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="537" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afdfa3525680a133ea90874a53bf1aa5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_result_formatter" kindref="compound">Aspose::Words::Fields::IFieldResultFormatter</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IFieldResultFormatter &gt; &amp; Aspose::Words::Fields::FieldOptions::get_ResultFormatter</definition>
        <argsstring>() const</argsstring>
        <name>get_ResultFormatter</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_ResultFormatter</qualifiedname>
        <briefdescription>
<para>Allows to control how the field result is formatted. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to automatically apply a custom format to field results as the fields are updated. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldResultFormatting_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>formatter<sp/>=<sp/>MakeObject&lt;ExDocumentBuilder::FieldResultFormatter&gt;(u</highlight><highlight class="stringliteral">&quot;${0}&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Date:<sp/>{0}&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Item<sp/>#<sp/>{0}:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_ResultFormatter(formatter);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>field<sp/>result<sp/>formatter<sp/>applies<sp/>a<sp/>custom<sp/>format<sp/>to<sp/>newly<sp/>created<sp/>fields<sp/>of<sp/>three<sp/>types<sp/>of<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Field<sp/>result<sp/>formatters<sp/>apply<sp/>new<sp/>formatting<sp/>to<sp/>fields<sp/>as<sp/>they<sp/>are<sp/>updated,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>happens<sp/>as<sp/>soon<sp/>as<sp/>we<sp/>create<sp/>them<sp/>using<sp/>this<sp/>InsertField<sp/>method<sp/>overload.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Numeric:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>2<sp/>+<sp/>3<sp/>\\#<sp/>$###&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$5&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1,<sp/>formatter-&gt;CountFormatInvocations(ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::Numeric));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Date/time:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;d<sp/>MMMM<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;get_Result().StartsWith(u</highlight><highlight class="stringliteral">&quot;Date:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1,<sp/>formatter-&gt;CountFormatInvocations(ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::DateTime));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>General:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;QUOTE<sp/>\&quot;2\&quot;<sp/>\\*<sp/>Ordinal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Item<sp/>#<sp/>2:&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(2)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1,<sp/>formatter-&gt;CountFormatInvocations(ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::General));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>formatter-&gt;PrintFormatInvocations();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldResultFormatter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IFieldResultFormatter</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>FormatInvocationType</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Numeric,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_markup_1aee4abdafc7177edadd79a4e0f83543d1a8cf10d2341ed01492506085688270c1e" kindref="member" tooltip="The date value for a date SDT is stored as a date in the standard XML Schema DateTime format.">DateTime</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>General,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a8994300487d95724d3ef9e714dec2c08ab1c94ca2fbc3e78fc30069c8d0f01680" kindref="member" tooltip="Specifies that this glossary document entry shall be associated with all possible gallery classificat...">All</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FormatInvocation<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType<sp/>get_FormatInvocationType()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_FormatInvocationType;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Object&gt;<sp/>get_Value()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_Value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>get_OriginalFormat()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_OriginalFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>get_NewValue()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pr_NewValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FormatInvocation(ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType<sp/>formatInvocationType,<sp/>SharedPtr&lt;System::Object&gt;<sp/>value,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>originalFormat,<sp/>String<sp/>newValue)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pr_FormatInvocationType(((ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType)0))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_Value<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_FormatInvocationType<sp/>=<sp/>formatInvocationType;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_OriginalFormat<sp/>=<sp/>originalFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_NewValue<sp/>=<sp/>newValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType<sp/>pr_FormatInvocationType;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Object&gt;<sp/>pr_Value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>pr_OriginalFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>pr_NewValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldResultFormatter(String<sp/>numberFormat,<sp/>String<sp/>dateFormat,<sp/>String<sp/>generalFormat)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mFormatInvocations(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">SharedPtr</ref>&lt;ExDocumentBuilder::FieldResultFormatter::FormatInvocation&gt;&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumberFormat<sp/>=<sp/>numberFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDateFormat<sp/>=<sp/>dateFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGeneralFormat<sp/>=<sp/>generalFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>FormatNumeric(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/>String<sp/>format)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(String::IsNullOrEmpty(mNumberFormat))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>newValue<sp/>=<sp/>String::Format(mNumberFormat,<sp/>value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_FormatInvocations()-&gt;Add(MakeObject&lt;ExDocumentBuilder::FieldResultFormatter::FormatInvocation&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::Numeric,<sp/>System::ObjectExt::Box&lt;double&gt;(value),<sp/>format,<sp/>newValue));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>FormatDateTime(<ref refid="class/system.date_time/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref><sp/>value,<sp/>String<sp/>format,<sp/>CalendarType<sp/>calendarType)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(String::IsNullOrEmpty(mDateFormat))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>newValue<sp/>=<sp/>String::Format(mDateFormat,<sp/>value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_FormatInvocations()-&gt;Add(MakeObject&lt;ExDocumentBuilder::FieldResultFormatter::FormatInvocation&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::DateTime,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System::ObjectExt::Box&lt;String&gt;(String::Format(u</highlight><highlight class="stringliteral">&quot;{0}<sp/>({1})&quot;</highlight><highlight class="normal">,<sp/>value,<sp/>calendarType)),<sp/>format,<sp/>newValue));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/><ref refid="namespace_aspose_1_1_words_1_1_layout_1adb5f76ea5244567304b83f53d4477351a520d0db389f362bf79ef56ca0af3dcab" kindref="member" tooltip="Renders insert and delete revisions inline, format revisions in balloons.">Format</ref>(String<sp/>value,<sp/>GeneralFormat<sp/>format)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_layout_1adb5f76ea5244567304b83f53d4477351a520d0db389f362bf79ef56ca0af3dcab" kindref="member" tooltip="Renders insert and delete revisions inline, format revisions in balloons.">Format</ref>(System::ObjectExt::Box&lt;String&gt;(value),<sp/>format);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/><ref refid="namespace_aspose_1_1_words_1_1_layout_1adb5f76ea5244567304b83f53d4477351a520d0db389f362bf79ef56ca0af3dcab" kindref="member" tooltip="Renders insert and delete revisions inline, format revisions in balloons.">Format</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/>GeneralFormat<sp/>format)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_layout_1adb5f76ea5244567304b83f53d4477351a520d0db389f362bf79ef56ca0af3dcab" kindref="member" tooltip="Renders insert and delete revisions inline, format revisions in balloons.">Format</ref>(System::ObjectExt::Box&lt;double&gt;(value),<sp/>format);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CountFormatInvocations(ExDocumentBuilder::FieldResultFormatter::FormatInvocationType<sp/>formatInvocationType)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatInvocationType<sp/>==<sp/>ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::All)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_FormatInvocations()-&gt;get_Count();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::function&lt;bool(SharedPtr&lt;FormatInvocation&gt;<sp/>f)&gt;<sp/>hasValidFormatInvocationType<sp/>=<sp/>[&amp;formatInvocationType](SharedPtr&lt;FormatInvocation&gt;<sp/>f)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f-&gt;get_FormatInvocationType()<sp/>==<sp/>formatInvocationType;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_FormatInvocations()-&gt;LINQ_Count(hasValidFormatInvocationType);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintFormatInvocations()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>f<sp/>:<sp/>get_FormatInvocations())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(String::Format(u</highlight><highlight class="stringliteral">&quot;Invocation<sp/>type:\t{0}\n&quot;</highlight><highlight class="normal">,<sp/>f-&gt;get_FormatInvocationType())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tOriginal<sp/>value:\t\t{0}\n&quot;</highlight><highlight class="normal">,<sp/>f-&gt;get_Value())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tOriginal<sp/>format:\t{0}\n&quot;</highlight><highlight class="normal">,<sp/>f-&gt;get_OriginalFormat())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tNew<sp/>value:\t\t\t{0}\n&quot;</highlight><highlight class="normal">,<sp/>f-&gt;get_NewValue()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mNumberFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mDateFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>mGeneralFormat;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;ExDocumentBuilder::FieldResultFormatter::FormatInvocation&gt;&gt;&gt;<sp/>mFormatInvocations;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;ExDocumentBuilder::FieldResultFormatter::FormatInvocation&gt;&gt;&gt;<sp/>get_FormatInvocations()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFormatInvocations;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/><ref refid="namespace_aspose_1_1_words_1_1_layout_1adb5f76ea5244567304b83f53d4477351a520d0db389f362bf79ef56ca0af3dcab" kindref="member" tooltip="Renders insert and delete revisions inline, format revisions in balloons.">Format</ref>(SharedPtr&lt;System::Object&gt;<sp/>value,<sp/>GeneralFormat<sp/>format)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(String::IsNullOrEmpty(mGeneralFormat))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>newValue<sp/>=<sp/>String::Format(mGeneralFormat,<sp/>value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_FormatInvocations()-&gt;Add(MakeObject&lt;ExDocumentBuilder::FieldResultFormatter::FormatInvocation&gt;(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApiExamples::ExDocumentBuilder::FieldResultFormatter::FormatInvocationType::General,<sp/>value,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(format),<sp/>newValue));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="930" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2c20eb8142327f98dde7294b479153c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldOptions::get_TemplateName</definition>
        <argsstring>() const</argsstring>
        <name>get_TemplateName</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_TemplateName</qualifiedname>
        <briefdescription>
<para>Gets or sets the file name of the template used by the document. </para>
        </briefdescription>
        <detaileddescription>
<para>This property is used by the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_template" kindref="compound">FieldTemplate</ref> field if the <ref refid="class_aspose_1_1_words_1_1_document_1ac525b4a1f1d73951263e84f893e3bd21" kindref="member">AttachedTemplate</ref> property is empty.</para>
<para>If this property is empty, the default template file name <computeroutput>Normal.dotm</computeroutput> is used.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use a TEMPLATE field to display the local file system location of a document&apos;s template. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>a<sp/>template<sp/>name<sp/>using<sp/>by<sp/>the<sp/>fields.<sp/>This<sp/>property<sp/>is<sp/>used<sp/>when<sp/>the<sp/>&quot;doc.AttachedTemplate&quot;<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>property<sp/>is<sp/>empty<sp/>the<sp/>default<sp/>template<sp/>file<sp/>name<sp/>&quot;Normal.dotm&quot;<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_TemplateName(String::Empty);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTemplate&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab59c0e11dca68c999d3579f9c9585ee6" kindref="member" tooltip="Specifies the TEMPLATE field.">FieldType::FieldTemplate</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TEMPLATE<sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln();</highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldTemplate&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab59c0e11dca68c999d3579f9c9585ee6" kindref="member" tooltip="Specifies the TEMPLATE field.">FieldType::FieldTemplate</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_IncludeFullPath(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TEMPLATE<sp/><sp/>\\p&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TEMPLATE.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="734" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a17ea0be94f5d46dd42116934ff4b5ba7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_toa_categories" kindref="compound">Aspose::Words::Fields::ToaCategories</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::ToaCategories &gt; &amp; Aspose::Words::Fields::FieldOptions::get_ToaCategories</definition>
        <argsstring>() const</argsstring>
        <name>get_ToaCategories</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_ToaCategories</qualifiedname>
        <briefdescription>
<para>Gets or sets the table of authorities categories. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify a set of categories for TOA fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>TOA<sp/>fields<sp/>can<sp/>filter<sp/>their<sp/>entries<sp/>by<sp/>categories<sp/>defined<sp/>in<sp/>this<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toaCategories<sp/>=<sp/>MakeObject&lt;ToaCategories&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_ToaCategories(toaCategories);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>collection<sp/>of<sp/>categories<sp/>comes<sp/>with<sp/>default<sp/>values,<sp/>which<sp/>we<sp/>can<sp/>overwrite<sp/>with<sp/>custom<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Cases&quot;</highlight><highlight class="normal">,<sp/>toaCategories-&gt;idx_get(1));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Statutes&quot;</highlight><highlight class="normal">,<sp/>toaCategories-&gt;idx_get(2));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">toaCategories-&gt;idx_set(1,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>Category<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">toaCategories-&gt;idx_set(2,<sp/>u</highlight><highlight class="stringliteral">&quot;My<sp/>Category<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>always<sp/>access<sp/>the<sp/>default<sp/>values<sp/>via<sp/>this<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Cases&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_fields_1_1_toa_categories_1a2d389283bf7b205692316e274d4fc362" kindref="member" tooltip="Gets the default table of authorities categories.">ToaCategories::get_DefaultCategories</ref>()-&gt;idx_get(1));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Statutes&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_fields_1_1_toa_categories_1a2d389283bf7b205692316e274d4fc362" kindref="member" tooltip="Gets the default table of authorities categories.">ToaCategories::get_DefaultCategories</ref>()-&gt;idx_get(2));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>2<sp/>TOA<sp/>fields.<sp/>TOA<sp/>fields<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;\c&quot;<sp/>switch<sp/>to<sp/>select<sp/>the<sp/>index<sp/>of<sp/>a<sp/>category<sp/>from<sp/>our<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>With<sp/>this<sp/>switch,<sp/>a<sp/>TOA<sp/>field<sp/>will<sp/>only<sp/>pick<sp/>up<sp/>entries<sp/>from<sp/>TA<sp/>fields<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>have<sp/>a<sp/>&quot;\c&quot;<sp/>switch<sp/>with<sp/>a<sp/>matching<sp/>category<sp/>index.<sp/>Each<sp/>TOA<sp/>field<sp/>will<sp/>also<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>name<sp/>of<sp/>the<sp/>category<sp/>that<sp/>its<sp/>&quot;\c&quot;<sp/>switch<sp/>points<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;TOA<sp/>\\c<sp/>1<sp/>\\h&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;TOA<sp/>\\c<sp/>2<sp/>\\h&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>TOA<sp/>entries<sp/>across<sp/>2<sp/>categories.<sp/>Our<sp/>first<sp/>TOA<sp/>field<sp/>will<sp/>receive<sp/>one<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>second<sp/>TA<sp/>field<sp/>whose<sp/>&quot;\c&quot;<sp/>switch<sp/>also<sp/>points<sp/>to<sp/>the<sp/>first<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>TOA<sp/>field<sp/>will<sp/>have<sp/>two<sp/>entries<sp/>from<sp/>the<sp/>other<sp/>two<sp/>TA<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;TA<sp/>\\c<sp/>2<sp/>\\l<sp/>\&quot;entry<sp/>1\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;TA<sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;entry<sp/>2\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;TA<sp/>\\c<sp/>2<sp/>\\l<sp/>\&quot;entry<sp/>3\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FieldOptions.TOA.Categories.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="627" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a724f53b75617a64b0223ab481c2c09eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldOptions::get_UseInvariantCultureNumberFormat</definition>
        <argsstring>() const</argsstring>
        <name>get_UseInvariantCultureNumberFormat</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_UseInvariantCultureNumberFormat</qualifiedname>
        <briefdescription>
<para>Gets or sets the value indicating that number format is parsed using invariant culture or not. </para>
        </briefdescription>
        <detaileddescription>
<para>When this property is set to <bold>true</bold>, number format is taken from an invariant culture.</para>
<para>When this property is set to <bold>false</bold>, number format is taken from the current thread&apos;s culture.</para>
<para>The default value is <bold>false</bold>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to format numbers according to the invariant culture. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.threading.thread/_1a0efc69e64c47fc4e727cdc0473d757f8" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Threading::Thread::get_CurrentThread</ref>()-&gt;set_CurrentCulture(MakeObject&lt;System::Globalization::CultureInfo&gt;(u</highlight><highlight class="stringliteral">&quot;de-DE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>1234567,89<sp/>\\#<sp/>$#,###,###.##&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sometimes,<sp/>fields<sp/>may<sp/>not<sp/>format<sp/>their<sp/>numbers<sp/>correctly<sp/>under<sp/>certain<sp/>cultures.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_FieldOptions()-&gt;get_UseInvariantCultureNumberFormat());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$1234567,89<sp/>.<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>fix<sp/>this,<sp/>we<sp/>could<sp/>change<sp/>the<sp/>culture<sp/>for<sp/>the<sp/>entire<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Another<sp/>way<sp/>to<sp/>fix<sp/>this<sp/>is<sp/>to<sp/>set<sp/>this<sp/>flag,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>gets<sp/>all<sp/>fields<sp/>to<sp/>use<sp/>the<sp/>invariant<sp/>culture<sp/>when<sp/>formatting<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>way<sp/>allows<sp/>us<sp/>to<sp/>avoid<sp/>changing<sp/>the<sp/>culture<sp/>for<sp/>the<sp/>entire<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_UseInvariantCultureNumberFormat(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$1.234.567,89&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="491" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a26fae614c5d96c8f5b1cd146839780d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_user_prompt_respondent" kindref="compound">Aspose::Words::Fields::IFieldUserPromptRespondent</ref> &gt; &amp;</type>
        <definition>const System::SharedPtr&lt; Aspose::Words::Fields::IFieldUserPromptRespondent &gt; &amp; Aspose::Words::Fields::FieldOptions::get_UserPromptRespondent</definition>
        <argsstring>() const</argsstring>
        <name>get_UserPromptRespondent</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::get_UserPromptRespondent</qualifiedname>
        <briefdescription>
<para>Gets or sets the respondent to user prompts during field update. </para>
        </briefdescription>
        <detaileddescription>
<para>If the value of this property is set to <bold>null</bold>, the fields that require user response on prompting (such as <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_ask" kindref="compound">FieldAsk</ref> or <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_fill_in" kindref="compound">FieldFillIn</ref>) are not updated.</para>
<para>The default value is <bold>null</bold>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="191" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a3c90b00435461fbc444b25fa7eb5874e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_BarcodeGenerator</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IBarcodeGenerator &gt; &amp;value)</argsstring>
        <name>set_BarcodeGenerator</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_BarcodeGenerator</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_barcode_generator" kindref="compound">Aspose::Words::Fields::IBarcodeGenerator</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Gets or set custom barcode generator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="500" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e0f8ed0063e35d8911b19a96cd088ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_BuiltInTemplatesPaths</definition>
        <argsstring>(const System::ArrayPtr&lt; System::String &gt; &amp;value)</argsstring>
        <name>set_BuiltInTemplatesPaths</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_BuiltInTemplatesPaths</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa3db347dc23df71fba9af7b904176e4e" kindref="member">Aspose::Words::Fields::FieldOptions::get_BuiltInTemplatesPaths</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="990" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ae4774756bb6087a9cda7ed3b26d0b429" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_ComparisonExpressionEvaluator</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IComparisonExpressionEvaluator &gt; &amp;value)</argsstring>
        <name>set_ComparisonExpressionEvaluator</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_ComparisonExpressionEvaluator</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_comparison_expression_evaluator" kindref="compound">Aspose::Words::Fields::IComparisonExpressionEvaluator</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afd8073c5f8ed694f9ee18c7f5bd978d3" kindref="member">Aspose::Words::Fields::FieldOptions::get_ComparisonExpressionEvaluator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="281" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2f639e7c480f0af0e64aec6d27f84904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_CurrentUser</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::UserInformation &gt; &amp;value)</argsstring>
        <name>set_CurrentUser</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_CurrentUser</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_user_information" kindref="compound">Aspose::Words::Fields::UserInformation</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1d27190d0b1c3dbcca36601eafe89326" kindref="member">Aspose::Words::Fields::FieldOptions::get_CurrentUser</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="580" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8756993cd4e0edca27212a3ee5f6fe8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_CustomTocStyleSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_CustomTocStyleSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_CustomTocStyleSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aecf67be0769cbff464d14d71fa4bf1ca" kindref="member">Aspose::Words::Fields::FieldOptions::get_CustomTocStyleSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="426" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a29350275a412873c4a95d037c5c17d74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_DefaultDocumentAuthor</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_DefaultDocumentAuthor</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_DefaultDocumentAuthor</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa3952472f5c1613734215ec17875eeef" kindref="member">Aspose::Words::Fields::FieldOptions::get_DefaultDocumentAuthor</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="339" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac62301d28deb151059a43798cbb1173e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_FieldDatabaseProvider</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IFieldDatabaseProvider &gt; &amp;value)</argsstring>
        <name>set_FieldDatabaseProvider</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_FieldDatabaseProvider</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_database_provider" kindref="compound">Aspose::Words::Fields::IFieldDatabaseProvider</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a provider that returns a query result for the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_database" kindref="compound">FieldDatabase</ref> field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="506" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a86b8251f6cabc32155ecd78e9880e9e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_FieldIndexFormat</definition>
        <argsstring>(Aspose::Words::Fields::FieldIndexFormat value)</argsstring>
        <name>set_FieldIndexFormat</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_FieldIndexFormat</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_fields_1acf25ece24d4c5aa72fcbc0fee82a9555" kindref="member">Aspose::Words::Fields::FieldIndexFormat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8fa1141b3d0a659bf5d1fc90a9ec1bdb" kindref="member">Aspose::Words::Fields::FieldOptions::get_FieldIndexFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="656" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1af9d917d87eb42c772cd8e4f77b11204a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_FieldUpdateCultureProvider</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IFieldUpdateCultureProvider &gt; &amp;value)</argsstring>
        <name>set_FieldUpdateCultureProvider</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_FieldUpdateCultureProvider</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_update_culture_provider" kindref="compound">Aspose::Words::Fields::IFieldUpdateCultureProvider</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a7ef57d60fb6c87e31327d5c9fc039b6c" kindref="member">Aspose::Words::Fields::FieldOptions::get_FieldUpdateCultureProvider</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="151" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2ebb6009befda1a226f5ff9289a99dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_FieldUpdateCultureSource</definition>
        <argsstring>(Aspose::Words::Fields::FieldUpdateCultureSource value)</argsstring>
        <name>set_FieldUpdateCultureSource</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_FieldUpdateCultureSource</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_fields_1ada00fa769416b360482566a3b6aefc8d" kindref="member">Aspose::Words::Fields::FieldUpdateCultureSource</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e85557629a14de862f3bda0dc79ec57" kindref="member">Aspose::Words::Fields::FieldOptions::get_FieldUpdateCultureSource</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="70" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a5c9dc9b290d64a47169cb888cb9f536a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_FieldUpdatingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IFieldUpdatingCallback &gt; &amp;value)</argsstring>
        <name>set_FieldUpdatingCallback</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_FieldUpdatingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_updating_callback" kindref="compound">Aspose::Words::Fields::IFieldUpdatingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_updating_callback" kindref="compound">IFieldUpdatingCallback</ref> implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="996" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a248d4799433f626a120549c668dc97cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_FileName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_FileName</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_FileName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1dc96af0cfc9e070b3c1d90b5f60872a" kindref="member">Aspose::Words::Fields::FieldOptions::get_FileName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="703" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac283ee3ad7fc15f4b7b40798c1585bf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_IsBidiTextSupportedOnUpdate</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IsBidiTextSupportedOnUpdate</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_IsBidiTextSupportedOnUpdate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac315fda213422e767e9caf5763320810" kindref="member">Aspose::Words::Fields::FieldOptions::get_IsBidiTextSupportedOnUpdate</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="183" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a05ae815d59bbd97b5658a0770ba42315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_LegacyNumberFormat</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_LegacyNumberFormat</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_LegacyNumberFormat</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8db83ae0832598d84bdf075d6a45556c" kindref="member">Aspose::Words::Fields::FieldOptions::get_LegacyNumberFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="458" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aec97d792978cbc7ac437bf8e50e3e116" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_PreProcessCulture</definition>
        <argsstring>(const System::SharedPtr&lt; System::Globalization::CultureInfo &gt; &amp;value)</argsstring>
        <name>set_PreProcessCulture</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_PreProcessCulture</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.globalization.culture_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2bec5dd5dae0a7f1335b79ccd26c3515" kindref="member">Aspose::Words::Fields::FieldOptions::get_PreProcessCulture</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="540" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa2ae28bd8625dea599d006df41c4febc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_ResultFormatter</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IFieldResultFormatter &gt; &amp;value)</argsstring>
        <name>set_ResultFormatter</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_ResultFormatter</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_result_formatter" kindref="compound">Aspose::Words::Fields::IFieldResultFormatter</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afdfa3525680a133ea90874a53bf1aa5c" kindref="member">Aspose::Words::Fields::FieldOptions::get_ResultFormatter</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="933" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ab37de7b31a7a32746a2278ffd53d959b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_TemplateName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_TemplateName</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_TemplateName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2c20eb8142327f98dde7294b479153c7" kindref="member">Aspose::Words::Fields::FieldOptions::get_TemplateName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="737" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a93d71ff4994e52c3ddf1fc01f09c7b31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_ToaCategories</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::ToaCategories &gt; &amp;value)</argsstring>
        <name>set_ToaCategories</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_ToaCategories</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_toa_categories" kindref="compound">Aspose::Words::Fields::ToaCategories</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a17ea0be94f5d46dd42116934ff4b5ba7" kindref="member">Aspose::Words::Fields::FieldOptions::get_ToaCategories</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="630" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a452c69194a9aa59c7dcaa1fc03a1b478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_UseInvariantCultureNumberFormat</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UseInvariantCultureNumberFormat</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_UseInvariantCultureNumberFormat</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a724f53b75617a64b0223ab481c2c09eb" kindref="member">Aspose::Words::Fields::FieldOptions::get_UseInvariantCultureNumberFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="494" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a6d17e271ee0faa5b0d0b10db3bb2eec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldOptions::set_UserPromptRespondent</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fields::IFieldUserPromptRespondent &gt; &amp;value)</argsstring>
        <name>set_UserPromptRespondent</name>
        <qualifiedname>Aspose::Words::Fields::FieldOptions::set_UserPromptRespondent</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_i_field_user_prompt_respondent" kindref="compound">Aspose::Words::Fields::IFieldUserPromptRespondent</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a26fae614c5d96c8f5b1cd146839780d2" kindref="member">Aspose::Words::Fields::FieldOptions::get_UserPromptRespondent</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="194" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents options to control field handling in a document. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Fields::FieldOptions</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Fields::FieldOptions</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/FieldOptions.h" line="52" column="1" bodyfile="Aspose.Words.Cpp/Fields/FieldOptions.h" bodystart="53" bodyend="1023"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a23287978aae989beeb10616caaffe831" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afbd1d6ced037d19b397fb6d019ac36e6" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_BarcodeGenerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa3db347dc23df71fba9af7b904176e4e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_BuiltInTemplatesPaths</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afd8073c5f8ed694f9ee18c7f5bd978d3" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_ComparisonExpressionEvaluator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1d27190d0b1c3dbcca36601eafe89326" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_CurrentUser</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aecf67be0769cbff464d14d71fa4bf1ca" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_CustomTocStyleSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa3952472f5c1613734215ec17875eeef" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_DefaultDocumentAuthor</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aca39b0d04b2a4695b01f1c98a93f58a5" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_FieldDatabaseProvider</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8fa1141b3d0a659bf5d1fc90a9ec1bdb" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_FieldIndexFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a7ef57d60fb6c87e31327d5c9fc039b6c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_FieldUpdateCultureProvider</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e85557629a14de862f3bda0dc79ec57" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_FieldUpdateCultureSource</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a95ee8da669ce204a517051f3a3c62068" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_FieldUpdatingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1dc96af0cfc9e070b3c1d90b5f60872a" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_FileName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac315fda213422e767e9caf5763320810" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_IsBidiTextSupportedOnUpdate</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8db83ae0832598d84bdf075d6a45556c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_LegacyNumberFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2bec5dd5dae0a7f1335b79ccd26c3515" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_PreProcessCulture</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1afdfa3525680a133ea90874a53bf1aa5c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_ResultFormatter</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2c20eb8142327f98dde7294b479153c7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_TemplateName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a17ea0be94f5d46dd42116934ff4b5ba7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_ToaCategories</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a724f53b75617a64b0223ab481c2c09eb" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_UseInvariantCultureNumberFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a26fae614c5d96c8f5b1cd146839780d2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>get_UserPromptRespondent</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aea585a357e8afca31c4a4283c65eef29" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aacc270736a064849c2c6e8171e1db2f6" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a9c056a703fdeef63192316e74e10c92d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField10</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ad1eca3a9197a4b1fbc6be0cd1744633e" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField11</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2afa9ee5488c02a574392925e2f008a1" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField12</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a61a3f658ecd6de344effff706e6478cb" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField13</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a3f48f22109a344e2360210abf6ced88b" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField14</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a5a586b33fd011fa20c6add8a3db0810b" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField15</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ab16fc0a658fe6c7e0436af24942899b3" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField16</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac407d0cf21c7f0afeaa28bf7a852be46" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField17</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aeaa6ce724b423e245c21ba73e4fb1b9d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField18</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ad904555a9b3e930792b2b719b9d6e074" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField19</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1abeb375f65c203712a065113f88a11dfd" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a35051b3285795965c4dbd644345f672c" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a12d27ddb324aa24aff0f1e3aa3285cf2" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a75a52fa785549e3a7a54481d01d3d2bd" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a50dd5584f5a3c7e5de9fdbffbe853380" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a0c7431a088de79594b5daab8af9bdffb" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a05f17af0332919ead1c9afb1c4ee2e22" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField8</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aac9c8da40202cd1453fdab2767bc38e8" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>mField9</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e6fd0c1f43162c82f7489369663025b" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a3c90b00435461fbc444b25fa7eb5874e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_BarcodeGenerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a1e0f8ed0063e35d8911b19a96cd088ce" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_BuiltInTemplatesPaths</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ae4774756bb6087a9cda7ed3b26d0b429" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_ComparisonExpressionEvaluator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2f639e7c480f0af0e64aec6d27f84904" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_CurrentUser</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a8756993cd4e0edca27212a3ee5f6fe8e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_CustomTocStyleSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a29350275a412873c4a95d037c5c17d74" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_DefaultDocumentAuthor</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac62301d28deb151059a43798cbb1173e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_FieldDatabaseProvider</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a86b8251f6cabc32155ecd78e9880e9e1" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_FieldIndexFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1af9d917d87eb42c772cd8e4f77b11204a" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_FieldUpdateCultureProvider</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a2ebb6009befda1a226f5ff9289a99dd0" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_FieldUpdateCultureSource</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a5c9dc9b290d64a47169cb888cb9f536a" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_FieldUpdatingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a248d4799433f626a120549c668dc97cf" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_FileName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ac283ee3ad7fc15f4b7b40798c1585bf6" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_IsBidiTextSupportedOnUpdate</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a05ae815d59bbd97b5658a0770ba42315" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_LegacyNumberFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aec97d792978cbc7ac437bf8e50e3e116" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_PreProcessCulture</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1aa2ae28bd8625dea599d006df41c4febc" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_ResultFormatter</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1ab37de7b31a7a32746a2278ffd53d959b" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_TemplateName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a93d71ff4994e52c3ddf1fc01f09c7b31" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_ToaCategories</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a452c69194a9aa59c7dcaa1fc03a1b478" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_UseInvariantCultureNumberFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a6d17e271ee0faa5b0d0b10db3bb2eec6" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>set_UserPromptRespondent</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a94299875f676865837fa1f4cc0ccd218" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_options_1a639344b726df5d352af8854b9bd1f36d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldOptions</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
