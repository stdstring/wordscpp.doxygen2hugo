<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fonts::PhysicalFontInfo</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_physical_font_info_8h" local="no">Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1aa95b81e7d8e4ebffe0f2cd5b989376d5" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Fonts::PhysicalFontInfo::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="41" column="28" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1ae27c0c530c0faf87f4d5670ea0745f2a" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info" kindref="compound">PhysicalFontInfo</ref></type>
        <definition>typedef PhysicalFontInfo Aspose::Words::Fonts::PhysicalFontInfo::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="40" column="30" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a1b45caf929a926171aff389bd8939487" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Fonts::PhysicalFontInfo::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="43" column="37" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a7c4f131ee58c3fc06f4598ce182036ce" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="128" column="20" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a304886da961171a0286dca7f801c7b17" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="129" column="20" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a45cec90e155b9a8a161533258e5ec5bc" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="130" column="20" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a0aed88d7f72e6ba668d5400ebf998be8" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="131" column="20" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a2f56b5a12b1a3af5b040c9021af84e2d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fonts::PhysicalFontInfo::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="44" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a741dcc6e40efd6aa47a2c253625967fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::get_FilePath</definition>
        <argsstring>() const</argsstring>
        <name>get_FilePath</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::get_FilePath</qualifiedname>
        <briefdescription>
<para>Path to the font file if any. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to list available fonts. <programlisting><codeline><highlight class="comment">//<sp/>Configure<sp/>Aspose.Words<sp/>to<sp/>source<sp/>fonts<sp/>from<sp/>a<sp/>custom<sp/>folder,<sp/>and<sp/>then<sp/>print<sp/>every<sp/>available<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;FontSourceBase&gt;&gt;<sp/>folderFontSource<sp/>=<sp/>MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fontInfo<sp/>:<sp/>System::IterateOver(folderFontSource[0]-&gt;GetAvailableFonts()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FontFamilyName<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FontFamilyName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FullFontName<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FullFontName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_Version()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FilePath<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FilePath()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="122" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1ab683526625d8b1422282f6163938044a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::get_FontFamilyName</definition>
        <argsstring>() const</argsstring>
        <name>get_FontFamilyName</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::get_FontFamilyName</qualifiedname>
        <briefdescription>
<para>Family name of the font. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to list available fonts. <programlisting><codeline><highlight class="comment">//<sp/>Configure<sp/>Aspose.Words<sp/>to<sp/>source<sp/>fonts<sp/>from<sp/>a<sp/>custom<sp/>folder,<sp/>and<sp/>then<sp/>print<sp/>every<sp/>available<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;FontSourceBase&gt;&gt;<sp/>folderFontSource<sp/>=<sp/>MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fontInfo<sp/>:<sp/>System::IterateOver(folderFontSource[0]-&gt;GetAvailableFonts()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FontFamilyName<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FontFamilyName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FullFontName<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FullFontName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_Version()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FilePath<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FilePath()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="65" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a62053c1807627d2e39e7e90992b1ae25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::get_FullFontName</definition>
        <argsstring>() const</argsstring>
        <name>get_FullFontName</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::get_FullFontName</qualifiedname>
        <briefdescription>
<para>Full name of the font. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to list available fonts. <programlisting><codeline><highlight class="comment">//<sp/>Configure<sp/>Aspose.Words<sp/>to<sp/>source<sp/>fonts<sp/>from<sp/>a<sp/>custom<sp/>folder,<sp/>and<sp/>then<sp/>print<sp/>every<sp/>available<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;FontSourceBase&gt;&gt;<sp/>folderFontSource<sp/>=<sp/>MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fontInfo<sp/>:<sp/>System::IterateOver(folderFontSource[0]-&gt;GetAvailableFonts()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FontFamilyName<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FontFamilyName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FullFontName<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FullFontName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_Version()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FilePath<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FilePath()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="84" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1aa699f40f8cf770cd050613dbb98b6ad5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fonts::PhysicalFontInfo::get_Version</definition>
        <argsstring>() const</argsstring>
        <name>get_Version</name>
        <qualifiedname>Aspose::Words::Fonts::PhysicalFontInfo::get_Version</qualifiedname>
        <briefdescription>
<para>Version string of the font. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to list available fonts. <programlisting><codeline><highlight class="comment">//<sp/>Configure<sp/>Aspose.Words<sp/>to<sp/>source<sp/>fonts<sp/>from<sp/>a<sp/>custom<sp/>folder,<sp/>and<sp/>then<sp/>print<sp/>every<sp/>available<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;FontSourceBase&gt;&gt;<sp/>folderFontSource<sp/>=<sp/>MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fontInfo<sp/>:<sp/>System::IterateOver(folderFontSource[0]-&gt;GetAvailableFonts()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FontFamilyName<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FontFamilyName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FullFontName<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FullFontName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_Version()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FilePath<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FilePath()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="103" column="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specifies information about physical font available to Aspose.Words font engine. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to list available fonts. <programlisting><codeline><highlight class="comment">//<sp/>Configure<sp/>Aspose.Words<sp/>to<sp/>source<sp/>fonts<sp/>from<sp/>a<sp/>custom<sp/>folder,<sp/>and<sp/>then<sp/>print<sp/>every<sp/>available<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;FontSourceBase&gt;&gt;<sp/>folderFontSource<sp/>=<sp/>MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fontInfo<sp/>:<sp/>System::IterateOver(folderFontSource[0]-&gt;GetAvailableFonts()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FontFamilyName<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FontFamilyName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FullFontName<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FullFontName()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Version<sp/><sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_Version()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FilePath<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fontInfo-&gt;get_FilePath()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Fonts::PhysicalFontInfo</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Fonts::PhysicalFontInfo</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" line="38" column="1" bodyfile="Aspose.Words.Cpp/Fonts/PhysicalFontInfo.h" bodystart="39" bodyend="133"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1aa95b81e7d8e4ebffe0f2cd5b989376d5" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a741dcc6e40efd6aa47a2c253625967fd" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>get_FilePath</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1ab683526625d8b1422282f6163938044a" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>get_FontFamilyName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a62053c1807627d2e39e7e90992b1ae25" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>get_FullFontName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1aa699f40f8cf770cd050613dbb98b6ad5" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>get_Version</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a7c4f131ee58c3fc06f4598ce182036ce" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a304886da961171a0286dca7f801c7b17" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a45cec90e155b9a8a161533258e5ec5bc" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a0aed88d7f72e6ba668d5400ebf998be8" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a2f56b5a12b1a3af5b040c9021af84e2d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1ae27c0c530c0faf87f4d5670ea0745f2a" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_physical_font_info_1a1b45caf929a926171aff389bd8939487" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::PhysicalFontInfo</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
