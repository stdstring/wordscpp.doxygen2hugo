<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_editable_range_start" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Aspose::Words::EditableRangeStart</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_node" prot="public" virt="non-virtual">Aspose::Words::Node</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::IDisplaceableByCustomXml</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::INodeWithAnnotationId</basecompoundref>
    <includes refid="_editable_range_start_8h" local="no">Aspose.Words.Cpp/EditableRangeStart.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_editable_range_start_1a5176c64831432274b8313125af88c779" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref></type>
        <definition>typedef Aspose::Words::Node Aspose::Words::EditableRangeStart::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="173" column="33" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_editable_range_start_1ac57cb09d77b1a22b5aa165d2fa491a24" prot="private" static="no">
        <type>Aspose::Words::IDisplaceableByCustomXml</type>
        <definition>typedef Aspose::Words::IDisplaceableByCustomXml Aspose::Words::EditableRangeStart::BaseType1</definition>
        <argsstring></argsstring>
        <name>BaseType1</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::BaseType1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="174" column="53" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_editable_range_start_1aa9967fce019b427d027f927f6f052ffd" prot="private" static="no">
        <type>Aspose::Words::INodeWithAnnotationId</type>
        <definition>typedef Aspose::Words::INodeWithAnnotationId Aspose::Words::EditableRangeStart::BaseType2</definition>
        <argsstring></argsstring>
        <name>BaseType2</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::BaseType2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="175" column="50" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_editable_range_start_1a4255df8198b80497746f2251fbf09dcc" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_editable_range_start" kindref="compound">EditableRangeStart</ref></type>
        <definition>typedef EditableRangeStart Aspose::Words::EditableRangeStart::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="172" column="32" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_editable_range_start_1a06d18a93c231d9f5d92c9c393d188476" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">BaseType</ref>, BaseType1, BaseType2 &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType, BaseType1, BaseType2&gt; Aspose::Words::EditableRangeStart::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="177" column="37" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_editable_range_start_1a76723f1395fa0db772faae58430455f1" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::EditableRangeStart::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="460" column="23" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_editable_range_start_1a035ea3132662858cf7a34e137027eac3" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::EditableRangeStart::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="461" column="23" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_editable_range_start_1adb85d661efa52819262b65b2d3e0c694" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::EditableRangeStart::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="462" column="20" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_editable_range_start_1a0473c12c5ab48b43335813834cda05f2" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::EditableRangeStart::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="463" column="23" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_editable_range_start_1a0ef4d6e58e88dea227f5d2187f5d9082" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::EditableRangeStart::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="464" column="23" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1aef78125c6bfdb948f11463fff56450af" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::EditableRangeStart::~EditableRangeStart</definition>
        <argsstring>()</argsstring>
        <name>~EditableRangeStart</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::~EditableRangeStart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="449" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1a4688b9d85005d77e0f302e7e84ef581d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_aspose_1_1_words_1_1_editable_range_start" kindref="compound">ThisType</ref> *</type>
        <definition>ThisType * Aspose::Words::EditableRangeStart::CppMemberwiseClone</definition>
        <argsstring>() const override</argsstring>
        <name>CppMemberwiseClone</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::CppMemberwiseClone</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a9358fb4208d077e8411fdf0d4e8553e5">CppMemberwiseClone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="466" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1a24e730dffba20f396fc0d9041f45889c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Aspose::Words::Revisions::DisplacedByType</type>
        <definition>Aspose::Words::Revisions::DisplacedByType Aspose::Words::EditableRangeStart::get_DisplacedByCustomXml</definition>
        <argsstring>() override</argsstring>
        <name>get_DisplacedByCustomXml</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::get_DisplacedByCustomXml</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="453" column="47"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1ad9defa173aba4dec14152dfe235ec70d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::EditableRangeStart::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="178" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1a2e1c21e60979ca42c4d555b40e3b053d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::EditableRangeStart::set_DisplacedByCustomXml</definition>
        <argsstring>(Aspose::Words::Revisions::DisplacedByType) override</argsstring>
        <name>set_DisplacedByCustomXml</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::set_DisplacedByCustomXml</qualifiedname>
        <param>
          <type>Aspose::Words::Revisions::DisplacedByType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="454" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1a5e00c4fc700572f9b1805d2689064bcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::EditableRangeStart::Accept</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::DocumentVisitor &gt; visitor) override</argsstring>
        <name>Accept</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::Accept</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a556472e35a86820cf189f10594933f3e">Accept</reimplements>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_document_visitor" kindref="compound">Aspose::Words::DocumentVisitor</ref> &gt;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Accepts a visitor. </para>
        </briefdescription>
        <detaileddescription>
<para>Calls <ref refid="class_aspose_1_1_words_1_1_document_visitor_1a66b88556fa38b56b63ee324fbf54c2b8" kindref="member">VisitEditableRangeStart()</ref>.</para>
<para>For more info see the Visitor design pattern.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>visitor</parametername>
</parameternamelist>
<parameterdescription>
<para>The visitor that will visit the node.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>False if the visitor requested the enumeration to stop.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to limit the editing rights of editable ranges to a specific group/user. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visitor()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Protect(<ref refid="namespace_aspose_1_1_words_1a4b3be683cf728f992b0c78c0ce8acd60a131fb182a881796e7606ed6da27f1197" kindref="member" tooltip="No changes are allowed to the document. Available since Microsoft Word 2003.">ProtectionType::ReadOnly</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!<sp/>Since<sp/>we<sp/>have<sp/>set<sp/>the<sp/>document&apos;s<sp/>protection<sp/>level<sp/>to<sp/>read-only,&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;<sp/>we<sp/>cannot<sp/>edit<sp/>this<sp/>paragraph<sp/>without<sp/>the<sp/>password.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>write-protect<sp/>documents,<sp/>editable<sp/>ranges<sp/>allow<sp/>us<sp/>to<sp/>pick<sp/>specific<sp/>areas<sp/>that<sp/>users<sp/>may<sp/>edit.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>mutually<sp/>exclusive<sp/>ways<sp/>to<sp/>narrow<sp/>down<sp/>the<sp/>list<sp/>of<sp/>allowed<sp/>editors.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Specify<sp/>a<sp/>user:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;EditableRange&gt;<sp/>editableRange<sp/>=<sp/>builder-&gt;StartEditableRange()-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>editableRange-&gt;set_SingleUser(u</highlight><highlight class="stringliteral">&quot;john.doe@myoffice.com&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>the<sp/>first<sp/>editable<sp/>range,<sp/>can<sp/>only<sp/>be<sp/>edited<sp/>by<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>editableRange-&gt;get_SingleUser()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a91d5f723074b64ad6e414ec9a2e7f773a6fcdc090caeade09d0efd6253932b6f5" kindref="member" tooltip="Means that editor type is not specified.">EditorType::Unspecified</ref>,<sp/>editableRange-&gt;get_EditorGroup());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Specify<sp/>a<sp/>group<sp/>that<sp/>allowed<sp/>users<sp/>are<sp/>associated<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>editableRange<sp/>=<sp/>builder-&gt;StartEditableRange()-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>editableRange-&gt;set_EditorGroup(<ref refid="namespace_aspose_1_1_words_1a91d5f723074b64ad6e414ec9a2e7f773ac1ec1d62eafad32ca16fe4df49b9ca2f" kindref="member" tooltip="Specifies that users associated with the Administrators group shall be allowed to edit editable range...">EditorType::Administrators</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>the<sp/>first<sp/>editable<sp/>range,<sp/>can<sp/>only<sp/>be<sp/>edited<sp/>by<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>editableRange-&gt;get_EditorGroup()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>editableRange-&gt;get_SingleUser());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>outside<sp/>the<sp/>editable<sp/>range,<sp/>and<sp/>cannot<sp/>be<sp/>edited<sp/>by<sp/>anybody.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>details<sp/>and<sp/>contents<sp/>of<sp/>every<sp/>editable<sp/>range<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>editableRangePrinter<sp/>=<sp/>MakeObject&lt;ExEditableRange::EditableRangePrinter&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Accept(editableRangePrinter);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>editableRangePrinter-&gt;ToText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">EditableRangePrinter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>EditableRangePrinter()<sp/>:<sp/>mInsideEditableRange(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>ToText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInsideEditableRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitEditableRangeStart(SharedPtr&lt;EditableRangeStart&gt;<sp/>editableRangeStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(u</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>Editable<sp/>range<sp/>found!<sp/>--<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tID:\t\t&quot;</highlight><highlight class="normal">)<sp/>+<sp/>editableRangeStart-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editableRangeStart-&gt;get_EditableRange()-&gt;get_SingleUser()<sp/>==<sp/>String::Empty)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tGroup:\t&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(editableRangeStart-&gt;get_EditableRange()-&gt;get_EditorGroup()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tUser:\t&quot;</highlight><highlight class="normal">)<sp/>+<sp/>editableRangeStart-&gt;get_EditableRange()-&gt;get_SingleUser());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(u</highlight><highlight class="stringliteral">&quot;\tContents:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInsideEditableRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitEditableRangeEnd(SharedPtr&lt;EditableRangeEnd&gt;<sp/>editableRangeEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(u</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>End<sp/>of<sp/>editable<sp/>range<sp/>--\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInsideEditableRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitRun(SharedPtr&lt;Run&gt;<sp/>run)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInsideEditableRange)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\t\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>run-&gt;get_Text()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInsideEditableRange;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="445" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1af14ff018661f7138a7de5083f608c45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_editable_range" kindref="compound">Aspose::Words::EditableRange</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::EditableRange &gt; Aspose::Words::EditableRangeStart::get_EditableRange</definition>
        <argsstring>()</argsstring>
        <name>get_EditableRange</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::get_EditableRange</qualifiedname>
        <briefdescription>
<para>Gets the facade object that encapsulates this editable range start and end. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with an editable range. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Protect(<ref refid="namespace_aspose_1_1_words_1a4b3be683cf728f992b0c78c0ce8acd60a131fb182a881796e7606ed6da27f1197" kindref="member" tooltip="No changes are allowed to the document. Available since Microsoft Word 2003.">ProtectionType::ReadOnly</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!<sp/>Since<sp/>we<sp/>have<sp/>set<sp/>the<sp/>document&apos;s<sp/>protection<sp/>level<sp/>to<sp/>read-only,&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;<sp/>we<sp/>cannot<sp/>edit<sp/>this<sp/>paragraph<sp/>without<sp/>the<sp/>password.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Editable<sp/>ranges<sp/>allow<sp/>us<sp/>to<sp/>leave<sp/>parts<sp/>of<sp/>protected<sp/>documents<sp/>open<sp/>for<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRangeStart&gt;<sp/>editableRangeStart<sp/>=<sp/>builder-&gt;StartEditableRange();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>an<sp/>editable<sp/>range,<sp/>and<sp/>can<sp/>be<sp/>edited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRangeEnd&gt;<sp/>editableRangeEnd<sp/>=<sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>well-formed<sp/>editable<sp/>range<sp/>has<sp/>a<sp/>start<sp/>node,<sp/>and<sp/>end<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>nodes<sp/>have<sp/>matching<sp/>IDs<sp/>and<sp/>encompass<sp/>editable<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRange&gt;<sp/>editableRange<sp/>=<sp/>editableRangeStart-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRange-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeEnd-&gt;get_Id(),<sp/>editableRange-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>parts<sp/>of<sp/>the<sp/>editable<sp/>range<sp/>link<sp/>to<sp/>each<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRange-&gt;get_EditableRangeStart()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRangeEnd-&gt;get_EditableRangeStart()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRange-&gt;get_Id(),<sp/>editableRangeStart-&gt;get_EditableRange()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeEnd-&gt;get_Id(),<sp/>editableRange-&gt;get_EditableRangeEnd()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>node<sp/>types<sp/>of<sp/>each<sp/>part<sp/>like<sp/>this.<sp/>The<sp/>editable<sp/>range<sp/>itself<sp/>is<sp/>not<sp/>a<sp/>node,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>an<sp/>entity<sp/>which<sp/>consists<sp/>of<sp/>a<sp/>start,<sp/>an<sp/>end,<sp/>and<sp/>their<sp/>enclosed<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ab88eb18c19662bf66714b9ac6f20b1fc" kindref="member" tooltip="A beginning of an editable range.">NodeType::EditableRangeStart</ref>,<sp/>editableRangeStart-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a65e9b68ed547a62d4d9eb928da137251" kindref="member" tooltip="An end of an editable range.">NodeType::EditableRangeEnd</ref>,<sp/>editableRangeEnd-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>outside<sp/>the<sp/>editable<sp/>range,<sp/>and<sp/>cannot<sp/>be<sp/>edited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;EditableRange.CreateAndRemove.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>an<sp/>editable<sp/>range.<sp/>All<sp/>the<sp/>nodes<sp/>that<sp/>were<sp/>inside<sp/>the<sp/>range<sp/>will<sp/>remain<sp/>intact.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">editableRange-&gt;Remove();</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="273" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1aeaf360cfee6dd126f10ecbaa68cfc8f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::EditableRangeStart::get_Id</definition>
        <argsstring>() const</argsstring>
        <name>get_Id</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::get_Id</qualifiedname>
        <briefdescription>
<para>Specifies the identifier of the editable range. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with an editable range. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Protect(<ref refid="namespace_aspose_1_1_words_1a4b3be683cf728f992b0c78c0ce8acd60a131fb182a881796e7606ed6da27f1197" kindref="member" tooltip="No changes are allowed to the document. Available since Microsoft Word 2003.">ProtectionType::ReadOnly</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!<sp/>Since<sp/>we<sp/>have<sp/>set<sp/>the<sp/>document&apos;s<sp/>protection<sp/>level<sp/>to<sp/>read-only,&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;<sp/>we<sp/>cannot<sp/>edit<sp/>this<sp/>paragraph<sp/>without<sp/>the<sp/>password.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Editable<sp/>ranges<sp/>allow<sp/>us<sp/>to<sp/>leave<sp/>parts<sp/>of<sp/>protected<sp/>documents<sp/>open<sp/>for<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRangeStart&gt;<sp/>editableRangeStart<sp/>=<sp/>builder-&gt;StartEditableRange();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>an<sp/>editable<sp/>range,<sp/>and<sp/>can<sp/>be<sp/>edited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRangeEnd&gt;<sp/>editableRangeEnd<sp/>=<sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>well-formed<sp/>editable<sp/>range<sp/>has<sp/>a<sp/>start<sp/>node,<sp/>and<sp/>end<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>nodes<sp/>have<sp/>matching<sp/>IDs<sp/>and<sp/>encompass<sp/>editable<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRange&gt;<sp/>editableRange<sp/>=<sp/>editableRangeStart-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRange-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeEnd-&gt;get_Id(),<sp/>editableRange-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>parts<sp/>of<sp/>the<sp/>editable<sp/>range<sp/>link<sp/>to<sp/>each<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRange-&gt;get_EditableRangeStart()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRangeEnd-&gt;get_EditableRangeStart()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRange-&gt;get_Id(),<sp/>editableRangeStart-&gt;get_EditableRange()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeEnd-&gt;get_Id(),<sp/>editableRange-&gt;get_EditableRangeEnd()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>node<sp/>types<sp/>of<sp/>each<sp/>part<sp/>like<sp/>this.<sp/>The<sp/>editable<sp/>range<sp/>itself<sp/>is<sp/>not<sp/>a<sp/>node,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>an<sp/>entity<sp/>which<sp/>consists<sp/>of<sp/>a<sp/>start,<sp/>an<sp/>end,<sp/>and<sp/>their<sp/>enclosed<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ab88eb18c19662bf66714b9ac6f20b1fc" kindref="member" tooltip="A beginning of an editable range.">NodeType::EditableRangeStart</ref>,<sp/>editableRangeStart-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a65e9b68ed547a62d4d9eb928da137251" kindref="member" tooltip="An end of an editable range.">NodeType::EditableRangeEnd</ref>,<sp/>editableRangeEnd-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>outside<sp/>the<sp/>editable<sp/>range,<sp/>and<sp/>cannot<sp/>be<sp/>edited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;EditableRange.CreateAndRemove.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>an<sp/>editable<sp/>range.<sp/>All<sp/>the<sp/>nodes<sp/>that<sp/>were<sp/>inside<sp/>the<sp/>range<sp/>will<sp/>remain<sp/>intact.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">editableRange-&gt;Remove();</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="225" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1acaea0b40efdeae565e3881024b33f1a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379" kindref="member">Aspose::Words::NodeType</ref></type>
        <definition>Aspose::Words::NodeType Aspose::Words::EditableRangeStart::get_NodeType</definition>
        <argsstring>() const override</argsstring>
        <name>get_NodeType</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::get_NodeType</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_node_1a7f80e8d96b7a072fca14157b25ae025e">get_NodeType</reimplements>
        <briefdescription>
<para>Returns <ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ab88eb18c19662bf66714b9ac6f20b1fc" kindref="member">EditableRangeStart</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with an editable range. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Protect(<ref refid="namespace_aspose_1_1_words_1a4b3be683cf728f992b0c78c0ce8acd60a131fb182a881796e7606ed6da27f1197" kindref="member" tooltip="No changes are allowed to the document. Available since Microsoft Word 2003.">ProtectionType::ReadOnly</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!<sp/>Since<sp/>we<sp/>have<sp/>set<sp/>the<sp/>document&apos;s<sp/>protection<sp/>level<sp/>to<sp/>read-only,&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;<sp/>we<sp/>cannot<sp/>edit<sp/>this<sp/>paragraph<sp/>without<sp/>the<sp/>password.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Editable<sp/>ranges<sp/>allow<sp/>us<sp/>to<sp/>leave<sp/>parts<sp/>of<sp/>protected<sp/>documents<sp/>open<sp/>for<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRangeStart&gt;<sp/>editableRangeStart<sp/>=<sp/>builder-&gt;StartEditableRange();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>an<sp/>editable<sp/>range,<sp/>and<sp/>can<sp/>be<sp/>edited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRangeEnd&gt;<sp/>editableRangeEnd<sp/>=<sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>well-formed<sp/>editable<sp/>range<sp/>has<sp/>a<sp/>start<sp/>node,<sp/>and<sp/>end<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>nodes<sp/>have<sp/>matching<sp/>IDs<sp/>and<sp/>encompass<sp/>editable<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;EditableRange&gt;<sp/>editableRange<sp/>=<sp/>editableRangeStart-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRange-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeEnd-&gt;get_Id(),<sp/>editableRange-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>parts<sp/>of<sp/>the<sp/>editable<sp/>range<sp/>link<sp/>to<sp/>each<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRange-&gt;get_EditableRangeStart()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeStart-&gt;get_Id(),<sp/>editableRangeEnd-&gt;get_EditableRangeStart()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRange-&gt;get_Id(),<sp/>editableRangeStart-&gt;get_EditableRange()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(editableRangeEnd-&gt;get_Id(),<sp/>editableRange-&gt;get_EditableRangeEnd()-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>access<sp/>the<sp/>node<sp/>types<sp/>of<sp/>each<sp/>part<sp/>like<sp/>this.<sp/>The<sp/>editable<sp/>range<sp/>itself<sp/>is<sp/>not<sp/>a<sp/>node,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>an<sp/>entity<sp/>which<sp/>consists<sp/>of<sp/>a<sp/>start,<sp/>an<sp/>end,<sp/>and<sp/>their<sp/>enclosed<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379ab88eb18c19662bf66714b9ac6f20b1fc" kindref="member" tooltip="A beginning of an editable range.">NodeType::EditableRangeStart</ref>,<sp/>editableRangeStart-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a65e9b68ed547a62d4d9eb928da137251" kindref="member" tooltip="An end of an editable range.">NodeType::EditableRangeEnd</ref>,<sp/>editableRangeEnd-&gt;get_NodeType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>outside<sp/>the<sp/>editable<sp/>range,<sp/>and<sp/>cannot<sp/>be<sp/>edited.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;EditableRange.CreateAndRemove.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>an<sp/>editable<sp/>range.<sp/>All<sp/>the<sp/>nodes<sp/>that<sp/>were<sp/>inside<sp/>the<sp/>range<sp/>will<sp/>remain<sp/>intact.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">editableRange-&gt;Remove();</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="318" column="32"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_editable_range_start_1a96264f5958568e59f2f933e8ced74324" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::EditableRangeStart::set_Id</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Id</name>
        <qualifiedname>Aspose::Words::EditableRangeStart::set_Id</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_editable_range_start_1aeaf360cfee6dd126f10ecbaa68cfc8f9" kindref="member">Aspose::Words::EditableRangeStart::get_Id</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="228" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a start of an editable range in a Word document. </para>
    </briefdescription>
    <detaileddescription>
<para>A complete editable range in a Word document consists of a <ref refid="class_aspose_1_1_words_1_1_editable_range_start" kindref="compound">EditableRangeStart</ref> and a matching <ref refid="class_aspose_1_1_words_1_1_editable_range_end" kindref="compound">EditableRangeEnd</ref> with the same Id.</para>
<para><ref refid="class_aspose_1_1_words_1_1_editable_range_start" kindref="compound">EditableRangeStart</ref> and <ref refid="class_aspose_1_1_words_1_1_editable_range_end" kindref="compound">EditableRangeEnd</ref> are just markers inside a document that specify where the editable range starts and ends.</para>
<para>Use the <ref refid="class_aspose_1_1_words_1_1_editable_range_start_1af14ff018661f7138a7de5083f608c45a" kindref="member">EditableRange</ref> class as a &quot;facade&quot; to work with an editable range as a single object.</para>
<para><simplesect kind="note"><para>Currently editable ranges are supported only at the inline-level, that is inside <ref refid="class_aspose_1_1_words_1_1_paragraph" kindref="compound">Paragraph</ref>, but editable range start and editable range end can be in different paragraphs.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to limit the editing rights of editable ranges to a specific group/user. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Visitor()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Protect(<ref refid="namespace_aspose_1_1_words_1a4b3be683cf728f992b0c78c0ce8acd60a131fb182a881796e7606ed6da27f1197" kindref="member" tooltip="No changes are allowed to the document. Available since Microsoft Word 2003.">ProtectionType::ReadOnly</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!<sp/>Since<sp/>we<sp/>have<sp/>set<sp/>the<sp/>document&apos;s<sp/>protection<sp/>level<sp/>to<sp/>read-only,&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;<sp/>we<sp/>cannot<sp/>edit<sp/>this<sp/>paragraph<sp/>without<sp/>the<sp/>password.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>write-protect<sp/>documents,<sp/>editable<sp/>ranges<sp/>allow<sp/>us<sp/>to<sp/>pick<sp/>specific<sp/>areas<sp/>that<sp/>users<sp/>may<sp/>edit.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>mutually<sp/>exclusive<sp/>ways<sp/>to<sp/>narrow<sp/>down<sp/>the<sp/>list<sp/>of<sp/>allowed<sp/>editors.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Specify<sp/>a<sp/>user:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;EditableRange&gt;<sp/>editableRange<sp/>=<sp/>builder-&gt;StartEditableRange()-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>editableRange-&gt;set_SingleUser(u</highlight><highlight class="stringliteral">&quot;john.doe@myoffice.com&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>the<sp/>first<sp/>editable<sp/>range,<sp/>can<sp/>only<sp/>be<sp/>edited<sp/>by<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>editableRange-&gt;get_SingleUser()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a91d5f723074b64ad6e414ec9a2e7f773a6fcdc090caeade09d0efd6253932b6f5" kindref="member" tooltip="Means that editor type is not specified.">EditorType::Unspecified</ref>,<sp/>editableRange-&gt;get_EditorGroup());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Specify<sp/>a<sp/>group<sp/>that<sp/>allowed<sp/>users<sp/>are<sp/>associated<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>editableRange<sp/>=<sp/>builder-&gt;StartEditableRange()-&gt;get_EditableRange();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>editableRange-&gt;set_EditorGroup(<ref refid="namespace_aspose_1_1_words_1a91d5f723074b64ad6e414ec9a2e7f773ac1ec1d62eafad32ca16fe4df49b9ca2f" kindref="member" tooltip="Specifies that users associated with the Administrators group shall be allowed to edit editable range...">EditorType::Administrators</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>inside<sp/>the<sp/>first<sp/>editable<sp/>range,<sp/>can<sp/>only<sp/>be<sp/>edited<sp/>by<sp/>{0}.&quot;</highlight><highlight class="normal">,<sp/>editableRange-&gt;get_EditorGroup()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndEditableRange();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>editableRange-&gt;get_SingleUser());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;This<sp/>paragraph<sp/>is<sp/>outside<sp/>the<sp/>editable<sp/>range,<sp/>and<sp/>cannot<sp/>be<sp/>edited<sp/>by<sp/>anybody.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>details<sp/>and<sp/>contents<sp/>of<sp/>every<sp/>editable<sp/>range<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>editableRangePrinter<sp/>=<sp/>MakeObject&lt;ExEditableRange::EditableRangePrinter&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Accept(editableRangePrinter);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>editableRangePrinter-&gt;ToText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">EditableRangePrinter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>EditableRangePrinter()<sp/>:<sp/>mInsideEditableRange(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>ToText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInsideEditableRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitEditableRangeStart(SharedPtr&lt;EditableRangeStart&gt;<sp/>editableRangeStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(u</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>Editable<sp/>range<sp/>found!<sp/>--<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tID:\t\t&quot;</highlight><highlight class="normal">)<sp/>+<sp/>editableRangeStart-&gt;get_Id());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editableRangeStart-&gt;get_EditableRange()-&gt;get_SingleUser()<sp/>==<sp/>String::Empty)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tGroup:\t&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(editableRangeStart-&gt;get_EditableRange()-&gt;get_EditorGroup()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tUser:\t&quot;</highlight><highlight class="normal">)<sp/>+<sp/>editableRangeStart-&gt;get_EditableRange()-&gt;get_SingleUser());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(u</highlight><highlight class="stringliteral">&quot;\tContents:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInsideEditableRange<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitEditableRangeEnd(SharedPtr&lt;EditableRangeEnd&gt;<sp/>editableRangeEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(u</highlight><highlight class="stringliteral">&quot;<sp/>--<sp/>End<sp/>of<sp/>editable<sp/>range<sp/>--\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInsideEditableRange<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitRun(SharedPtr&lt;Run&gt;<sp/>run)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInsideEditableRange)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\t\&quot;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>run-&gt;get_Text()<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mInsideEditableRange;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::EditableRangeStart</label>
        <link refid="class_aspose_1_1_words_1_1_editable_range_start"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::IDisplaceableByCustomXml</label>
      </node>
      <node id="5">
        <label>Aspose::Words::INodeWithAnnotationId</label>
      </node>
      <node id="2">
        <label>Aspose::Words::Node</label>
        <link refid="class_aspose_1_1_words_1_1_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::EditableRangeStart</label>
        <link refid="class_aspose_1_1_words_1_1_editable_range_start"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::IDisplaceableByCustomXml</label>
      </node>
      <node id="5">
        <label>Aspose::Words::INodeWithAnnotationId</label>
      </node>
      <node id="2">
        <label>Aspose::Words::Node</label>
        <link refid="class_aspose_1_1_words_1_1_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/EditableRangeStart.h" line="170" column="1" bodyfile="Aspose.Words.Cpp/EditableRangeStart.h" bodystart="171" bodyend="468"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a5e00c4fc700572f9b1805d2689064bcb" prot="public" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>Accept</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a5176c64831432274b8313125af88c779" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1ac57cb09d77b1a22b5aa165d2fa491a24" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>BaseType1</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1aa9967fce019b427d027f927f6f052ffd" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>BaseType2</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a81dedd9b241b09760112b5e5068f1daa" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>Clone</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a4688b9d85005d77e0f302e7e84ef581d" prot="private" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>CppMemberwiseClone</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a941120df17372b25f9a7127a9d9b3816" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_CustomNodeId</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a24e730dffba20f396fc0d9041f45889c" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_DisplacedByCustomXml</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a2a69f84e3ccd323199299c999ab32d46" prot="public" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_Document</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1af14ff018661f7138a7de5083f608c45a" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_EditableRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1aeaf360cfee6dd126f10ecbaa68cfc8f9" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_Id</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a670ce0649c755bec895c34d7d7b4e46b" prot="public" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_IsComposite</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a938ff32d060619d89ecefdf57984abf8" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_NextSibling</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1acaea0b40efdeae565e3881024b33f1a0" prot="public" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_NodeType</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ab9e608488885c65a2a165dea6645d15e" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_ParentNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a6013fe75e5859c54d12a87f9b97fa7f3" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_PreviousSibling</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0f8077bf80409ba331148095b95bc3e5" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>get_Range</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a951706cfa681573e79a56204a2029e9e" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>GetAncestor</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ae19991f4d5aa7ccb60ce6d7207495f1c" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>GetAncestorOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a8fa0ad395d10ff21e0ac404c0e965007" prot="public" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>GetText</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a76723f1395fa0db772faae58430455f1" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a035ea3132662858cf7a34e137027eac3" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1adb85d661efa52819262b65b2d3e0c694" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a0473c12c5ab48b43335813834cda05f2" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a0ef4d6e58e88dea227f5d2187f5d9082" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a4f6979e06a5914aeb37a9cb8448658a6" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>NextPreOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0e46189d6dfa7a81c8fa2e2bd2354d61" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>NodeTypeToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1af40f9573daf950d978d211d3e75c6a95" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>PreviousPreOrder</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a75a9cc0fda5ec9c8aaa1c4910af8f28c" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1ad9defa173aba4dec14152dfe235ec70d" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1a0d412cc05de7836acb92332e55eea267" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>set_CustomNodeId</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a2e1c21e60979ca42c4d555b40e3b053d" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>set_DisplacedByCustomXml</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a96264f5958568e59f2f933e8ced74324" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>set_Id</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a4255df8198b80497746f2251fbf09dcc" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1a06d18a93c231d9f5d92c9c393d188476" prot="private" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1af7aa71ab5f185ee2463406dab7727595" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_node_1ad18f64c5586b84a071957824b24426a2" prot="public" virt="non-virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>ToString</name></member>
      <member refid="class_aspose_1_1_words_1_1_editable_range_start_1aef78125c6bfdb948f11463fff56450af" prot="private" virt="virtual"><scope>Aspose::Words::EditableRangeStart</scope><name>~EditableRangeStart</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
