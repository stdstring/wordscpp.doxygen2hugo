<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_field_toa" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fields::FieldToa</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field" prot="public" virt="non-virtual">Aspose::Words::Fields::Field</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Fields::IFieldCodeTokenInfoProvider</basecompoundref>
    <includes refid="_field_toa_8h" local="no">Aspose.Words.Cpp/Fields/FieldToa.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a3bb04fd727c0944d2edd8b5f563dcda5" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Aspose::Words::Fields::Field</ref></type>
        <definition>typedef Aspose::Words::Fields::Field Aspose::Words::Fields::FieldToa::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="172" column="42" bodyfile="Aspose.Words.Cpp/Fields/FieldToa.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a55b4dd7059ce2575f7807e9ee57a62ba" prot="private" static="no">
        <type>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</type>
        <definition>typedef Aspose::Words::Fields::IFieldCodeTokenInfoProvider Aspose::Words::Fields::FieldToa::BaseType1</definition>
        <argsstring></argsstring>
        <name>BaseType1</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::BaseType1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="173" column="64" bodyfile="Aspose.Words.Cpp/Fields/FieldToa.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab5690d47ebc3dd2e0b54806fbcb5625e" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa" kindref="compound">FieldToa</ref></type>
        <definition>typedef FieldToa Aspose::Words::Fields::FieldToa::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="171" column="22" bodyfile="Aspose.Words.Cpp/Fields/FieldToa.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ae3f972227209d9aaced8c4eb29e2fe3c" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">BaseType</ref>, BaseType1 &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType, BaseType1&gt; Aspose::Words::Fields::FieldToa::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="175" column="37" bodyfile="Aspose.Words.Cpp/Fields/FieldToa.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1abac2786b67804e59aa74566d17f2a02c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Fields::FieldToa::~FieldToa</definition>
        <argsstring>()</argsstring>
        <name>~FieldToa</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::~FieldToa</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1437" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab75396304acd4dfd90134789ac202bda" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Aspose::Words::Fields::FieldSwitchType</type>
        <definition>Aspose::Words::Fields::FieldSwitchType Aspose::Words::Fields::FieldToa::GetSwitchType</definition>
        <argsstring>(System::String) override</argsstring>
        <name>GetSwitchType</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::GetSwitchType</qualifiedname>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1441" column="44"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa7c3a1ff6b6737037fe721b4da2895b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::FieldToa::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="176" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa50a0bf3fa7b9f925a009c0b24c61fe6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::FieldUpdateAction &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldUpdateAction &gt; Aspose::Words::Fields::FieldToa::UpdateCore</definition>
        <argsstring>() override</argsstring>
        <name>UpdateCore</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::UpdateCore</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afd2f4d29a84550a38375396538654ab8">UpdateCore</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1435" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ac2add04b4c15ceeb92d05fdac8a5bebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_BookmarkName</definition>
        <argsstring>()</argsstring>
        <name>get_BookmarkName</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_BookmarkName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the bookmark that marks the portion of the document used to build the table. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="300" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a34d94010f0913775b2562796c258c4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_EntryCategory</definition>
        <argsstring>()</argsstring>
        <name>get_EntryCategory</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_EntryCategory</qualifiedname>
        <briefdescription>
<para>Gets or sets the integral category for entries included in the table. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="425" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a137992b213c156c469839856a9e5aa19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_EntrySeparator</definition>
        <argsstring>()</argsstring>
        <name>get_EntrySeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_EntrySeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate a table of authorities entry and its page number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="675" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a37354318bb1f78b6926b70b0afe49957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_PageNumberListSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_PageNumberListSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_PageNumberListSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate two page numbers in a page number list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1176" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a8c2fe36537e3ca687624efcee6bc632f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_PageRangeSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_PageRangeSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_PageRangeSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate the start and end of a page range. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="926" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a23950c8354c03b8efafdc21aaeeb9397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToa::get_RemoveEntryFormatting</definition>
        <argsstring>()</argsstring>
        <name>get_RemoveEntryFormatting</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_RemoveEntryFormatting</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to remove the formatting of the entry text in the document from the entry in the table of authorities. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="801" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab38aabab88e2b5812b2998f7565f1509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_SequenceName</definition>
        <argsstring>()</argsstring>
        <name>get_SequenceName</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_SequenceName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of a sequence whose number is included with the page number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1428" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1af7a8c01dd58f3f25506db095080a6b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToa::get_SequenceSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_SequenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_SequenceSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate sequence numbers and page numbers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="550" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a892a3fcbdf5743a185e0e4b70e5422a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToa::get_UseHeading</definition>
        <argsstring>()</argsstring>
        <name>get_UseHeading</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_UseHeading</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to include the category heading for the entries in a table of authorities. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1051" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a34d4215449cc4f2cd8033791fadf2676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToa::get_UsePassim</definition>
        <argsstring>()</argsstring>
        <name>get_UsePassim</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::get_UsePassim</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to replace five or more different page references to the same authority with &quot;passim&quot;, which is used to indicate that a word or passage occurs frequently in the work cited. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1303" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a354a629ecd12527c354a048e95d8d734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_BookmarkName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_BookmarkName</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_BookmarkName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ac2add04b4c15ceeb92d05fdac8a5bebb" kindref="member">Aspose::Words::Fields::FieldToa::get_BookmarkName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="303" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a8aaf3ea063f67ae42a185ac8c6aa845f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_EntryCategory</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_EntryCategory</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_EntryCategory</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a34d94010f0913775b2562796c258c4a2" kindref="member">Aspose::Words::Fields::FieldToa::get_EntryCategory</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="428" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ae09192742706ef3d1ebeb5a518e0af09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_EntrySeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_EntrySeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_EntrySeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a137992b213c156c469839856a9e5aa19" kindref="member">Aspose::Words::Fields::FieldToa::get_EntrySeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="678" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa29558003de2de493987e692ca0acf0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_PageNumberListSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PageNumberListSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_PageNumberListSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a37354318bb1f78b6926b70b0afe49957" kindref="member">Aspose::Words::Fields::FieldToa::get_PageNumberListSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1179" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a4b1bc68e1ad9084c7fd0c32c2238eed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_PageRangeSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PageRangeSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_PageRangeSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a8c2fe36537e3ca687624efcee6bc632f" kindref="member">Aspose::Words::Fields::FieldToa::get_PageRangeSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="929" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1af8e8776a9f706be532bcfab8f81cdf85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_RemoveEntryFormatting</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_RemoveEntryFormatting</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_RemoveEntryFormatting</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a23950c8354c03b8efafdc21aaeeb9397" kindref="member">Aspose::Words::Fields::FieldToa::get_RemoveEntryFormatting</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="804" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a1e945b67f01c0e40f7ae9e0aa134cc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_SequenceName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_SequenceName</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_SequenceName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab38aabab88e2b5812b2998f7565f1509" kindref="member">Aspose::Words::Fields::FieldToa::get_SequenceName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1431" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aec432af9a5d7369aee3d29fe94a4e749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_SequenceSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_SequenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_SequenceSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1af7a8c01dd58f3f25506db095080a6b8c" kindref="member">Aspose::Words::Fields::FieldToa::get_SequenceSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="553" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a11c42fab2279e5f78f0fb165c10b9113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_UseHeading</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UseHeading</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_UseHeading</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a892a3fcbdf5743a185e0e4b70e5422a4" kindref="member">Aspose::Words::Fields::FieldToa::get_UseHeading</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1054" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a373dc54984480a9edc0934881c1653ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToa::set_UsePassim</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UsePassim</name>
        <qualifiedname>Aspose::Words::Fields::FieldToa::set_UsePassim</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a34d4215449cc4f2cd8033791fadf2676" kindref="member">Aspose::Words::Fields::FieldToa::get_UsePassim</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="1306" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements the TOA field. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to build and customize a table of authorities using TOA and TA fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTOA_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOA<sp/>field,<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>TA<sp/>field<sp/>in<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>displaying<sp/>long<sp/>citations<sp/>and<sp/>page<sp/>numbers<sp/>for<sp/>each<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToa<sp/>=<sp/>System::DynamicCast&lt;FieldToa&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca75fd51212b93d4b42d519fdb6e3fe2cd" kindref="member" tooltip="Specifies the TOA field.">FieldType::FieldTOA</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>entry<sp/>category<sp/>for<sp/>our<sp/>table.<sp/>This<sp/>TOA<sp/>will<sp/>now<sp/>only<sp/>include<sp/>TA<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>a<sp/>matching<sp/>value<sp/>in<sp/>their<sp/>EntryCategory<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntryCategory(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Moreover,<sp/>the<sp/>Table<sp/>of<sp/>Authorities<sp/>category<sp/>at<sp/>index<sp/>1<sp/>is<sp/>&quot;Cases&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>show<sp/>up<sp/>as<sp/>our<sp/>table&apos;s<sp/>title<sp/>if<sp/>we<sp/>set<sp/>this<sp/>variable<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UseHeading(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>further<sp/>filter<sp/>TA<sp/>fields<sp/>by<sp/>naming<sp/>a<sp/>bookmark<sp/>that<sp/>they<sp/>will<sp/>need<sp/>to<sp/>be<sp/>within<sp/>the<sp/>TOA<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>dotted<sp/>line<sp/>page-wide<sp/>tab<sp/>appears<sp/>between<sp/>the<sp/>TA<sp/>field&apos;s<sp/>citation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>page<sp/>number.<sp/>We<sp/>can<sp/>replace<sp/>it<sp/>with<sp/>any<sp/>text<sp/>we<sp/>put<sp/>on<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>tab<sp/>character<sp/>will<sp/>preserve<sp/>the<sp/>original<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>\t<sp/>p.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>multiple<sp/>TA<sp/>entries<sp/>that<sp/>share<sp/>the<sp/>same<sp/>long<sp/>citation,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>their<sp/>respective<sp/>page<sp/>numbers<sp/>will<sp/>show<sp/>up<sp/>on<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>property<sp/>to<sp/>specify<sp/>a<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>p.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>this<sp/>to<sp/>true<sp/>to<sp/>get<sp/>our<sp/>table<sp/>to<sp/>display<sp/>the<sp/>word<sp/>&quot;passim&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>five<sp/>or<sp/>more<sp/>page<sp/>numbers<sp/>in<sp/>one<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_UsePassim(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>TA<sp/>field<sp/>can<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>string<sp/>here<sp/>to<sp/>appear<sp/>between<sp/>the<sp/>start<sp/>and<sp/>end<sp/>page<sp/>numbers<sp/>for<sp/>such<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>format<sp/>from<sp/>the<sp/>TA<sp/>fields<sp/>will<sp/>carry<sp/>over<sp/>into<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>disable<sp/>this<sp/>by<sp/>setting<sp/>the<sp/>RemoveEntryFormatting<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToa-&gt;set_RemoveEntryFormatting(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Color(<ref refid="class/system.drawing.color/_1a77fddff8420436e0eec436f1fb13ee5b" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Drawing::Color::get_Green</ref>());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial<sp/>Black&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOA<sp/><sp/>\\c<sp/>1<sp/>\\h<sp/>\\b<sp/>MyBookmark<sp/>\\e<sp/>\&quot;<sp/>\t<sp/>p.\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>p.<sp/>\&quot;<sp/>\\p<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;<sp/>\\f&quot;</highlight><highlight class="normal">,<sp/>fieldToa-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOA<sp/>since<sp/>it<sp/>is<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>bookmark&apos;s<sp/>bounds<sp/>that<sp/>the<sp/>TOA&apos;s<sp/>BookmarkName<sp/>property<sp/>specifies.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldTA&gt;<sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>TA<sp/>field<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>the<sp/>entry<sp/>category<sp/>does<sp/>not<sp/>match<sp/>that<sp/>of<sp/>the<sp/>table,<sp/>so<sp/>the<sp/>TA<sp/>field<sp/>will<sp/>not<sp/>include<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>TOA<sp/>table<sp/>does<sp/>not<sp/>display<sp/>short<sp/>citations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>use<sp/>them<sp/>as<sp/>a<sp/>shorthand<sp/>to<sp/>refer<sp/>to<sp/>bulky<sp/>source<sp/>names<sp/>that<sp/>multiple<sp/>TA<sp/>fields<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_ShortCitation(u</highlight><highlight class="stringliteral">&quot;S.3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\s<sp/>S.3&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>format<sp/>the<sp/>page<sp/>number<sp/>to<sp/>make<sp/>it<sp/>bold/italic<sp/>using<sp/>the<sp/>following<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>still<sp/>see<sp/>these<sp/>effects<sp/>if<sp/>we<sp/>set<sp/>our<sp/>table<sp/>to<sp/>ignore<sp/>formatting.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>2\&quot;<sp/>\\b<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>TA<sp/>fields<sp/>to<sp/>get<sp/>their<sp/>TOA<sp/>entries<sp/>to<sp/>refer<sp/>to<sp/>a<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>a<sp/>bookmark<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>entry<sp/>refers<sp/>to<sp/>the<sp/>same<sp/>source<sp/>as<sp/>the<sp/>one<sp/>above<sp/>to<sp/>share<sp/>one<sp/>row<sp/>in<sp/>our<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>row<sp/>will<sp/>have<sp/>the<sp/>page<sp/>number<sp/>of<sp/>the<sp/>entry<sp/>above<sp/>and<sp/>the<sp/>page<sp/>range<sp/>of<sp/>this<sp/>entry,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>table&apos;s<sp/>page<sp/>list<sp/>and<sp/>page<sp/>number<sp/>range<sp/>separators<sp/>between<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA<sp/>=<sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTA-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyMultiPageBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TA<sp/><sp/>\\c<sp/>1<sp/>\\l<sp/>\&quot;Source<sp/>3\&quot;<sp/>\\r<sp/>MyMultiPageBookmark&quot;</highlight><highlight class="normal">,<sp/>fieldTA-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>enabled<sp/>the<sp/>&quot;Passim&quot;<sp/>feature<sp/>of<sp/>our<sp/>table,<sp/>having<sp/>5<sp/>or<sp/>more<sp/>TA<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>source<sp/>will<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InsertToaEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Source<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOA.TA.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SharedPtr&lt;FieldTA&gt;<sp/>InsertToaEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>entryCategory,<sp/>String<sp/>longCitation)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldTA&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaa24c781f69f2b4e4a0021d907f9d4674" kindref="member" tooltip="Specifies the TA field.">FieldType::FieldTOAEntry</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntryCategory(entryCategory);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_LongCitation(longCitation);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>field;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldToa</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldToa</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/FieldToa.h" line="169" column="1" bodyfile="Aspose.Words.Cpp/Fields/FieldToa.h" bodystart="170" bodyend="1443"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a3bb04fd727c0944d2edd8b5f563dcda5" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a55b4dd7059ce2575f7807e9ee57a62ba" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>BaseType1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ac2add04b4c15ceeb92d05fdac8a5bebb" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_BookmarkName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a5c2d01019c517ea8098f296903e37a34" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_DisplayResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_End</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a34d94010f0913775b2562796c258c4a2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_EntryCategory</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a137992b213c156c469839856a9e5aa19" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_EntrySeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a399c14463916724cac0015b430175589" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_FieldEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abc40cddc1325f7fec80d8530e5287448" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_FieldStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a090c5d09915e2ead6cc54fda736dd7c2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_Format</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a37354318bb1f78b6926b70b0afe49957" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_PageNumberListSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a8c2fe36537e3ca687624efcee6bc632f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_PageRangeSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a23950c8354c03b8efafdc21aaeeb9397" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_RemoveEntryFormatting</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab38aabab88e2b5812b2998f7565f1509" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_SequenceName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1af7a8c01dd58f3f25506db095080a6b8c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_SequenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_Start</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad68196653db5cfca30c1ba18ed44c76e" prot="public" virt="virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a892a3fcbdf5743a185e0e4b70e5422a4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_UseHeading</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a34d4215449cc4f2cd8033791fadf2676" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>get_UsePassim</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a578378121cced134f079765f19f64498" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab75396304acd4dfd90134789ac202bda" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>GetSwitchType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad26a8021af3dbdc5bf0a1360a201222f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa7c3a1ff6b6737037fe721b4da2895b7" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a354a629ecd12527c354a048e95d8d734" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_BookmarkName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a8aaf3ea063f67ae42a185ac8c6aa845f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_EntryCategory</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ae09192742706ef3d1ebeb5a518e0af09" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_EntrySeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa637d825865724665fb8ed856e664d95" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ac70b125adbe7f0ba5b889280cd282c47" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a165f748dd5ba33844f1d765f6c710f88" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa29558003de2de493987e692ca0acf0b" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_PageNumberListSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a4b1bc68e1ad9084c7fd0c32c2238eed9" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_PageRangeSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1af8e8776a9f706be532bcfab8f81cdf85" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_RemoveEntryFormatting</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa6af1e900c84ae806f071098dfe8f087" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a1e945b67f01c0e40f7ae9e0aa134cc11" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_SequenceName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aec432af9a5d7369aee3d29fe94a4e749" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_SequenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a11c42fab2279e5f78f0fb165c10b9113" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_UseHeading</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1a373dc54984480a9edc0934881c1653ee" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>set_UsePassim</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ab5690d47ebc3dd2e0b54806fbcb5625e" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1ae3f972227209d9aaced8c4eb29e2fe3c" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9f908becb16b26bed76d58dbcee9929" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>Unlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a1298d7daa07c863bf97cb3f37a4d7a99" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa50a0bf3fa7b9f925a009c0b24c61fe6" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>UpdateCore</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1abac2786b67804e59aa74566d17f2a02c" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldToa</scope><name>~FieldToa</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
