<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_field_index" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fields::FieldIndex</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field" prot="public" virt="non-virtual">Aspose::Words::Fields::Field</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Fields::IFieldCodeTokenInfoProvider</basecompoundref>
    <includes refid="_field_index_8h" local="no">Aspose.Words.Cpp/Fields/FieldIndex.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aef84e2250a71c06f5873d9c1157fea04" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Aspose::Words::Fields::Field</ref></type>
        <definition>typedef Aspose::Words::Fields::Field Aspose::Words::Fields::FieldIndex::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="179" column="42" bodyfile="Aspose.Words.Cpp/Fields/FieldIndex.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aac44402a10386721582717aa361bddd1" prot="private" static="no">
        <type>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</type>
        <definition>typedef Aspose::Words::Fields::IFieldCodeTokenInfoProvider Aspose::Words::Fields::FieldIndex::BaseType1</definition>
        <argsstring></argsstring>
        <name>BaseType1</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::BaseType1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="180" column="64" bodyfile="Aspose.Words.Cpp/Fields/FieldIndex.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aa250c22f057e77ceb8b3fac7f47c54da" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index" kindref="compound">FieldIndex</ref></type>
        <definition>typedef FieldIndex Aspose::Words::Fields::FieldIndex::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="178" column="24" bodyfile="Aspose.Words.Cpp/Fields/FieldIndex.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4361f88df65f894ef2b0876095e984c4" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">BaseType</ref>, BaseType1 &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType, BaseType1&gt; Aspose::Words::Fields::FieldIndex::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="182" column="37" bodyfile="Aspose.Words.Cpp/Fields/FieldIndex.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af9427a9e0278ba247198e4c5a60502de" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldIndex::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1211" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldIndex.h" bodystart="1211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a091fd6d4c65a1e6648342312bf76564e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Fields::FieldIndex::~FieldIndex</definition>
        <argsstring>()</argsstring>
        <name>~FieldIndex</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::~FieldIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1207" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a56904bca6c64d7cef974b86c247d529a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Bidi::IBidiParagraphLevelOverride &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Bidi::IBidiParagraphLevelOverride &gt; Aspose::Words::Fields::FieldIndex::GetBidiParagraphLevelOverride</definition>
        <argsstring>() override</argsstring>
        <name>GetBidiParagraphLevelOverride</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::GetBidiParagraphLevelOverride</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9dae9f00016d302428b0e284c0198fd">GetBidiParagraphLevelOverride</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1205" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ac531fcb4d09d3e324ffd1fd9c6521df7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Aspose::Words::Fields::FieldSwitchType</type>
        <definition>Aspose::Words::Fields::FieldSwitchType Aspose::Words::Fields::FieldIndex::GetSwitchType</definition>
        <argsstring>(System::String) override</argsstring>
        <name>GetSwitchType</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::GetSwitchType</qualifiedname>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1213" column="44"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a5963f399bd03a93e6cd69c3ee9144edc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::FieldIndex::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="183" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4e5f9ae23c30f443f616f61137ca36f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::FieldUpdateAction &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldUpdateAction &gt; Aspose::Words::Fields::FieldIndex::UpdateCore</definition>
        <argsstring>() override</argsstring>
        <name>UpdateCore</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::UpdateCore</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afd2f4d29a84550a38375396538654ab8">UpdateCore</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1204" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af8f65babe28da4a6a1f02e25e9345d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_BookmarkName</definition>
        <argsstring>()</argsstring>
        <name>get_BookmarkName</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_BookmarkName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the bookmark that marks the portion of the document used to build the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create an INDEX field, and then use XE fields to populate it with entries. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>containing<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>INDEX<sp/>field<sp/>only<sp/>to<sp/>display<sp/>XE<sp/>fields<sp/>that<sp/>are<sp/>within<sp/>the<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>bookmark<sp/>named<sp/>&quot;MainBookmark&quot;,<sp/>and<sp/>whose<sp/>&quot;EntryType&quot;<sp/>properties<sp/>have<sp/>a<sp/>value<sp/>of<sp/>&quot;A&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>both<sp/>INDEX<sp/>and<sp/>XE<sp/>fields,<sp/>the<sp/>&quot;EntryType&quot;<sp/>property<sp/>only<sp/>uses<sp/>the<sp/>first<sp/>character<sp/>of<sp/>its<sp/>string<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\b<sp/>MainBookmark<sp/>\\f<sp/>A&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>a<sp/>new<sp/>page,<sp/>start<sp/>the<sp/>bookmark<sp/>with<sp/>a<sp/>name<sp/>that<sp/>matches<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>&quot;BookmarkName&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>field<sp/>will<sp/>pick<sp/>up<sp/>this<sp/>entry<sp/>because<sp/>it<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>entry<sp/>type<sp/>also<sp/>matches<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>entry<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;Index<sp/>entry<sp/>1\&quot;<sp/>\\f<sp/>A&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>that<sp/>will<sp/>not<sp/>appear<sp/>in<sp/>the<sp/>INDEX<sp/>because<sp/>the<sp/>entry<sp/>types<sp/>do<sp/>not<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>the<sp/>bookmark<sp/>and<sp/>insert<sp/>an<sp/>XE<sp/>field<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>of<sp/>the<sp/>same<sp/>type<sp/>as<sp/>the<sp/>INDEX<sp/>field,<sp/>but<sp/>will<sp/>not<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark&apos;s<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Filtering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="244" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a9db34694c08720b04f406783dadbe570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_CrossReferenceSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_CrossReferenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_CrossReferenceSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate cross references and other entries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to define cross references in an INDEX field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>collect<sp/>all<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>configure<sp/>an<sp/>XE<sp/>field<sp/>to<sp/>get<sp/>its<sp/>INDEX<sp/>entry<sp/>to<sp/>display<sp/>a<sp/>string<sp/>instead<sp/>of<sp/>a<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>First,<sp/>for<sp/>entries<sp/>that<sp/>substitute<sp/>a<sp/>page<sp/>number<sp/>with<sp/>a<sp/>string,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>specify<sp/>a<sp/>custom<sp/>separator<sp/>between<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>and<sp/>the<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_CrossReferenceSeparator(u</highlight><highlight class="stringliteral">&quot;,<sp/>see:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\k<sp/>\&quot;,<sp/>see:<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field,<sp/>which<sp/>creates<sp/>a<sp/>regular<sp/>INDEX<sp/>entry<sp/>which<sp/>displays<sp/>this<sp/>field&apos;s<sp/>page<sp/>number,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>does<sp/>not<sp/>invoke<sp/>the<sp/>CrossReferenceSeparator<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>entry<sp/>for<sp/>this<sp/>XE<sp/>field<sp/>will<sp/>display<sp/>&quot;Apple,<sp/>2&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apple&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>another<sp/>XE<sp/>field<sp/>on<sp/>page<sp/>3<sp/>and<sp/>set<sp/>a<sp/>value<sp/>for<sp/>the<sp/>PageNumberReplacement<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>will<sp/>show<sp/>up<sp/>instead<sp/>of<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>this<sp/>field<sp/>is<sp/>on,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>CrossReferenceSeparator<sp/>value<sp/>will<sp/>appear<sp/>in<sp/>front<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>entry<sp/>for<sp/>this<sp/>XE<sp/>field<sp/>will<sp/>display<sp/>&quot;Banana,<sp/>see:<sp/>Tropical<sp/>fruit&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_PageNumberReplacement(u</highlight><highlight class="stringliteral">&quot;Tropical<sp/>fruit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Banana<sp/>\\t<sp/>\&quot;Tropical<sp/>fruit\&quot;&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.CrossReferenceSeparator.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="725" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aec0232520940ba1b9fdaf44579ffbf84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_EntryType</definition>
        <argsstring>()</argsstring>
        <name>get_EntryType</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_EntryType</qualifiedname>
        <briefdescription>
<para>Gets or sets an index entry type used to build the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create an INDEX field, and then use XE fields to populate it with entries. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>containing<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>INDEX<sp/>field<sp/>only<sp/>to<sp/>display<sp/>XE<sp/>fields<sp/>that<sp/>are<sp/>within<sp/>the<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>bookmark<sp/>named<sp/>&quot;MainBookmark&quot;,<sp/>and<sp/>whose<sp/>&quot;EntryType&quot;<sp/>properties<sp/>have<sp/>a<sp/>value<sp/>of<sp/>&quot;A&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>both<sp/>INDEX<sp/>and<sp/>XE<sp/>fields,<sp/>the<sp/>&quot;EntryType&quot;<sp/>property<sp/>only<sp/>uses<sp/>the<sp/>first<sp/>character<sp/>of<sp/>its<sp/>string<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\b<sp/>MainBookmark<sp/>\\f<sp/>A&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>a<sp/>new<sp/>page,<sp/>start<sp/>the<sp/>bookmark<sp/>with<sp/>a<sp/>name<sp/>that<sp/>matches<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>&quot;BookmarkName&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>field<sp/>will<sp/>pick<sp/>up<sp/>this<sp/>entry<sp/>because<sp/>it<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>entry<sp/>type<sp/>also<sp/>matches<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>entry<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;Index<sp/>entry<sp/>1\&quot;<sp/>\\f<sp/>A&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>that<sp/>will<sp/>not<sp/>appear<sp/>in<sp/>the<sp/>INDEX<sp/>because<sp/>the<sp/>entry<sp/>types<sp/>do<sp/>not<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>the<sp/>bookmark<sp/>and<sp/>insert<sp/>an<sp/>XE<sp/>field<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>of<sp/>the<sp/>same<sp/>type<sp/>as<sp/>the<sp/>INDEX<sp/>field,<sp/>but<sp/>will<sp/>not<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark&apos;s<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Filtering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="547" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a46b0945f348174a1eba1611a864f196c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldIndex::get_HasPageNumberSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_HasPageNumberSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_HasPageNumberSeparator</qualifiedname>
        <briefdescription>
<para>Gets a value indicating whether a page number separator is overridden through the field&apos;s code. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to edit the page number separator in an INDEX field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>group<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>our<sp/>INDEX<sp/>field<sp/>has<sp/>an<sp/>entry<sp/>for<sp/>a<sp/>group<sp/>of<sp/>XE<sp/>fields,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>number<sp/>of<sp/>each<sp/>page<sp/>that<sp/>contains<sp/>an<sp/>XE<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>this<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>custom<sp/>separators<sp/>to<sp/>customize<sp/>the<sp/>appearance<sp/>of<sp/>these<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>page(s)<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\e<sp/>\&quot;,<sp/>on<sp/>page(s)<sp/>\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(index-&gt;get_HasPageNumberSeparator());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>we<sp/>insert<sp/>these<sp/>XE<sp/>fields,<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>display<sp/>&quot;First<sp/>entry,<sp/>on<sp/>page(s)<sp/>2<sp/>&amp;<sp/>3<sp/>&amp;<sp/>4&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;First<sp/>entry\&quot;&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.PageNumberList.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="490" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af8d084e164b2edec90ca4aa8d054ad24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldIndex::get_HasSequenceName</definition>
        <argsstring>()</argsstring>
        <name>get_HasSequenceName</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_HasSequenceName</qualifiedname>
        <briefdescription>
<para>Gets a value indicating whether a sequence should be used while the field&apos;s result building. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to split a document into portions by combining INDEX and SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>SequenceName<sp/>property,<sp/>name<sp/>a<sp/>SEQ<sp/>field<sp/>sequence.<sp/>Each<sp/>entry<sp/>of<sp/>this<sp/>INDEX<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>that<sp/>the<sp/>sequence<sp/>count<sp/>is<sp/>on<sp/>at<sp/>the<sp/>XE<sp/>field<sp/>location<sp/>that<sp/>created<sp/>this<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_SequenceName(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>text<sp/>that<sp/>will<sp/>around<sp/>the<sp/>sequence<sp/>and<sp/>page<sp/>numbers<sp/>to<sp/>explain<sp/>their<sp/>meaning<sp/>to<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>entry<sp/>created<sp/>with<sp/>this<sp/>configuration<sp/>will<sp/>display<sp/>something<sp/>like<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>1&quot;<sp/>at<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>PageNumberSeparator<sp/>and<sp/>SequenceSeparator<sp/>cannot<sp/>be<sp/>longer<sp/>than<sp/>15<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;\tMySequence<sp/>at<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>page<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(index-&gt;get_HasSequenceName());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\s<sp/>MySequence<sp/>\\e<sp/>\&quot;\tMySequence<sp/>at<sp/>\&quot;<sp/>\\d<sp/>\&quot;<sp/>on<sp/>page<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>SEQ<sp/>field<sp/>which<sp/>moves<sp/>the<sp/>&quot;MySequence&quot;<sp/>sequence<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>no<sp/>different<sp/>from<sp/>normal<sp/>document<sp/>text.<sp/>It<sp/>will<sp/>not<sp/>appear<sp/>on<sp/>an<sp/>INDEX<sp/>field&apos;s<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>sequenceField-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>INDEX<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>&quot;MySequence&quot;<sp/>is<sp/>at<sp/>1<sp/>and<sp/>this<sp/>XE<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,<sp/>along<sp/>with<sp/>the<sp/>custom<sp/>separators<sp/>we<sp/>defined<sp/>above,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>field&apos;s<sp/>INDEX<sp/>entry<sp/>will<sp/>display<sp/>&quot;Cat&quot;<sp/>on<sp/>the<sp/>left<sp/>side,<sp/>and<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>2&quot;<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Cat&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page<sp/>break<sp/>and<sp/>use<sp/>SEQ<sp/>fields<sp/>to<sp/>advance<sp/>&quot;MySequence&quot;<sp/>to<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>with<sp/>the<sp/>same<sp/>Text<sp/>property<sp/>as<sp/>the<sp/>one<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>group<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>are<sp/>on<sp/>page<sp/>2<sp/>with<sp/>&quot;MySequence&quot;<sp/>at<sp/>3,<sp/>&quot;,<sp/>3<sp/>on<sp/>page<sp/>3&quot;<sp/>will<sp/>be<sp/>appended<sp/>to<sp/>the<sp/>same<sp/>INDEX<sp/>entry<sp/>as<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>page<sp/>number<sp/>portion<sp/>of<sp/>that<sp/>INDEX<sp/>entry<sp/>will<sp/>now<sp/>display<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>2,<sp/>3<sp/>on<sp/>page<sp/>3&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>with<sp/>a<sp/>new<sp/>and<sp/>unique<sp/>Text<sp/>property<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>add<sp/>a<sp/>new<sp/>entry,<sp/>with<sp/>MySequence<sp/>at<sp/>3<sp/>on<sp/>page<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Dog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Sequence.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1063" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abbae4707fb793b4598e95043b6a35c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_Heading</definition>
        <argsstring>()</argsstring>
        <name>get_Heading</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_Heading</qualifiedname>
        <briefdescription>
<para>Gets or sets a heading that appears at the start of each set of entries for any given letter. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate an INDEX field with entries using XE fields, and also modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LanguageId(u</highlight><highlight class="stringliteral">&quot;1033&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>property&apos;s<sp/>value<sp/>to<sp/>&quot;A&quot;<sp/>will<sp/>group<sp/>all<sp/>the<sp/>entries<sp/>by<sp/>their<sp/>first<sp/>letter,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>place<sp/>that<sp/>letter<sp/>in<sp/>uppercase<sp/>above<sp/>each<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_Heading(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>table<sp/>created<sp/>by<sp/>the<sp/>INDEX<sp/>field<sp/>to<sp/>span<sp/>over<sp/>2<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_NumberOfColumns(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>any<sp/>entries<sp/>with<sp/>starting<sp/>letters<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>to<sp/>be<sp/>omitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LetterRange(u</highlight><highlight class="stringliteral">&quot;a-c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\z<sp/>1033<sp/>\\h<sp/>A<sp/>\\c<sp/>2<sp/>\\p<sp/>a-c&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>show<sp/>up<sp/>under<sp/>the<sp/>&quot;A&quot;<sp/>heading,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>their<sp/>respective<sp/>text<sp/>stylings<sp/>also<sp/>applied<sp/>to<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apple<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apricot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apricot<sp/>\\b&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>the<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>be<sp/>under<sp/>a<sp/>&quot;B&quot;<sp/>and<sp/>&quot;C&quot;<sp/>heading<sp/>in<sp/>the<sp/>INDEX<sp/>fields<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>INDEX<sp/>fields<sp/>sort<sp/>all<sp/>entries<sp/>alphabetically,<sp/>so<sp/>this<sp/>entry<sp/>will<sp/>show<sp/>up<sp/>under<sp/>&quot;A&quot;<sp/>with<sp/>the<sp/>other<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Avocado&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>starts<sp/>with<sp/>the<sp/>letter<sp/>&quot;D&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>that<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>LetterRange<sp/>property<sp/>defines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Durian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Formatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="674" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8b7e3e464d1477090782d9093fb62984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_LanguageId</definition>
        <argsstring>()</argsstring>
        <name>get_LanguageId</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_LanguageId</qualifiedname>
        <briefdescription>
<para>Gets or sets the language ID used to generate the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate an INDEX field with entries using XE fields, and also modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LanguageId(u</highlight><highlight class="stringliteral">&quot;1033&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>property&apos;s<sp/>value<sp/>to<sp/>&quot;A&quot;<sp/>will<sp/>group<sp/>all<sp/>the<sp/>entries<sp/>by<sp/>their<sp/>first<sp/>letter,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>place<sp/>that<sp/>letter<sp/>in<sp/>uppercase<sp/>above<sp/>each<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_Heading(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>table<sp/>created<sp/>by<sp/>the<sp/>INDEX<sp/>field<sp/>to<sp/>span<sp/>over<sp/>2<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_NumberOfColumns(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>any<sp/>entries<sp/>with<sp/>starting<sp/>letters<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>to<sp/>be<sp/>omitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LetterRange(u</highlight><highlight class="stringliteral">&quot;a-c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\z<sp/>1033<sp/>\\h<sp/>A<sp/>\\c<sp/>2<sp/>\\p<sp/>a-c&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>show<sp/>up<sp/>under<sp/>the<sp/>&quot;A&quot;<sp/>heading,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>their<sp/>respective<sp/>text<sp/>stylings<sp/>also<sp/>applied<sp/>to<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apple<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apricot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apricot<sp/>\\b&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>the<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>be<sp/>under<sp/>a<sp/>&quot;B&quot;<sp/>and<sp/>&quot;C&quot;<sp/>heading<sp/>in<sp/>the<sp/>INDEX<sp/>fields<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>INDEX<sp/>fields<sp/>sort<sp/>all<sp/>entries<sp/>alphabetically,<sp/>so<sp/>this<sp/>entry<sp/>will<sp/>show<sp/>up<sp/>under<sp/>&quot;A&quot;<sp/>with<sp/>the<sp/>other<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Avocado&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>starts<sp/>with<sp/>the<sp/>letter<sp/>&quot;D&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>that<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>LetterRange<sp/>property<sp/>defines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Durian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Formatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1197" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ac36d5cb5c5d2cb7dd8ef470f6ce5658a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_LetterRange</definition>
        <argsstring>()</argsstring>
        <name>get_LetterRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_LetterRange</qualifiedname>
        <briefdescription>
<para>Gets or sets a range of letters to which limit the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate an INDEX field with entries using XE fields, and also modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LanguageId(u</highlight><highlight class="stringliteral">&quot;1033&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>property&apos;s<sp/>value<sp/>to<sp/>&quot;A&quot;<sp/>will<sp/>group<sp/>all<sp/>the<sp/>entries<sp/>by<sp/>their<sp/>first<sp/>letter,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>place<sp/>that<sp/>letter<sp/>in<sp/>uppercase<sp/>above<sp/>each<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_Heading(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>table<sp/>created<sp/>by<sp/>the<sp/>INDEX<sp/>field<sp/>to<sp/>span<sp/>over<sp/>2<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_NumberOfColumns(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>any<sp/>entries<sp/>with<sp/>starting<sp/>letters<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>to<sp/>be<sp/>omitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LetterRange(u</highlight><highlight class="stringliteral">&quot;a-c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\z<sp/>1033<sp/>\\h<sp/>A<sp/>\\c<sp/>2<sp/>\\p<sp/>a-c&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>show<sp/>up<sp/>under<sp/>the<sp/>&quot;A&quot;<sp/>heading,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>their<sp/>respective<sp/>text<sp/>stylings<sp/>also<sp/>applied<sp/>to<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apple<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apricot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apricot<sp/>\\b&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>the<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>be<sp/>under<sp/>a<sp/>&quot;B&quot;<sp/>and<sp/>&quot;C&quot;<sp/>heading<sp/>in<sp/>the<sp/>INDEX<sp/>fields<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>INDEX<sp/>fields<sp/>sort<sp/>all<sp/>entries<sp/>alphabetically,<sp/>so<sp/>this<sp/>entry<sp/>will<sp/>show<sp/>up<sp/>under<sp/>&quot;A&quot;<sp/>with<sp/>the<sp/>other<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Avocado&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>starts<sp/>with<sp/>the<sp/>letter<sp/>&quot;D&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>that<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>LetterRange<sp/>property<sp/>defines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Durian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Formatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="846" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a52a3d7240546963ffba79713b07f8232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_NumberOfColumns</definition>
        <argsstring>()</argsstring>
        <name>get_NumberOfColumns</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_NumberOfColumns</qualifiedname>
        <briefdescription>
<para>Gets or sets the number of columns per page used when building the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate an INDEX field with entries using XE fields, and also modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LanguageId(u</highlight><highlight class="stringliteral">&quot;1033&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>property&apos;s<sp/>value<sp/>to<sp/>&quot;A&quot;<sp/>will<sp/>group<sp/>all<sp/>the<sp/>entries<sp/>by<sp/>their<sp/>first<sp/>letter,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>place<sp/>that<sp/>letter<sp/>in<sp/>uppercase<sp/>above<sp/>each<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_Heading(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>table<sp/>created<sp/>by<sp/>the<sp/>INDEX<sp/>field<sp/>to<sp/>span<sp/>over<sp/>2<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_NumberOfColumns(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>any<sp/>entries<sp/>with<sp/>starting<sp/>letters<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>to<sp/>be<sp/>omitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LetterRange(u</highlight><highlight class="stringliteral">&quot;a-c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\z<sp/>1033<sp/>\\h<sp/>A<sp/>\\c<sp/>2<sp/>\\p<sp/>a-c&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>show<sp/>up<sp/>under<sp/>the<sp/>&quot;A&quot;<sp/>heading,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>their<sp/>respective<sp/>text<sp/>stylings<sp/>also<sp/>applied<sp/>to<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apple<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apricot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apricot<sp/>\\b&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>the<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>be<sp/>under<sp/>a<sp/>&quot;B&quot;<sp/>and<sp/>&quot;C&quot;<sp/>heading<sp/>in<sp/>the<sp/>INDEX<sp/>fields<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>INDEX<sp/>fields<sp/>sort<sp/>all<sp/>entries<sp/>alphabetically,<sp/>so<sp/>this<sp/>entry<sp/>will<sp/>show<sp/>up<sp/>under<sp/>&quot;A&quot;<sp/>with<sp/>the<sp/>other<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Avocado&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>starts<sp/>with<sp/>the<sp/>letter<sp/>&quot;D&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>that<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>LetterRange<sp/>property<sp/>defines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Durian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Formatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="317" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a627f9569e85fd700a827859d1d658d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_PageNumberListSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_PageNumberListSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_PageNumberListSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate two page numbers in a page number list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to edit the page number separator in an INDEX field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>group<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>our<sp/>INDEX<sp/>field<sp/>has<sp/>an<sp/>entry<sp/>for<sp/>a<sp/>group<sp/>of<sp/>XE<sp/>fields,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>number<sp/>of<sp/>each<sp/>page<sp/>that<sp/>contains<sp/>an<sp/>XE<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>this<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>custom<sp/>separators<sp/>to<sp/>customize<sp/>the<sp/>appearance<sp/>of<sp/>these<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>page(s)<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\e<sp/>\&quot;,<sp/>on<sp/>page(s)<sp/>\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(index-&gt;get_HasPageNumberSeparator());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>we<sp/>insert<sp/>these<sp/>XE<sp/>fields,<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>display<sp/>&quot;First<sp/>entry,<sp/>on<sp/>page(s)<sp/>2<sp/>&amp;<sp/>3<sp/>&amp;<sp/>4&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;First<sp/>entry\&quot;&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.PageNumberList.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="773" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8f24f476b9b26dda81293679fcc1564d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_PageNumberSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_PageNumberSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_PageNumberSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate an index entry and its page number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to edit the page number separator in an INDEX field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>group<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>our<sp/>INDEX<sp/>field<sp/>has<sp/>an<sp/>entry<sp/>for<sp/>a<sp/>group<sp/>of<sp/>XE<sp/>fields,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>number<sp/>of<sp/>each<sp/>page<sp/>that<sp/>contains<sp/>an<sp/>XE<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>this<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>custom<sp/>separators<sp/>to<sp/>customize<sp/>the<sp/>appearance<sp/>of<sp/>these<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>page(s)<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberListSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\e<sp/>\&quot;,<sp/>on<sp/>page(s)<sp/>\&quot;<sp/>\\l<sp/>\&quot;<sp/>&amp;<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(index-&gt;get_HasPageNumberSeparator());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>we<sp/>insert<sp/>these<sp/>XE<sp/>fields,<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>display<sp/>&quot;First<sp/>entry,<sp/>on<sp/>page(s)<sp/>2<sp/>&amp;<sp/>3<sp/>&amp;<sp/>4&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;First<sp/>entry\&quot;&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.PageNumberList.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="442" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a942c6c853098f3bfc2d4764e3f558fb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_PageRangeSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_PageRangeSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_PageRangeSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate the start and end of a page range. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify a bookmark&apos;s spanned pages as a page range for an INDEX field entry. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>collect<sp/>all<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>INDEX<sp/>entries<sp/>that<sp/>display<sp/>page<sp/>ranges,<sp/>we<sp/>can<sp/>specify<sp/>a<sp/>separator<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>appear<sp/>between<sp/>the<sp/>number<sp/>of<sp/>the<sp/>first<sp/>page,<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>last.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>page(s)<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageRangeSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\e<sp/>\&quot;,<sp/>on<sp/>page(s)<sp/>\&quot;<sp/>\\g<sp/>\&quot;<sp/>to<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;My<sp/>entry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>XE<sp/>field<sp/>names<sp/>a<sp/>bookmark<sp/>using<sp/>the<sp/>PageRangeBookmarkName<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>INDEX<sp/>entry<sp/>will<sp/>show<sp/>the<sp/>range<sp/>of<sp/>pages<sp/>that<sp/>the<sp/>bookmark<sp/>spans</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>instead<sp/>of<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_PageRangeBookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;My<sp/>entry\&quot;<sp/>\\r<sp/>MyBookmark&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;get_PageRangeBookmarkName());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>bookmark<sp/>that<sp/>starts<sp/>on<sp/>page<sp/>3<sp/>and<sp/>ends<sp/>on<sp/>page<sp/>5.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>for<sp/>the<sp/>XE<sp/>field<sp/>that<sp/>references<sp/>this<sp/>bookmark<sp/>will<sp/>display<sp/>this<sp/>page<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>table,<sp/>the<sp/>INDEX<sp/>entry<sp/>will<sp/>display<sp/>&quot;My<sp/>entry,<sp/>on<sp/>page(s)<sp/>3<sp/>to<sp/>5&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Start<sp/>of<sp/>MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.PageRangeBookmark.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="601" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a02ac0f0377578eb66da87a6f1c9691ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldIndex::get_RunSubentriesOnSameLine</definition>
        <argsstring>()</argsstring>
        <name>get_RunSubentriesOnSameLine</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_RunSubentriesOnSameLine</qualifiedname>
        <briefdescription>
<para>Gets or sets whether run subentries into the same line as the main entry. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with subentries in an INDEX field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>collect<sp/>all<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;,<sp/>see<sp/>page<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_Heading(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>XE<sp/>fields<sp/>that<sp/>have<sp/>a<sp/>Text<sp/>property<sp/>whose<sp/>value<sp/>becomes<sp/>the<sp/>heading<sp/>of<sp/>the<sp/>INDEX<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>value<sp/>contains<sp/>two<sp/>string<sp/>segments<sp/>split<sp/>by<sp/>a<sp/>colon<sp/>(the<sp/>INDEX<sp/>entry<sp/>will<sp/>treat<sp/>:)<sp/>delimiter,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>segment<sp/>is<sp/>heading,<sp/>and<sp/>the<sp/>second<sp/>segment<sp/>will<sp/>become<sp/>the<sp/>subheading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>field<sp/>first<sp/>groups<sp/>entries<sp/>alphabetically,<sp/>then,<sp/>if<sp/>there<sp/>are<sp/>multiple<sp/>XE<sp/>fields<sp/>with<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>headings,<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>further<sp/>subgroup<sp/>them<sp/>by<sp/>the<sp/>values<sp/>of<sp/>these<sp/>headings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>can<sp/>be<sp/>multiple<sp/>subgrouping<sp/>layers,<sp/>depending<sp/>on<sp/>how<sp/>many<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Text<sp/>properties<sp/>of<sp/>XE<sp/>fields<sp/>get<sp/>segmented<sp/>like<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>an<sp/>INDEX<sp/>field<sp/>entry<sp/>group<sp/>will<sp/>create<sp/>a<sp/>new<sp/>line<sp/>for<sp/>every<sp/>subheading<sp/>within<sp/>this<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>RunSubentriesOnSameLine<sp/>flag<sp/>to<sp/>true<sp/>to<sp/>keep<sp/>the<sp/>heading,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>every<sp/>subheading<sp/>for<sp/>the<sp/>group<sp/>on<sp/>one<sp/>line<sp/>instead,<sp/>which<sp/>will<sp/>make<sp/>the<sp/>INDEX<sp/>field<sp/>more<sp/>compact.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_RunSubentriesOnSameLine(runSubentriesOnTheSameLine);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(runSubentriesOnTheSameLine)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\e<sp/>\&quot;,<sp/>see<sp/>page<sp/>\&quot;<sp/>\\h<sp/>A<sp/>\\r&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\e<sp/>\&quot;,<sp/>see<sp/>page<sp/>\&quot;<sp/>\\h<sp/>A&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>two<sp/>XE<sp/>fields,<sp/>each<sp/>on<sp/>a<sp/>new<sp/>page,<sp/>and<sp/>with<sp/>the<sp/>same<sp/>heading<sp/>named<sp/>&quot;Heading<sp/>1&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>use<sp/>to<sp/>group<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>RunSubentriesOnSameLine<sp/>is<sp/>false,<sp/>then<sp/>the<sp/>INDEX<sp/>table<sp/>will<sp/>create<sp/>three<sp/>lines:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>one<sp/>line<sp/>for<sp/>the<sp/>grouping<sp/>heading<sp/>&quot;Heading<sp/>1&quot;,<sp/>and<sp/>one<sp/>more<sp/>line<sp/>for<sp/>each<sp/>subheading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>RunSubentriesOnSameLine<sp/>is<sp/>true,<sp/>then<sp/>the<sp/>INDEX<sp/>table<sp/>will<sp/>create<sp/>a<sp/>one-line</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>entry<sp/>that<sp/>encompasses<sp/>the<sp/>heading<sp/>and<sp/>every<sp/>subheading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1:Subheading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;Heading<sp/>1:Subheading<sp/>1\&quot;&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1:Subheading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Subheading.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="909" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a9a6812448c59eabfb8f96c391da6a1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_SequenceName</definition>
        <argsstring>()</argsstring>
        <name>get_SequenceName</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_SequenceName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of a sequence whose number is included with the page number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to split a document into portions by combining INDEX and SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>SequenceName<sp/>property,<sp/>name<sp/>a<sp/>SEQ<sp/>field<sp/>sequence.<sp/>Each<sp/>entry<sp/>of<sp/>this<sp/>INDEX<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>that<sp/>the<sp/>sequence<sp/>count<sp/>is<sp/>on<sp/>at<sp/>the<sp/>XE<sp/>field<sp/>location<sp/>that<sp/>created<sp/>this<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_SequenceName(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>text<sp/>that<sp/>will<sp/>around<sp/>the<sp/>sequence<sp/>and<sp/>page<sp/>numbers<sp/>to<sp/>explain<sp/>their<sp/>meaning<sp/>to<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>entry<sp/>created<sp/>with<sp/>this<sp/>configuration<sp/>will<sp/>display<sp/>something<sp/>like<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>1&quot;<sp/>at<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>PageNumberSeparator<sp/>and<sp/>SequenceSeparator<sp/>cannot<sp/>be<sp/>longer<sp/>than<sp/>15<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;\tMySequence<sp/>at<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>page<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(index-&gt;get_HasSequenceName());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\s<sp/>MySequence<sp/>\\e<sp/>\&quot;\tMySequence<sp/>at<sp/>\&quot;<sp/>\\d<sp/>\&quot;<sp/>on<sp/>page<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>SEQ<sp/>field<sp/>which<sp/>moves<sp/>the<sp/>&quot;MySequence&quot;<sp/>sequence<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>no<sp/>different<sp/>from<sp/>normal<sp/>document<sp/>text.<sp/>It<sp/>will<sp/>not<sp/>appear<sp/>on<sp/>an<sp/>INDEX<sp/>field&apos;s<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>sequenceField-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>INDEX<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>&quot;MySequence&quot;<sp/>is<sp/>at<sp/>1<sp/>and<sp/>this<sp/>XE<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,<sp/>along<sp/>with<sp/>the<sp/>custom<sp/>separators<sp/>we<sp/>defined<sp/>above,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>field&apos;s<sp/>INDEX<sp/>entry<sp/>will<sp/>display<sp/>&quot;Cat&quot;<sp/>on<sp/>the<sp/>left<sp/>side,<sp/>and<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>2&quot;<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Cat&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page<sp/>break<sp/>and<sp/>use<sp/>SEQ<sp/>fields<sp/>to<sp/>advance<sp/>&quot;MySequence&quot;<sp/>to<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>with<sp/>the<sp/>same<sp/>Text<sp/>property<sp/>as<sp/>the<sp/>one<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>group<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>are<sp/>on<sp/>page<sp/>2<sp/>with<sp/>&quot;MySequence&quot;<sp/>at<sp/>3,<sp/>&quot;,<sp/>3<sp/>on<sp/>page<sp/>3&quot;<sp/>will<sp/>be<sp/>appended<sp/>to<sp/>the<sp/>same<sp/>INDEX<sp/>entry<sp/>as<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>page<sp/>number<sp/>portion<sp/>of<sp/>that<sp/>INDEX<sp/>entry<sp/>will<sp/>now<sp/>display<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>2,<sp/>3<sp/>on<sp/>page<sp/>3&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>with<sp/>a<sp/>new<sp/>and<sp/>unique<sp/>Text<sp/>property<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>add<sp/>a<sp/>new<sp/>entry,<sp/>with<sp/>MySequence<sp/>at<sp/>3<sp/>on<sp/>page<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Dog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Sequence.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="986" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1adb98727b4007929a5882de2e37f1d68c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldIndex::get_SequenceSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_SequenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_SequenceSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate sequence numbers and page numbers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to split a document into portions by combining INDEX and SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>SequenceName<sp/>property,<sp/>name<sp/>a<sp/>SEQ<sp/>field<sp/>sequence.<sp/>Each<sp/>entry<sp/>of<sp/>this<sp/>INDEX<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>that<sp/>the<sp/>sequence<sp/>count<sp/>is<sp/>on<sp/>at<sp/>the<sp/>XE<sp/>field<sp/>location<sp/>that<sp/>created<sp/>this<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_SequenceName(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>text<sp/>that<sp/>will<sp/>around<sp/>the<sp/>sequence<sp/>and<sp/>page<sp/>numbers<sp/>to<sp/>explain<sp/>their<sp/>meaning<sp/>to<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>entry<sp/>created<sp/>with<sp/>this<sp/>configuration<sp/>will<sp/>display<sp/>something<sp/>like<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>1&quot;<sp/>at<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>PageNumberSeparator<sp/>and<sp/>SequenceSeparator<sp/>cannot<sp/>be<sp/>longer<sp/>than<sp/>15<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_PageNumberSeparator(u</highlight><highlight class="stringliteral">&quot;\tMySequence<sp/>at<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;<sp/>on<sp/>page<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(index-&gt;get_HasSequenceName());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\s<sp/>MySequence<sp/>\\e<sp/>\&quot;\tMySequence<sp/>at<sp/>\&quot;<sp/>\\d<sp/>\&quot;<sp/>on<sp/>page<sp/>\&quot;&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>SEQ<sp/>field<sp/>which<sp/>moves<sp/>the<sp/>&quot;MySequence&quot;<sp/>sequence<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>no<sp/>different<sp/>from<sp/>normal<sp/>document<sp/>text.<sp/>It<sp/>will<sp/>not<sp/>appear<sp/>on<sp/>an<sp/>INDEX<sp/>field&apos;s<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>sequenceField-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>which<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>INDEX<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>&quot;MySequence&quot;<sp/>is<sp/>at<sp/>1<sp/>and<sp/>this<sp/>XE<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,<sp/>along<sp/>with<sp/>the<sp/>custom<sp/>separators<sp/>we<sp/>defined<sp/>above,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>field&apos;s<sp/>INDEX<sp/>entry<sp/>will<sp/>display<sp/>&quot;Cat&quot;<sp/>on<sp/>the<sp/>left<sp/>side,<sp/>and<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>2&quot;<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Cat&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page<sp/>break<sp/>and<sp/>use<sp/>SEQ<sp/>fields<sp/>to<sp/>advance<sp/>&quot;MySequence&quot;<sp/>to<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">sequenceField<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">sequenceField-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>with<sp/>the<sp/>same<sp/>Text<sp/>property<sp/>as<sp/>the<sp/>one<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>group<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>are<sp/>on<sp/>page<sp/>2<sp/>with<sp/>&quot;MySequence&quot;<sp/>at<sp/>3,<sp/>&quot;,<sp/>3<sp/>on<sp/>page<sp/>3&quot;<sp/>will<sp/>be<sp/>appended<sp/>to<sp/>the<sp/>same<sp/>INDEX<sp/>entry<sp/>as<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>page<sp/>number<sp/>portion<sp/>of<sp/>that<sp/>INDEX<sp/>entry<sp/>will<sp/>now<sp/>display<sp/>&quot;MySequence<sp/>at<sp/>1<sp/>on<sp/>page<sp/>2,<sp/>3<sp/>on<sp/>page<sp/>3&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>with<sp/>a<sp/>new<sp/>and<sp/>unique<sp/>Text<sp/>property<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>add<sp/>a<sp/>new<sp/>entry,<sp/>with<sp/>MySequence<sp/>at<sp/>3<sp/>on<sp/>page<sp/>4.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Dog&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Sequence.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="394" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a5d0ad2340399e41f8ac32abbf224c09c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldIndex::get_UseYomi</definition>
        <argsstring>()</argsstring>
        <name>get_UseYomi</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::get_UseYomi</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to enable the use of yomi text for index entries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to sort INDEX field entries phonetically. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>entry<sp/>will<sp/>collect<sp/>all<sp/>XE<sp/>fields<sp/>with<sp/>matching<sp/>values<sp/>in<sp/>the<sp/>&quot;Text&quot;<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>one<sp/>entry<sp/>as<sp/>opposed<sp/>to<sp/>making<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>table<sp/>automatically<sp/>sorts<sp/>its<sp/>entries<sp/>by<sp/>the<sp/>values<sp/>of<sp/>their<sp/>Text<sp/>properties<sp/>in<sp/>alphabetic<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>INDEX<sp/>table<sp/>to<sp/>sort<sp/>entries<sp/>phonetically<sp/>using<sp/>Hiragana<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_UseYomi(sortEntriesUsingYomi);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sortEntriesUsingYomi)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\y&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/>&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>4<sp/>XE<sp/>fields,<sp/>which<sp/>would<sp/>show<sp/>up<sp/>as<sp/>entries<sp/>in<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Text&quot;<sp/>property<sp/>may<sp/>contain<sp/>a<sp/>word&apos;s<sp/>spelling<sp/>in<sp/>Kanji,<sp/>whose<sp/>pronunciation<sp/>may<sp/>be<sp/>ambiguous,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>&quot;Yomi&quot;<sp/>version<sp/>of<sp/>the<sp/>word<sp/>will<sp/>spell<sp/>exactly<sp/>how<sp/>it<sp/>is<sp/>pronounced<sp/>using<sp/>Hiragana.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>set<sp/>our<sp/>INDEX<sp/>field<sp/>to<sp/>use<sp/>Yomi,<sp/>it<sp/>will<sp/>sort<sp/>these<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>value<sp/>of<sp/>their<sp/>Yomi<sp/>properties,<sp/>instead<sp/>of<sp/>their<sp/>Text<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;愛子&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Yomi(u</highlight><highlight class="stringliteral">&quot;あ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>愛子<sp/>\\y<sp/>あ&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;明美&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Yomi(u</highlight><highlight class="stringliteral">&quot;あ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;恵美&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Yomi(u</highlight><highlight class="stringliteral">&quot;え&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;愛美&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Yomi(u</highlight><highlight class="stringliteral">&quot;え&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Yomi.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1124" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aec84751094b064a9999b95afa14051d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_BookmarkName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_BookmarkName</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_BookmarkName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af8f65babe28da4a6a1f02e25e9345d36" kindref="member">Aspose::Words::Fields::FieldIndex::get_BookmarkName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="247" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4ffad9d2dc76fb15c037fc5aa6f249bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_CrossReferenceSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_CrossReferenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_CrossReferenceSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a9db34694c08720b04f406783dadbe570" kindref="member">Aspose::Words::Fields::FieldIndex::get_CrossReferenceSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="728" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ae6d7c3edb109960b9c03e27df9607171" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_EntryType</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_EntryType</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_EntryType</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aec0232520940ba1b9fdaf44579ffbf84" kindref="member">Aspose::Words::Fields::FieldIndex::get_EntryType</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="550" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a49f4af9421a4ec9e8a0c8dc79ec4384d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_Heading</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Heading</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_Heading</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abbae4707fb793b4598e95043b6a35c06" kindref="member">Aspose::Words::Fields::FieldIndex::get_Heading</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="677" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ad657a58ea7819b2c8dc860b3ab89f635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_LanguageId</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_LanguageId</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_LanguageId</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8b7e3e464d1477090782d9093fb62984" kindref="member">Aspose::Words::Fields::FieldIndex::get_LanguageId</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1200" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aa46de3fe33770e0d2b09c5624c1c8b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_LetterRange</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_LetterRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_LetterRange</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ac36d5cb5c5d2cb7dd8ef470f6ce5658a" kindref="member">Aspose::Words::Fields::FieldIndex::get_LetterRange</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="849" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af9324129c3d5b3270f91b9064f35f1ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_NumberOfColumns</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_NumberOfColumns</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_NumberOfColumns</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a52a3d7240546963ffba79713b07f8232" kindref="member">Aspose::Words::Fields::FieldIndex::get_NumberOfColumns</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="320" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8a40cd5f9b01984ab8fdcea25068d28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_PageNumberListSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PageNumberListSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_PageNumberListSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a627f9569e85fd700a827859d1d658d83" kindref="member">Aspose::Words::Fields::FieldIndex::get_PageNumberListSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="776" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aa676866efca8f4ada2c00c6bfd3f745f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_PageNumberSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PageNumberSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_PageNumberSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8f24f476b9b26dda81293679fcc1564d" kindref="member">Aspose::Words::Fields::FieldIndex::get_PageNumberSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="445" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abfa8b0024c84845d9c2b68a6c1cfb184" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_PageRangeSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PageRangeSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_PageRangeSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a942c6c853098f3bfc2d4764e3f558fb7" kindref="member">Aspose::Words::Fields::FieldIndex::get_PageRangeSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="604" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a2440c7e2d68bc706fbed5b2204d4d453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_RunSubentriesOnSameLine</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_RunSubentriesOnSameLine</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_RunSubentriesOnSameLine</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a02ac0f0377578eb66da87a6f1c9691ff" kindref="member">Aspose::Words::Fields::FieldIndex::get_RunSubentriesOnSameLine</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="912" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ab38854e8998cdc78b75750a01036451b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_SequenceName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_SequenceName</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_SequenceName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a9a6812448c59eabfb8f96c391da6a1e3" kindref="member">Aspose::Words::Fields::FieldIndex::get_SequenceName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="989" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abb04caaec2469263cb662b5f6dbd01bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_SequenceSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_SequenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_SequenceSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1adb98727b4007929a5882de2e37f1d68c" kindref="member">Aspose::Words::Fields::FieldIndex::get_SequenceSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="397" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_index_1adc6c52712dbfc860e1188604302ffe68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldIndex::set_UseYomi</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UseYomi</name>
        <qualifiedname>Aspose::Words::Fields::FieldIndex::set_UseYomi</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a5d0ad2340399e41f8ac32abbf224c09c" kindref="member">Aspose::Words::Fields::FieldIndex::get_UseYomi</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="1127" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements the INDEX field. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to create an INDEX field, and then use XE fields to populate it with entries. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>containing<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>INDEX<sp/>field<sp/>only<sp/>to<sp/>display<sp/>XE<sp/>fields<sp/>that<sp/>are<sp/>within<sp/>the<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>bookmark<sp/>named<sp/>&quot;MainBookmark&quot;,<sp/>and<sp/>whose<sp/>&quot;EntryType&quot;<sp/>properties<sp/>have<sp/>a<sp/>value<sp/>of<sp/>&quot;A&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>both<sp/>INDEX<sp/>and<sp/>XE<sp/>fields,<sp/>the<sp/>&quot;EntryType&quot;<sp/>property<sp/>only<sp/>uses<sp/>the<sp/>first<sp/>character<sp/>of<sp/>its<sp/>string<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\b<sp/>MainBookmark<sp/>\\f<sp/>A&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>a<sp/>new<sp/>page,<sp/>start<sp/>the<sp/>bookmark<sp/>with<sp/>a<sp/>name<sp/>that<sp/>matches<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>&quot;BookmarkName&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>INDEX<sp/>field<sp/>will<sp/>pick<sp/>up<sp/>this<sp/>entry<sp/>because<sp/>it<sp/>is<sp/>inside<sp/>the<sp/>bookmark,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>its<sp/>entry<sp/>type<sp/>also<sp/>matches<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>entry<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>\&quot;Index<sp/>entry<sp/>1\&quot;<sp/>\\f<sp/>A&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>an<sp/>XE<sp/>field<sp/>that<sp/>will<sp/>not<sp/>appear<sp/>in<sp/>the<sp/>INDEX<sp/>because<sp/>the<sp/>entry<sp/>types<sp/>do<sp/>not<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>End<sp/>the<sp/>bookmark<sp/>and<sp/>insert<sp/>an<sp/>XE<sp/>field<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>of<sp/>the<sp/>same<sp/>type<sp/>as<sp/>the<sp/>INDEX<sp/>field,<sp/>but<sp/>will<sp/>not<sp/>appear</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark&apos;s<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MainBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Index<sp/>entry<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_EntryType(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Filtering.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to populate an INDEX field with entries using XE fields, and also modify its appearance. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>INDEX<sp/>field<sp/>which<sp/>will<sp/>display<sp/>an<sp/>entry<sp/>for<sp/>each<sp/>XE<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>XE<sp/>field&apos;s<sp/>Text<sp/>property<sp/>value<sp/>on<sp/>the<sp/>left<sp/>side,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>contains<sp/>the<sp/>XE<sp/>field<sp/>on<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>XE<sp/>fields<sp/>have<sp/>the<sp/>same<sp/>value<sp/>in<sp/>their<sp/>&quot;Text&quot;<sp/>property,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>INDEX<sp/>field<sp/>will<sp/>group<sp/>them<sp/>into<sp/>one<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>System::DynamicCast&lt;FieldIndex&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecadf1ee46df3ca9b4fa8191d15183b6b86" kindref="member" tooltip="Specifies the INDEX field.">FieldType::FieldIndex</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LanguageId(u</highlight><highlight class="stringliteral">&quot;1033&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setting<sp/>this<sp/>property&apos;s<sp/>value<sp/>to<sp/>&quot;A&quot;<sp/>will<sp/>group<sp/>all<sp/>the<sp/>entries<sp/>by<sp/>their<sp/>first<sp/>letter,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>place<sp/>that<sp/>letter<sp/>in<sp/>uppercase<sp/>above<sp/>each<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_Heading(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>table<sp/>created<sp/>by<sp/>the<sp/>INDEX<sp/>field<sp/>to<sp/>span<sp/>over<sp/>2<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_NumberOfColumns(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>any<sp/>entries<sp/>with<sp/>starting<sp/>letters<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>to<sp/>be<sp/>omitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">index-&gt;set_LetterRange(u</highlight><highlight class="stringliteral">&quot;a-c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>INDEX<sp/><sp/>\\z<sp/>1033<sp/>\\h<sp/>A<sp/>\\c<sp/>2<sp/>\\p<sp/>a-c&quot;</highlight><highlight class="normal">,<sp/>index-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>show<sp/>up<sp/>under<sp/>the<sp/>&quot;A&quot;<sp/>heading,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>their<sp/>respective<sp/>text<sp/>stylings<sp/>also<sp/>applied<sp/>to<sp/>their<sp/>page<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsItalic(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apple<sp/>\\i&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Apricot&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_IsBold(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>XE<sp/><sp/>Apricot<sp/>\\b&quot;</highlight><highlight class="normal">,<sp/>indexEntry-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>the<sp/>next<sp/>two<sp/>XE<sp/>fields<sp/>will<sp/>be<sp/>under<sp/>a<sp/>&quot;B&quot;<sp/>and<sp/>&quot;C&quot;<sp/>heading<sp/>in<sp/>the<sp/>INDEX<sp/>fields<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Banana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Cherry&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>INDEX<sp/>fields<sp/>sort<sp/>all<sp/>entries<sp/>alphabetically,<sp/>so<sp/>this<sp/>entry<sp/>will<sp/>show<sp/>up<sp/>under<sp/>&quot;A&quot;<sp/>with<sp/>the<sp/>other<sp/>two.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Avocado&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>starts<sp/>with<sp/>the<sp/>letter<sp/>&quot;D&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>is<sp/>outside<sp/>the<sp/>&quot;a-c&quot;<sp/>character<sp/>range<sp/>that<sp/>the<sp/>INDEX<sp/>field&apos;s<sp/>LetterRange<sp/>property<sp/>defines.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">indexEntry<sp/>=<sp/>System::DynamicCast&lt;FieldXE&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecab6ba221bacb534460d135e18611b465e" kindref="member" tooltip="Specifies the XE field.">FieldType::FieldIndexEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">indexEntry-&gt;set_Text(u</highlight><highlight class="stringliteral">&quot;Durian&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.INDEX.XE.Formatting.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldIndex</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldIndex</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/FieldIndex.h" line="176" column="1" bodyfile="Aspose.Words.Cpp/Fields/FieldIndex.h" bodystart="177" bodyend="1215"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aef84e2250a71c06f5873d9c1157fea04" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aac44402a10386721582717aa361bddd1" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>BaseType1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af8f65babe28da4a6a1f02e25e9345d36" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_BookmarkName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a9db34694c08720b04f406783dadbe570" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_CrossReferenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a5c2d01019c517ea8098f296903e37a34" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_DisplayResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_End</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aec0232520940ba1b9fdaf44579ffbf84" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_EntryType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a399c14463916724cac0015b430175589" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_FieldEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abc40cddc1325f7fec80d8530e5287448" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_FieldStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a090c5d09915e2ead6cc54fda736dd7c2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_Format</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a46b0945f348174a1eba1611a864f196c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_HasPageNumberSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af8d084e164b2edec90ca4aa8d054ad24" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_HasSequenceName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abbae4707fb793b4598e95043b6a35c06" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_Heading</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8b7e3e464d1477090782d9093fb62984" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_LanguageId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ac36d5cb5c5d2cb7dd8ef470f6ce5658a" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_LetterRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a52a3d7240546963ffba79713b07f8232" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_NumberOfColumns</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a627f9569e85fd700a827859d1d658d83" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_PageNumberListSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8f24f476b9b26dda81293679fcc1564d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_PageNumberSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a942c6c853098f3bfc2d4764e3f558fb7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_PageRangeSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a02ac0f0377578eb66da87a6f1c9691ff" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_RunSubentriesOnSameLine</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a9a6812448c59eabfb8f96c391da6a1e3" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_SequenceName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1adb98727b4007929a5882de2e37f1d68c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_SequenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_Start</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad68196653db5cfca30c1ba18ed44c76e" prot="public" virt="virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a5d0ad2340399e41f8ac32abbf224c09c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>get_UseYomi</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a56904bca6c64d7cef974b86c247d529a" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>GetBidiParagraphLevelOverride</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a578378121cced134f079765f19f64498" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ac531fcb4d09d3e324ffd1fd9c6521df7" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>GetSwitchType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af9427a9e0278ba247198e4c5a60502de" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad26a8021af3dbdc5bf0a1360a201222f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a5963f399bd03a93e6cd69c3ee9144edc" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aec84751094b064a9999b95afa14051d9" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_BookmarkName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4ffad9d2dc76fb15c037fc5aa6f249bf" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_CrossReferenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ae6d7c3edb109960b9c03e27df9607171" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_EntryType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a49f4af9421a4ec9e8a0c8dc79ec4384d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_Heading</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa637d825865724665fb8ed856e664d95" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ac70b125adbe7f0ba5b889280cd282c47" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ad657a58ea7819b2c8dc860b3ab89f635" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_LanguageId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aa46de3fe33770e0d2b09c5624c1c8b83" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_LetterRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a165f748dd5ba33844f1d765f6c710f88" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1af9324129c3d5b3270f91b9064f35f1ce" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_NumberOfColumns</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a8a40cd5f9b01984ab8fdcea25068d28e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_PageNumberListSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aa676866efca8f4ada2c00c6bfd3f745f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_PageNumberSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abfa8b0024c84845d9c2b68a6c1cfb184" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_PageRangeSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa6af1e900c84ae806f071098dfe8f087" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a2440c7e2d68bc706fbed5b2204d4d453" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_RunSubentriesOnSameLine</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1ab38854e8998cdc78b75750a01036451b" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_SequenceName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1abb04caaec2469263cb662b5f6dbd01bf" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_SequenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1adc6c52712dbfc860e1188604302ffe68" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>set_UseYomi</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1aa250c22f057e77ceb8b3fac7f47c54da" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4361f88df65f894ef2b0876095e984c4" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9f908becb16b26bed76d58dbcee9929" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>Unlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a1298d7daa07c863bf97cb3f37a4d7a99" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4e5f9ae23c30f443f616f61137ca36f3" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>UpdateCore</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a091fd6d4c65a1e6648342312bf76564e" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldIndex</scope><name>~FieldIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
