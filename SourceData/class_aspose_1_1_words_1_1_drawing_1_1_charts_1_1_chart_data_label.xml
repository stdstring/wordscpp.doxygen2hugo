<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Drawing::Charts::ChartDataLabel</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Drawing::Charts::Core::INumberFormatProvider</basecompoundref>
    <includes refid="_chart_data_label_8h" local="no">Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a506724f700a611b8747eb3fd41865b04" prot="private" static="no">
        <type>Aspose::Words::Drawing::Charts::Core::INumberFormatProvider</type>
        <definition>typedef Aspose::Words::Drawing::Charts::Core::INumberFormatProvider Aspose::Words::Drawing::Charts::ChartDataLabel::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="140" column="73" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a57a278b7418ae6af882cfc4d7c69f34b" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label" kindref="compound">ChartDataLabel</ref></type>
        <definition>typedef ChartDataLabel Aspose::Words::Drawing::Charts::ChartDataLabel::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="139" column="28" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac5ad65f487605b26c9120b46a5aa1718" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; BaseType &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="142" column="37" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a9147b850a0a6ce5d2ad8c3391a558516" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Drawing::Charts::ChartDataLabel::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1164" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a5a79f6aa74c9b65999edc38e76b1cd6c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1170" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad605960358e3e08d6df9a4e263129761" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1171" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ada01c163d0c25a320f86a21df39b1b37" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1172" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac8344685b57698d331119dedb3d995ff" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1173" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad0edf2c5acc786350de83a9ac92c85fa" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1174" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1abd4dbb797d8e9d28067454f49f890b70" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.weak_ptr/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::WeakPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::WeakPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1175" column="21" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a7383080fc2c0adbe0f0d5b74c923eed0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Drawing::Charts::ChartDataLabel::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1176" column="23" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="1176" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aa1882e8d62acb326544adf28ff0808a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Drawing::Charts::ChartDataLabel::~ChartDataLabel</definition>
        <argsstring>()</argsstring>
        <name>~ChartDataLabel</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::~ChartDataLabel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1160" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a8ff8750876ed96bbebf6bca8a6131922" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsInherited</definition>
        <argsstring>() override</argsstring>
        <name>get_IsInherited</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsInherited</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1168" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a80a5055dc49be0044c288a6fa2f9a4a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Drawing::Charts::Core::ComplexTypes::DmlChartNumFormat &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Drawing::Charts::Core::ComplexTypes::DmlChartNumFormat &gt; Aspose::Words::Drawing::Charts::ChartDataLabel::get_NumFmt_INumberFormatProvider</definition>
        <argsstring>() override</argsstring>
        <name>get_NumFmt_INumberFormatProvider</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_NumFmt_INumberFormatProvider</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1166" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a5f781714453e4a055fa0d4dec072a45c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Drawing::Charts::ChartDataLabel::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="143" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1af50091a513434fe2b3ce63527bbbeb7a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_NumFmt_INumberFormatProvider</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Drawing::Charts::Core::ComplexTypes::DmlChartNumFormat &gt;) override</argsstring>
        <name>set_NumFmt_INumberFormatProvider</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_NumFmt_INumberFormatProvider</qualifiedname>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Drawing::Charts::Core::ComplexTypes::DmlChartNumFormat &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1167" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a29d8ef7c76f6fa4a0e77bbd15cf46caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::ClearFormat</definition>
        <argsstring>()</argsstring>
        <name>ClearFormat</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::ClearFormat</qualifiedname>
        <briefdescription>
<para>Clears format of this data label. The properties are set to the default values defined in the parent data label collection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1156" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a79953fd18e318831abae9836653c7eae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Drawing::Charts::ChartDataLabel::get_Index</definition>
        <argsstring>()</argsstring>
        <name>get_Index</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_Index</qualifiedname>
        <briefdescription>
<para>Specifies the index of the containing element. This index shall determine which of the parent&apos;s children collection this element applies to. Default value is 0. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="225" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a49c166a0cfd19440b7872bf3c245561a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsHidden</definition>
        <argsstring>()</argsstring>
        <name>get_IsHidden</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsHidden</qualifiedname>
        <briefdescription>
<para>Gets/sets a flag indicating whether this label is hidden. The default value is <bold>false</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1149" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad4a961e05bed40b9e14f5430a5e80d12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsVisible</definition>
        <argsstring>()</argsstring>
        <name>get_IsVisible</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsVisible</qualifiedname>
        <briefdescription>
<para>Returns true if this data label has something to display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="992" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad55da50b90062e49e5f48b1ed719f3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_number_format" kindref="compound">Aspose::Words::Drawing::Charts::ChartNumberFormat</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Drawing::Charts::ChartNumberFormat &gt; Aspose::Words::Drawing::Charts::ChartDataLabel::get_NumberFormat</definition>
        <argsstring>()</argsstring>
        <name>get_NumberFormat</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_NumberFormat</qualifiedname>
        <briefdescription>
<para>Returns number format of the parent element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1070" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aef03aa891b2b83530c7441f668a7ff85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Drawing::Charts::ChartDataLabel::get_Separator</definition>
        <argsstring>()</argsstring>
        <name>get_Separator</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_Separator</qualifiedname>
        <briefdescription>
<para>Gets or sets string separator used for the data labels on a chart. The default is a comma, except for pie charts showing only category name and percentage, when a line break shall be used instead. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="911" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac9aa578473dfd5739e7f2a466de857f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowBubbleSize</definition>
        <argsstring>()</argsstring>
        <name>get_ShowBubbleSize</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowBubbleSize</qualifiedname>
        <briefdescription>
<para>Allows to specify if bubble size is to be displayed for the data labels on a chart. Applies only to Bubble charts. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use 3D effects with bubble charts. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Shape&gt;<sp/>shape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36ac5d8ef46785f893afc223799a099b167" kindref="member" tooltip="3D Bubble chart.">ChartType::Bubble3D</ref>,<sp/>500,<sp/>350);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>shape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Y-Values&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Bubble3D());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>a<sp/>data<sp/>label<sp/>to<sp/>each<sp/>bubble<sp/>that<sp/>displays<sp/>its<sp/>diameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>3;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowBubbleSize(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.Bubble3D.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="336" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a212c07ccddce98a22f46e083dedbce0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowCategoryName</definition>
        <argsstring>()</argsstring>
        <name>get_ShowCategoryName</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowCategoryName</qualifiedname>
        <briefdescription>
<para>Allows to specify if category name is to be displayed for the data labels on a chart. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="304" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a4eddf3a02e8e4a239ecc10e85115f547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowDataLabelsRange</definition>
        <argsstring>()</argsstring>
        <name>get_ShowDataLabelsRange</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowDataLabelsRange</qualifiedname>
        <briefdescription>
<para>Allows to specify if values from data labels range to be displayed in the data labels. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="828" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a683247d14eb9197bfb57300512b65e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowLeaderLines</definition>
        <argsstring>()</argsstring>
        <name>get_ShowLeaderLines</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowLeaderLines</qualifiedname>
        <briefdescription>
<para>Allows to specify if data label leader lines need be shown. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="746" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ace659d687ffbf86c238bc42e0638d70a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowLegendKey</definition>
        <argsstring>()</argsstring>
        <name>get_ShowLegendKey</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowLegendKey</qualifiedname>
        <briefdescription>
<para>Allows to specify if legend key is to be displayed for the data labels on a chart. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="418" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aa57138a9978ac35f64205aa715ae9445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowPercentage</definition>
        <argsstring>()</argsstring>
        <name>get_ShowPercentage</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowPercentage</qualifiedname>
        <briefdescription>
<para>Allows to specify if percentage value is to be displayed for the data labels on a chart. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="500" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a4e6f74bccae5167fce15330439ad2da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowSeriesName</definition>
        <argsstring>()</argsstring>
        <name>get_ShowSeriesName</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowSeriesName</qualifiedname>
        <briefdescription>
<para>Returns or sets a Boolean to indicate the series name display behavior for the data labels on a chart. True to show the series name. False to hide. By default false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="582" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a75aabd8d1f9363ff2d5f76e5f6cf019e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowValue</definition>
        <argsstring>()</argsstring>
        <name>get_ShowValue</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowValue</qualifiedname>
        <briefdescription>
<para>Allows to specify if values are to be displayed in the data labels. Default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="664" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac5f6271db4f224031628c0073ff1dc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_IsHidden</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IsHidden</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_IsHidden</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a49c166a0cfd19440b7872bf3c245561a" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_IsHidden</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="1152" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a9663161af2b35708e25a9a9024fa23d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_Separator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Separator</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_Separator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aef03aa891b2b83530c7441f668a7ff85" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_Separator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="914" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a0e875cbf2044cab89d69f2105c055fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowBubbleSize</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowBubbleSize</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowBubbleSize</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac9aa578473dfd5739e7f2a466de857f1" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowBubbleSize</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="339" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1afb3d3a24d961b71a0c53033cd1bba557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowCategoryName</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowCategoryName</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowCategoryName</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a212c07ccddce98a22f46e083dedbce0f" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowCategoryName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="307" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aab804654c7762d6683d096355c72b80a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowDataLabelsRange</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowDataLabelsRange</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowDataLabelsRange</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a4eddf3a02e8e4a239ecc10e85115f547" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowDataLabelsRange</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="831" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a1f7f9be453cd375308ceed38b9702440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowLeaderLines</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowLeaderLines</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowLeaderLines</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a683247d14eb9197bfb57300512b65e38" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowLeaderLines</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="749" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ab25c0e92d75d192d9460cc4d8362b075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowLegendKey</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowLegendKey</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowLegendKey</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ace659d687ffbf86c238bc42e0638d70a" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowLegendKey</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="421" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a9315f9d17e68c277aa65029cec86addf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowPercentage</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowPercentage</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowPercentage</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aa57138a9978ac35f64205aa715ae9445" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowPercentage</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="503" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a7fa1f2c0a4c3cf22f2b62a4f9d47be40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowSeriesName</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowSeriesName</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowSeriesName</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a4e6f74bccae5167fce15330439ad2da0" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowSeriesName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="585" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a1be2a0e7b120ae4b93d2121404879297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowValue</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ShowValue</name>
        <qualifiedname>Aspose::Words::Drawing::Charts::ChartDataLabel::set_ShowValue</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a75aabd8d1f9363ff2d5f76e5f6cf019e" kindref="member">Aspose::Words::Drawing::Charts::ChartDataLabel::get_ShowValue</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="667" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents data label on a chart point or trendline. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply labels to data points in a line chart. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DataLabels()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Shape&gt;<sp/>chartShape<sp/>=<sp/>builder-&gt;InsertChart(<ref refid="namespace_aspose_1_1_words_1_1_drawing_1_1_charts_1a1a4ae35eb8880ff95c16437f9d3f3b36a4803e6b9e63dabf04de980788d6a13c4" kindref="member" tooltip="Line chart.">ChartType::Line</ref>,<sp/>400,<sp/>300);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Chart&gt;<sp/>chart<sp/>=<sp/>chartShape-&gt;get_Chart();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>chart-&gt;get_Series()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>1&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>2&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Series<sp/>3&quot;</highlight><highlight class="normal">,<sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>data<sp/>labels<sp/>to<sp/>every<sp/>series<sp/>in<sp/>the<sp/>chart.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>labels<sp/>will<sp/>appear<sp/>next<sp/>to<sp/>each<sp/>data<sp/>point<sp/>in<sp/>the<sp/>graph<sp/>and<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>series<sp/>:<sp/>System::IterateOver(chart-&gt;get_Series()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyDataLabels(series,<sp/>4,<sp/>u</highlight><highlight class="stringliteral">&quot;000.0&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(4,<sp/>series-&gt;get_DataLabels()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>separator<sp/>string<sp/>for<sp/>every<sp/>data<sp/>label<sp/>in<sp/>a<sp/>series.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;ChartDataLabel&gt;&gt;&gt;<sp/>enumerator<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(0)-&gt;get_DataLabels()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Separator());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerator-&gt;get_Current()-&gt;set_Separator(u</highlight><highlight class="stringliteral">&quot;<sp/>&amp;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>cleaner<sp/>looking<sp/>graph,<sp/>we<sp/>can<sp/>remove<sp/>data<sp/>labels<sp/>individually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(1)-&gt;get_DataLabels()-&gt;idx_get(2)-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>strip<sp/>an<sp/>entire<sp/>series<sp/>of<sp/>its<sp/>data<sp/>labels<sp/>at<sp/>once.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>chart-&gt;get_Series()-&gt;idx_get(2)-&gt;get_DataLabels()-&gt;ClearFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Charts.DataLabels.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyDataLabels(SharedPtr&lt;ChartSeries&gt;<sp/>series,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelsCount,<sp/>String<sp/>numberFormat,<sp/>String<sp/>separator)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>labelsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;set_HasDataLabels(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowCategoryName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowSeriesName(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLeaderLines(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowLegendKey(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_ShowPercentage(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_IsHidden(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_NumberFormat()-&gt;set_FormatCode(numberFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;set_Separator(separator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_ShowDataLabelsRange());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsVisible());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(series-&gt;get_DataLabels()-&gt;idx_get(i)-&gt;get_IsHidden());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Drawing::Charts::ChartDataLabel</label>
        <link refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Drawing::Charts::Core::INumberFormatProvider</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Drawing::Charts::ChartDataLabel</label>
        <link refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Drawing::Charts::Core::INumberFormatProvider</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" line="137" column="1" bodyfile="Aspose.Words.Cpp/Drawing/Charts/ChartDataLabel.h" bodystart="138" bodyend="1178"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a506724f700a611b8747eb3fd41865b04" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a29d8ef7c76f6fa4a0e77bbd15cf46caf" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>ClearFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a79953fd18e318831abae9836653c7eae" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_Index</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a49c166a0cfd19440b7872bf3c245561a" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_IsHidden</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a8ff8750876ed96bbebf6bca8a6131922" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_IsInherited</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad4a961e05bed40b9e14f5430a5e80d12" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_IsVisible</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad55da50b90062e49e5f48b1ed719f3b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_NumberFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a80a5055dc49be0044c288a6fa2f9a4a9" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_NumFmt_INumberFormatProvider</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aef03aa891b2b83530c7441f668a7ff85" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac9aa578473dfd5739e7f2a466de857f1" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowBubbleSize</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a212c07ccddce98a22f46e083dedbce0f" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowCategoryName</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a4eddf3a02e8e4a239ecc10e85115f547" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowDataLabelsRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a683247d14eb9197bfb57300512b65e38" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowLeaderLines</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ace659d687ffbf86c238bc42e0638d70a" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowLegendKey</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aa57138a9978ac35f64205aa715ae9445" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowPercentage</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a4e6f74bccae5167fce15330439ad2da0" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowSeriesName</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a75aabd8d1f9363ff2d5f76e5f6cf019e" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>get_ShowValue</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a9147b850a0a6ce5d2ad8c3391a558516" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a5a79f6aa74c9b65999edc38e76b1cd6c" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad605960358e3e08d6df9a4e263129761" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ada01c163d0c25a320f86a21df39b1b37" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac8344685b57698d331119dedb3d995ff" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ad0edf2c5acc786350de83a9ac92c85fa" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1abd4dbb797d8e9d28067454f49f890b70" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a7383080fc2c0adbe0f0d5b74c923eed0" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a5f781714453e4a055fa0d4dec072a45c" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac5f6271db4f224031628c0073ff1dc16" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_IsHidden</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1af50091a513434fe2b3ce63527bbbeb7a" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_NumFmt_INumberFormatProvider</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a9663161af2b35708e25a9a9024fa23d9" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a0e875cbf2044cab89d69f2105c055fa1" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowBubbleSize</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1afb3d3a24d961b71a0c53033cd1bba557" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowCategoryName</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aab804654c7762d6683d096355c72b80a" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowDataLabelsRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a1f7f9be453cd375308ceed38b9702440" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowLeaderLines</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ab25c0e92d75d192d9460cc4d8362b075" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowLegendKey</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a9315f9d17e68c277aa65029cec86addf" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowPercentage</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a7fa1f2c0a4c3cf22f2b62a4f9d47be40" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowSeriesName</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a1be2a0e7b120ae4b93d2121404879297" prot="public" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>set_ShowValue</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1a57a278b7418ae6af882cfc4d7c69f34b" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1ac5ad65f487605b26c9120b46a5aa1718" prot="private" virt="non-virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_drawing_1_1_charts_1_1_chart_data_label_1aa1882e8d62acb326544adf28ff0808a5" prot="private" virt="virtual"><scope>Aspose::Words::Drawing::Charts::ChartDataLabel</scope><name>~ChartDataLabel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
