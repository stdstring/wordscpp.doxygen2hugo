<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Properties::BuiltInDocumentProperties</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection" prot="public" virt="non-virtual">Aspose::Words::Properties::DocumentPropertyCollection</basecompoundref>
    <includes refid="_built_in_document_properties_8h" local="no">Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a06a798a73c874bacdec55998311f3d96" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection" kindref="compound">Aspose::Words::Properties::DocumentPropertyCollection</ref></type>
        <definition>typedef Aspose::Words::Properties::DocumentPropertyCollection Aspose::Words::Properties::BuiltInDocumentProperties::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="93" column="67" bodyfile="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5cad44130f8d1894ad200ce9ba55e392" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties" kindref="compound">BuiltInDocumentProperties</ref></type>
        <definition>typedef BuiltInDocumentProperties Aspose::Words::Properties::BuiltInDocumentProperties::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="92" column="39" bodyfile="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac7627fcdcfb4b34a481bc10afc0404a6" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection" kindref="compound">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Properties::BuiltInDocumentProperties::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="95" column="37" bodyfile="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae8aa75ba364af2e82ed0cb6a9afea834" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Properties::BuiltInDocumentProperties::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2434" column="23" bodyfile="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" bodystart="2434" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1abbf47ca93bdc8600003bb31ced49a38f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Properties::BuiltInDocumentProperties::BuiltInDocumentProperties</definition>
        <argsstring>()</argsstring>
        <name>BuiltInDocumentProperties</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::BuiltInDocumentProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2436" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1addd7142ffdf9f75d38fff55a6eba6cba" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Properties::BuiltInDocumentProperties::~BuiltInDocumentProperties</definition>
        <argsstring>()</argsstring>
        <name>~BuiltInDocumentProperties</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::~BuiltInDocumentProperties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2440" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aee292fa286d32ea4873fa1d26b03f2e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection" kindref="compound">Aspose::Words::Properties::DocumentPropertyCollection</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Properties::DocumentPropertyCollection &gt; Aspose::Words::Properties::BuiltInDocumentProperties::Create</definition>
        <argsstring>() override</argsstring>
        <name>Create</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::Create</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1aeba2a3dfde762ace779dcebd9cb6d566">Create</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2438" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa386b956886bef7b7356d0ae834ca1b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Properties::BuiltInDocumentProperties::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="96" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a224231012532469f0b63f227cf3f99c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Author</definition>
        <argsstring>()</argsstring>
        <name>get_Author</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Author</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the document&apos;s author. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties in the &quot;Description&quot; category. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>built-in<sp/>document<sp/>properties<sp/>that<sp/>have<sp/>fields<sp/>that<sp/>can<sp/>display<sp/>their<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>&quot;Author&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>an<sp/>AUTHOR<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Author:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>&quot;Title&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>TITLE<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;John&apos;s<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nDoc<sp/>title:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldTitle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>&quot;Subject&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>SUBJECT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Subject(u</highlight><highlight class="stringliteral">&quot;My<sp/>subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nSubject:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldSubject,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>&quot;Comments&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>COMMENTS<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Comments(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>{0}&apos;s<sp/>document<sp/>about<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Author(),<sp/>properties-&gt;get_Subject()));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nComments:\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldComments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Category&quot;<sp/>built-in<sp/>property<sp/>does<sp/>not<sp/>have<sp/>a<sp/>field<sp/>that<sp/>can<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>category&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>multiple<sp/>keywords<sp/>for<sp/>a<sp/>document<sp/>by<sp/>separating<sp/>the<sp/>string<sp/>value<sp/>of<sp/>the<sp/>&quot;Keywords&quot;<sp/>property<sp/>with<sp/>semicolons.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Keywords(u</highlight><highlight class="stringliteral">&quot;Tag<sp/>1;<sp/>Tag<sp/>2;<sp/>Tag<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Author&quot;<sp/>built-in<sp/>property<sp/>is<sp/>in<sp/>the<sp/>&quot;Origin&quot;<sp/>group,<sp/>and<sp/>the<sp/>others<sp/>are<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Description.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="145" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a4fd92024c61d8be83aa6649a6e10fabc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Bytes</definition>
        <argsstring>()</argsstring>
        <name>get_Bytes</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Bytes</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of bytes in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Microsoft Word does not always set this property.</para>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="263" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1900a7c389ff994ec1037eca908c1a8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Category</definition>
        <argsstring>()</argsstring>
        <name>get_Category</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Category</qualifiedname>
        <briefdescription>
<para>Gets or sets the category of the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties in the &quot;Description&quot; category. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>built-in<sp/>document<sp/>properties<sp/>that<sp/>have<sp/>fields<sp/>that<sp/>can<sp/>display<sp/>their<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>&quot;Author&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>an<sp/>AUTHOR<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Author:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>&quot;Title&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>TITLE<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;John&apos;s<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nDoc<sp/>title:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldTitle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>&quot;Subject&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>SUBJECT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Subject(u</highlight><highlight class="stringliteral">&quot;My<sp/>subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nSubject:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldSubject,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>&quot;Comments&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>COMMENTS<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Comments(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>{0}&apos;s<sp/>document<sp/>about<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Author(),<sp/>properties-&gt;get_Subject()));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nComments:\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldComments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Category&quot;<sp/>built-in<sp/>property<sp/>does<sp/>not<sp/>have<sp/>a<sp/>field<sp/>that<sp/>can<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>category&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>multiple<sp/>keywords<sp/>for<sp/>a<sp/>document<sp/>by<sp/>separating<sp/>the<sp/>string<sp/>value<sp/>of<sp/>the<sp/>&quot;Keywords&quot;<sp/>property<sp/>with<sp/>semicolons.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Keywords(u</highlight><highlight class="stringliteral">&quot;Tag<sp/>1;<sp/>Tag<sp/>2;<sp/>Tag<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Author&quot;<sp/>built-in<sp/>property<sp/>is<sp/>in<sp/>the<sp/>&quot;Origin&quot;<sp/>group,<sp/>and<sp/>the<sp/>others<sp/>are<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Description.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="619" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab5319940a69f96f39eccfd348a0394f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Characters</definition>
        <argsstring>()</argsstring>
        <name>get_Characters</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Characters</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of characters in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words updates this property when you call <ref refid="class_aspose_1_1_words_1_1_document_1a1828e1ccbb5d7936fd248401b0c8deee" kindref="member">UpdateWordCount</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to update all list labels in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;sed<sp/>do<sp/>eiusmod<sp/>tempor<sp/>incididunt<sp/>ut<sp/>labore<sp/>et<sp/>dolore<sp/>magna<sp/>aliqua.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Ut<sp/>enim<sp/>ad<sp/>minim<sp/>veniam,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;quis<sp/>nostrud<sp/>exercitation<sp/>ullamco<sp/>laboris<sp/>nisi<sp/>ut<sp/>aliquip<sp/>ex<sp/>ea<sp/>commodo<sp/>consequat.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspose.Words<sp/>does<sp/>not<sp/>track<sp/>document<sp/>metrics<sp/>like<sp/>these<sp/>in<sp/>real<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>accurate<sp/>values<sp/>for<sp/>three<sp/>of<sp/>these<sp/>properties,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>update<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(196,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(36,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>line<sp/>count,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>call<sp/>a<sp/>specific<sp/>overload<sp/>of<sp/>the<sp/>updating<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
</programlisting></para>
<para>Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="409" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a3c682a63e3dec93c1a5a10b7f8ee4373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_CharactersWithSpaces</definition>
        <argsstring>()</argsstring>
        <name>get_CharactersWithSpaces</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_CharactersWithSpaces</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of characters (including spaces) in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words updates this property when you call <ref refid="class_aspose_1_1_words_1_1_document_1a1828e1ccbb5d7936fd248401b0c8deee" kindref="member">UpdateWordCount</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="525" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac9b2b2288824e5b7add014de09a427b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Comments</definition>
        <argsstring>()</argsstring>
        <name>get_Comments</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Comments</qualifiedname>
        <briefdescription>
<para>Gets or sets the document comments. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties in the &quot;Description&quot; category. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>built-in<sp/>document<sp/>properties<sp/>that<sp/>have<sp/>fields<sp/>that<sp/>can<sp/>display<sp/>their<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>&quot;Author&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>an<sp/>AUTHOR<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Author:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>&quot;Title&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>TITLE<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;John&apos;s<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nDoc<sp/>title:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldTitle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>&quot;Subject&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>SUBJECT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Subject(u</highlight><highlight class="stringliteral">&quot;My<sp/>subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nSubject:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldSubject,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>&quot;Comments&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>COMMENTS<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Comments(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>{0}&apos;s<sp/>document<sp/>about<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Author(),<sp/>properties-&gt;get_Subject()));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nComments:\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldComments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Category&quot;<sp/>built-in<sp/>property<sp/>does<sp/>not<sp/>have<sp/>a<sp/>field<sp/>that<sp/>can<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>category&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>multiple<sp/>keywords<sp/>for<sp/>a<sp/>document<sp/>by<sp/>separating<sp/>the<sp/>string<sp/>value<sp/>of<sp/>the<sp/>&quot;Keywords&quot;<sp/>property<sp/>with<sp/>semicolons.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Keywords(u</highlight><highlight class="stringliteral">&quot;Tag<sp/>1;<sp/>Tag<sp/>2;<sp/>Tag<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Author&quot;<sp/>built-in<sp/>property<sp/>is<sp/>in<sp/>the<sp/>&quot;Origin&quot;<sp/>group,<sp/>and<sp/>the<sp/>others<sp/>are<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Description.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="572" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a2e56e6e7d6b8a6e3aa204488df85f937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Company</definition>
        <argsstring>()</argsstring>
        <name>get_Company</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Company</qualifiedname>
        <briefdescription>
<para>Gets or sets the company property. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="657" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a39746ca1d59be6ae55d3501c1aad74a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_ContentStatus</definition>
        <argsstring>()</argsstring>
        <name>get_ContentStatus</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_ContentStatus</qualifiedname>
        <briefdescription>
<para>Gets or sets the ContentStatus of the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2115" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a57ace2480dfb2b3f54a0f16414ea23d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_ContentType</definition>
        <argsstring>()</argsstring>
        <name>get_ContentType</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_ContentType</qualifiedname>
        <briefdescription>
<para>Gets or sets the ContentStatus of the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2001" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aefb734a64d1f970f2b8c65a35e07ce89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
        <definition>System::DateTime Aspose::Words::Properties::BuiltInDocumentProperties::get_CreatedTime</definition>
        <argsstring>()</argsstring>
        <name>get_CreatedTime</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_CreatedTime</qualifiedname>
        <briefdescription>
<para>Gets or sets date of the document creation in UTC. </para>
        </briefdescription>
        <detaileddescription>
<para>For documents originated from RTF format this property returns local time of the author&apos;s machine at the moment of document creation.</para>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="699" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a05b568cd37bf9b94f126cabac8d3d10c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt; &gt;</type>
        <definition>System::ArrayPtr&lt; System::SharedPtr&lt; System::Object &gt; &gt; Aspose::Words::Properties::BuiltInDocumentProperties::get_HeadingPairs</definition>
        <argsstring>()</argsstring>
        <name>get_HeadingPairs</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_HeadingPairs</qualifiedname>
        <briefdescription>
<para>Specifies document headings and their names. </para>
        </briefdescription>
        <detaileddescription>
<para>Every heading pair occupies two elements in this array.</para>
<para>The first element of the pair is a <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">String</ref> and specifies the heading name. The second element of the pair is an <ref refid="class/system.int32/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">Int32</ref> and specifies the count of document parts for this heading in the <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a229eb04a41b9e8a8a64b710d97bd08a6" kindref="member">TitlesOfParts</ref> property.</para>
<para>The total sum of counts for all heading pairs in this property must be equal to the number of elements in the <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a229eb04a41b9e8a8a64b710d97bd08a6" kindref="member">TitlesOfParts</ref> property.</para>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a229eb04a41b9e8a8a64b710d97bd08a6" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_TitlesOfParts</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows the relationship between &quot;HeadingPairs&quot; and &quot;TitlesOfParts&quot; properties. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>pairs<sp/>and<sp/>titles<sp/>of<sp/>parts.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>find<sp/>the<sp/>combined<sp/>values<sp/>of<sp/>these<sp/>collections<sp/>via</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;File&quot;<sp/>-&gt;<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Advanced<sp/>Properties&quot;<sp/>-&gt;<sp/>&quot;Contents&quot;<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>HeadingPairs<sp/>property<sp/>is<sp/>a<sp/>collection<sp/>of<sp/>&lt;string,<sp/>int&gt;<sp/>pairs<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>determines<sp/>how<sp/>many<sp/>document<sp/>parts<sp/>a<sp/>heading<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;System::Object&gt;&gt;<sp/>headingPairs<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_HeadingPairs();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TitlesOfParts<sp/>property<sp/>contains<sp/>the<sp/>names<sp/>of<sp/>parts<sp/>that<sp/>belong<sp/>to<sp/>the<sp/>above<sp/>headings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;String&gt;<sp/>titlesOfParts<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_TitlesOfParts();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headingPairsIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>titlesOfPartsIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(headingPairsIndex<sp/>&lt;<sp/>headingPairs-&gt;get_Length())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parts<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>headingPairs[headingPairsIndex++]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partsCount<sp/>=<sp/><ref refid="struct/system.convert/_1a5ec7686ca1d45c99e58263fed936344c" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Convert::ToInt32</ref>(headingPairs[headingPairsIndex++]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>partsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>titlesOfParts[titlesOfPartsIndex++]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2350" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a323b14c2a0533e9ecf9259678e253060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_HyperlinkBase</definition>
        <argsstring>()</argsstring>
        <name>get_HyperlinkBase</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_HyperlinkBase</qualifiedname>
        <briefdescription>
<para>Specifies the base string used for evaluating relative hyperlinks in this document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words does not use this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to store the base part of a hyperlink in the document&apos;s properties. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>relative<sp/>hyperlink<sp/>to<sp/>a<sp/>document<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system<sp/>named<sp/>&quot;Document.docx&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clicking<sp/>on<sp/>the<sp/>link<sp/>in<sp/>Microsoft<sp/>Word<sp/>will<sp/>open<sp/>the<sp/>designated<sp/>document,<sp/>if<sp/>it<sp/>is<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertHyperlink(u</highlight><highlight class="stringliteral">&quot;Relative<sp/>hyperlink&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>link<sp/>is<sp/>relative.<sp/>If<sp/>there<sp/>is<sp/>no<sp/>&quot;Document.docx&quot;<sp/>in<sp/>the<sp/>same<sp/>folder</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>document<sp/>that<sp/>contains<sp/>this<sp/>link,<sp/>the<sp/>link<sp/>will<sp/>be<sp/>broken.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(<ref refid="class/system.i_o.file/_1af98ce973b99b925a5ec0e58074f20206" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::Exists</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.HyperlinkBase.BrokenLink.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>document<sp/>we<sp/>are<sp/>trying<sp/>to<sp/>link<sp/>to<sp/>is<sp/>in<sp/>a<sp/>different<sp/>directory<sp/>to<sp/>the<sp/>one<sp/>we<sp/>are<sp/>planning<sp/>to<sp/>save<sp/>the<sp/>document<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>fix<sp/>links<sp/>like<sp/>this<sp/>by<sp/>putting<sp/>an<sp/>absolute<sp/>filename<sp/>in<sp/>each<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Alternatively,<sp/>we<sp/>could<sp/>provide<sp/>a<sp/>base<sp/>link<sp/>that<sp/>every<sp/>hyperlink<sp/>with<sp/>a<sp/>relative<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>prepend<sp/>to<sp/>its<sp/>link<sp/>when<sp/>we<sp/>click<sp/>on<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_HyperlinkBase(MyDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(<ref refid="class/system.i_o.file/_1af98ce973b99b925a5ec0e58074f20206" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::Exists</ref>(properties-&gt;get_HyperlinkBase()<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(System::DynamicCast&lt;FieldHyperlink&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)))-&gt;get_Address()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.HyperlinkBase.WorkingLink.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="736" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a86957d86711100f4ae7b45bd250467fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Keywords</definition>
        <argsstring>()</argsstring>
        <name>get_Keywords</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Keywords</qualifiedname>
        <briefdescription>
<para>Gets or sets the document keywords. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties in the &quot;Description&quot; category. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>built-in<sp/>document<sp/>properties<sp/>that<sp/>have<sp/>fields<sp/>that<sp/>can<sp/>display<sp/>their<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>&quot;Author&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>an<sp/>AUTHOR<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Author:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>&quot;Title&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>TITLE<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;John&apos;s<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nDoc<sp/>title:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldTitle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>&quot;Subject&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>SUBJECT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Subject(u</highlight><highlight class="stringliteral">&quot;My<sp/>subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nSubject:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldSubject,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>&quot;Comments&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>COMMENTS<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Comments(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>{0}&apos;s<sp/>document<sp/>about<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Author(),<sp/>properties-&gt;get_Subject()));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nComments:\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldComments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Category&quot;<sp/>built-in<sp/>property<sp/>does<sp/>not<sp/>have<sp/>a<sp/>field<sp/>that<sp/>can<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>category&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>multiple<sp/>keywords<sp/>for<sp/>a<sp/>document<sp/>by<sp/>separating<sp/>the<sp/>string<sp/>value<sp/>of<sp/>the<sp/>&quot;Keywords&quot;<sp/>property<sp/>with<sp/>semicolons.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Keywords(u</highlight><highlight class="stringliteral">&quot;Tag<sp/>1;<sp/>Tag<sp/>2;<sp/>Tag<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Author&quot;<sp/>built-in<sp/>property<sp/>is<sp/>in<sp/>the<sp/>&quot;Origin&quot;<sp/>group,<sp/>and<sp/>the<sp/>others<sp/>are<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Description.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="783" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9f61389290d69d79bb3670af2817d377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
        <definition>System::DateTime Aspose::Words::Properties::BuiltInDocumentProperties::get_LastPrinted</definition>
        <argsstring>()</argsstring>
        <name>get_LastPrinted</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_LastPrinted</qualifiedname>
        <briefdescription>
<para>Gets or sets the date when the document was last printed in UTC. </para>
        </briefdescription>
        <detaileddescription>
<para>For documents originated from RTF format this property returns the local time of last print operation.</para>
<para>If the document was never printed, this property will return DateTime.MinValue.</para>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="827" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acc2c32cd9d6f83849359c850c7bb33e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_LastSavedBy</definition>
        <argsstring>()</argsstring>
        <name>get_LastSavedBy</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_LastSavedBy</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the last author. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="867" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5201173c24c8f03388c23acffee9263b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
        <definition>System::DateTime Aspose::Words::Properties::BuiltInDocumentProperties::get_LastSavedTime</definition>
        <argsstring>()</argsstring>
        <name>get_LastSavedTime</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_LastSavedTime</qualifiedname>
        <briefdescription>
<para>Gets or sets the time of the last save in UTC. </para>
        </briefdescription>
        <detaileddescription>
<para>For documents originated from RTF format this property returns the local time of last save operation.</para>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to use the SAVEDATE field to display the date/time of the document&apos;s most recent save operation performed using Microsoft Word. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;MoveToDocumentEnd();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;<sp/>Date<sp/>this<sp/>document<sp/>was<sp/>last<sp/>saved:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>SAVEDATE<sp/>field<sp/>to<sp/>display<sp/>the<sp/>last<sp/>save<sp/>operation&apos;s<sp/>date<sp/>and<sp/>time<sp/>on<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>save<sp/>operation<sp/>that<sp/>these<sp/>fields<sp/>refer<sp/>to<sp/>is<sp/>the<sp/>manual<sp/>save<sp/>in<sp/>an<sp/>application<sp/>like<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>document&apos;s<sp/>Save<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>different<sp/>calendar<sp/>types<sp/>according<sp/>to<sp/>which<sp/>the<sp/>SAVEDATE<sp/>field<sp/>can<sp/>display<sp/>the<sp/>date/time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Islamic<sp/>Lunar<sp/>Calendar:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;According<sp/>to<sp/>the<sp/>Lunar<sp/>Calendar<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldSaveDate&gt;(builder-&gt;InsertField(FieldType::FieldSaveDate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_UseLunarCalendar(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SAVEDATE<sp/><sp/>\\h&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Umm<sp/>al-Qura<sp/>calendar:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nAccording<sp/>to<sp/>the<sp/>Umm<sp/>al-Qura<sp/>calendar<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldSaveDate&gt;(builder-&gt;InsertField(FieldType::FieldSaveDate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_UseUmAlQuraCalendar(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SAVEDATE<sp/><sp/>\\u&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Indian<sp/>National<sp/>calendar:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nAccording<sp/>to<sp/>the<sp/>Indian<sp/>National<sp/>calendar<sp/>-<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldSaveDate&gt;(builder-&gt;InsertField(FieldType::FieldSaveDate,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_UseSakaEraCalendar(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SAVEDATE<sp/><sp/>\\s&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>SAVEDATE<sp/>fields<sp/>draw<sp/>their<sp/>date/time<sp/>values<sp/>from<sp/>the<sp/>LastSavedTime<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>document&apos;s<sp/>Save<sp/>method<sp/>will<sp/>not<sp/>update<sp/>this<sp/>value,<sp/>but<sp/>we<sp/>can<sp/>still<sp/>update<sp/>it<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.SAVEDATE.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="949" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aec961e8cdd47a13a054d8da6765870da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Lines</definition>
        <argsstring>()</argsstring>
        <name>get_Lines</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Lines</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of lines in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words updates this property when you call <ref refid="class_aspose_1_1_words_1_1_document_1aa331c277dc98198115a7119bf6b60c3d" kindref="member">UpdateWordCount()</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to update all list labels in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;sed<sp/>do<sp/>eiusmod<sp/>tempor<sp/>incididunt<sp/>ut<sp/>labore<sp/>et<sp/>dolore<sp/>magna<sp/>aliqua.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Ut<sp/>enim<sp/>ad<sp/>minim<sp/>veniam,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;quis<sp/>nostrud<sp/>exercitation<sp/>ullamco<sp/>laboris<sp/>nisi<sp/>ut<sp/>aliquip<sp/>ex<sp/>ea<sp/>commodo<sp/>consequat.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspose.Words<sp/>does<sp/>not<sp/>track<sp/>document<sp/>metrics<sp/>like<sp/>these<sp/>in<sp/>real<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>accurate<sp/>values<sp/>for<sp/>three<sp/>of<sp/>these<sp/>properties,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>update<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(196,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(36,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>line<sp/>count,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>call<sp/>a<sp/>specific<sp/>overload<sp/>of<sp/>the<sp/>updating<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
</programlisting></para>
<para>Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1095" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a73a938245af1f64430e365299665e4e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Properties::BuiltInDocumentProperties::get_LinksUpToDate</definition>
        <argsstring>()</argsstring>
        <name>get_LinksUpToDate</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_LinksUpToDate</qualifiedname>
        <briefdescription>
<para>Indicates whether hyperlinks in a document are up-to-date. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1211" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1b5842d36f6e131bde0522e3e04a0ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Manager</definition>
        <argsstring>()</argsstring>
        <name>get_Manager</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Manager</qualifiedname>
        <briefdescription>
<para>Gets or sets the manager property. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1249" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a6439bbaaa5ab514cc8ce3057051f307b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_NameOfApplication</definition>
        <argsstring>()</argsstring>
        <name>get_NameOfApplication</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_NameOfApplication</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the application. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1287" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9345201f04b039921cada0304972fb75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Pages</definition>
        <argsstring>()</argsstring>
        <name>get_Pages</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Pages</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of pages in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words updates this property when you call <ref refid="class_aspose_1_1_words_1_1_document_1a2ae9aa4c9a98097a803676fc8153857a" kindref="member">UpdatePageLayout</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1403" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1abf2e8427ab4b8df1fecd456b88dd2e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Paragraphs</definition>
        <argsstring>()</argsstring>
        <name>get_Paragraphs</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Paragraphs</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of paragraphs in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words updates this property when you call <ref refid="class_aspose_1_1_words_1_1_document_1a1828e1ccbb5d7936fd248401b0c8deee" kindref="member">UpdateWordCount</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to update all list labels in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;sed<sp/>do<sp/>eiusmod<sp/>tempor<sp/>incididunt<sp/>ut<sp/>labore<sp/>et<sp/>dolore<sp/>magna<sp/>aliqua.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Ut<sp/>enim<sp/>ad<sp/>minim<sp/>veniam,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;quis<sp/>nostrud<sp/>exercitation<sp/>ullamco<sp/>laboris<sp/>nisi<sp/>ut<sp/>aliquip<sp/>ex<sp/>ea<sp/>commodo<sp/>consequat.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspose.Words<sp/>does<sp/>not<sp/>track<sp/>document<sp/>metrics<sp/>like<sp/>these<sp/>in<sp/>real<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>accurate<sp/>values<sp/>for<sp/>three<sp/>of<sp/>these<sp/>properties,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>update<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(196,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(36,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>line<sp/>count,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>call<sp/>a<sp/>specific<sp/>overload<sp/>of<sp/>the<sp/>updating<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
</programlisting></para>
<para>Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1549" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae08f16b4e2300102190a62651a1b130b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_RevisionNumber</definition>
        <argsstring>()</argsstring>
        <name>get_RevisionNumber</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_RevisionNumber</qualifiedname>
        <briefdescription>
<para>Gets or sets the document revision number. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to work with REVNUM fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Current<sp/>revision<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>REVNUM<sp/>field,<sp/>which<sp/>displays<sp/>the<sp/>document&apos;s<sp/>current<sp/>revision<sp/>number<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldRevNum&gt;(builder-&gt;InsertField(FieldType::FieldRevisionNum,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_RevisionNumber());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>property<sp/>counts<sp/>how<sp/>many<sp/>times<sp/>a<sp/>document<sp/>has<sp/>been<sp/>saved<sp/>in<sp/>Microsoft<sp/>Word,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>is<sp/>unrelated<sp/>to<sp/>tracked<sp/>revisions.<sp/>We<sp/>can<sp/>find<sp/>it<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>document<sp/>in<sp/>Windows<sp/>Explorer</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>via<sp/>Properties<sp/>-&gt;<sp/>Details.<sp/>We<sp/>can<sp/>update<sp/>this<sp/>property<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_RevisionNumber(doc-&gt;get_BuiltInDocumentProperties()-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1612" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a815b4b87727ee7d49c07a540ce93799b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31d" kindref="member">Aspose::Words::Properties::DocumentSecurity</ref></type>
        <definition>Aspose::Words::Properties::DocumentSecurity Aspose::Words::Properties::BuiltInDocumentProperties::get_Security</definition>
        <argsstring>()</argsstring>
        <name>get_Security</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Security</qualifiedname>
        <briefdescription>
<para>Specifies the security level of a document as a numeric value. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this property for informational purposes only because Microsoft Word does not always set this property. This property is available in DOC and OOXML documents only.</para>
<para>To protect or unprotect a document use the <ref refid="" kindref="compound">Protect()</ref> and <ref refid="class_aspose_1_1_words_1_1_document_1a7ab24b0f997f82af1a208ac9d5066059" kindref="member">Unprotect</ref> methods.</para>
<para>Aspose.Words updates this property to a correct value before saving a document.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use document properties to display the security level of a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31da6adf97f83acf6453d4a6a4b1070f3754" kindref="member" tooltip="There are no security states specified by the property.">DocumentSecurity::None</ref>,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Security());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>configure<sp/>a<sp/>document<sp/>to<sp/>be<sp/>read-only,<sp/>it<sp/>will<sp/>display<sp/>this<sp/>status<sp/>using<sp/>the<sp/>&quot;Security&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_WriteProtection()-&gt;set_ReadOnlyRecommended(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Security.ReadOnlyRecommended.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31daa00e619642c7c4cff8bd199c09377bc1" kindref="member" tooltip="The document to be opened read-only if possible, but the setting can be overridden.">DocumentSecurity::ReadOnlyRecommended</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Security.ReadOnlyRecommended.docx&quot;</highlight><highlight class="normal">)-&gt;get_BuiltInDocumentProperties()-&gt;<ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a815b4b87727ee7d49c07a540ce93799b" kindref="member" tooltip="Specifies the security level of a document as a numeric value.">get_Security</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write-protect<sp/>a<sp/>document,<sp/>and<sp/>then<sp/>verify<sp/>its<sp/>security<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_WriteProtection()-&gt;get_IsWriteProtected());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_WriteProtection()-&gt;SetPassword(u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_WriteProtection()-&gt;ValidatePassword(u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_WriteProtection()-&gt;get_IsWriteProtected());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Security.ReadOnlyEnforced.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31dae48c24fea2a23ae4950e496fe8450d7b" kindref="member" tooltip="The document to always be opened read-only.">DocumentSecurity::ReadOnlyEnforced</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Security.ReadOnlyEnforced.docx&quot;</highlight><highlight class="normal">)-&gt;get_BuiltInDocumentProperties()-&gt;<ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a815b4b87727ee7d49c07a540ce93799b" kindref="member" tooltip="Specifies the security level of a document as a numeric value.">get_Security</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Security&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>property.<sp/>We<sp/>can<sp/>edit<sp/>its<sp/>value<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Protect(<ref refid="namespace_aspose_1_1_words_1a4b3be683cf728f992b0c78c0ce8acd60a9fb9e86c065a009c0661c3a0503d16b9" kindref="member" tooltip="User can only modify comments in the document.">ProtectionType::AllowOnlyComments</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Security(<ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31da218986b303dfbb4c2967b5f3668699f9" kindref="member" tooltip="The document to always be opened read-only except for annotations.">DocumentSecurity::ReadOnlyExceptAnnotations</ref>);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Security.ReadOnlyExceptAnnotations.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31da218986b303dfbb4c2967b5f3668699f9" kindref="member" tooltip="The document to always be opened read-only except for annotations.">DocumentSecurity::ReadOnlyExceptAnnotations</ref>,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Security.ReadOnlyExceptAnnotations.docx&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;get_BuiltInDocumentProperties()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a815b4b87727ee7d49c07a540ce93799b" kindref="member" tooltip="Specifies the security level of a document as a numeric value.">get_Security</ref>());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1670" column="52"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a7113e88541dca17111b4ca95499ac220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Subject</definition>
        <argsstring>()</argsstring>
        <name>get_Subject</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Subject</qualifiedname>
        <briefdescription>
<para>Gets or sets the subject of the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties in the &quot;Description&quot; category. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>built-in<sp/>document<sp/>properties<sp/>that<sp/>have<sp/>fields<sp/>that<sp/>can<sp/>display<sp/>their<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>&quot;Author&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>an<sp/>AUTHOR<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Author:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>&quot;Title&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>TITLE<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;John&apos;s<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nDoc<sp/>title:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldTitle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>&quot;Subject&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>SUBJECT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Subject(u</highlight><highlight class="stringliteral">&quot;My<sp/>subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nSubject:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldSubject,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>&quot;Comments&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>COMMENTS<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Comments(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>{0}&apos;s<sp/>document<sp/>about<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Author(),<sp/>properties-&gt;get_Subject()));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nComments:\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldComments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Category&quot;<sp/>built-in<sp/>property<sp/>does<sp/>not<sp/>have<sp/>a<sp/>field<sp/>that<sp/>can<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>category&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>multiple<sp/>keywords<sp/>for<sp/>a<sp/>document<sp/>by<sp/>separating<sp/>the<sp/>string<sp/>value<sp/>of<sp/>the<sp/>&quot;Keywords&quot;<sp/>property<sp/>with<sp/>semicolons.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Keywords(u</highlight><highlight class="stringliteral">&quot;Tag<sp/>1;<sp/>Tag<sp/>2;<sp/>Tag<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Author&quot;<sp/>built-in<sp/>property<sp/>is<sp/>in<sp/>the<sp/>&quot;Origin&quot;<sp/>group,<sp/>and<sp/>the<sp/>others<sp/>are<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Description.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1717" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a8c92b68822ecf7d511ebc6f37eb65d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Template</definition>
        <argsstring>()</argsstring>
        <name>get_Template</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Template</qualifiedname>
        <briefdescription>
<para>Gets or sets the informational name of the document template. </para>
        </briefdescription>
        <detaileddescription>
<para>In Microsoft Word, this property is for informational purposes only and usually contains only the file name of the template without the path.</para>
<para>Empty string means the document is attached to the Normal template.</para>
<para>To get or set the actual name of the attached template, use the <ref refid="class_aspose_1_1_words_1_1_document_1ac525b4a1f1d73951263e84f893e3bd21" kindref="member">AttachedTemplate</ref> property.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_document_1ac525b4a1f1d73951263e84f893e3bd21" kindref="member">Aspose::Words::Document::get_AttachedTemplate</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1765" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa79b25f9c348bd6ccdd8dac1fc64dc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; uint8_t &gt;</type>
        <definition>System::ArrayPtr&lt; uint8_t &gt; Aspose::Words::Properties::BuiltInDocumentProperties::get_Thumbnail</definition>
        <argsstring>()</argsstring>
        <name>get_Thumbnail</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Thumbnail</qualifiedname>
        <briefdescription>
<para>Gets or sets the thumbnail of the document. </para>
        </briefdescription>
        <detaileddescription>
<para>For now this property is used only when a document is being exported to ePub, it&apos;s not read from and written to other document formats.</para>
<para>Image of arbitrary format can be set to this property, but the format is checked during export. <ref refid="" kindref="compound">InvalidOperationException</ref> is thrown if the image is invalid or its format is unsupported for specific format of document.</para>
<para>Only gif, jpeg and png images can be used for ePub publication.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to add a thumbnail to a document that we save as an Epub. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>save<sp/>a<sp/>document,<sp/>whose<sp/>&quot;Thumbnail&quot;<sp/>property<sp/>contains<sp/>image<sp/>data<sp/>that<sp/>we<sp/>added,<sp/>as<sp/>an<sp/>Epub,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>reader<sp/>that<sp/>opens<sp/>that<sp/>document<sp/>may<sp/>display<sp/>the<sp/>image<sp/>before<sp/>the<sp/>first<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;uint8_t&gt;<sp/>thumbnailBytes<sp/>=<sp/><ref refid="class/system.i_o.file/_1abdf236ad2f3924d0fc9259f8f715a5c4" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::ReadAllBytes</ref>(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Logo.jpg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Thumbnail(thumbnailBytes);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Thumbnail.epub&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>extract<sp/>a<sp/>document&apos;s<sp/>thumbnail<sp/>image<sp/>and<sp/>save<sp/>it<sp/>to<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;DocumentProperty&gt;<sp/>thumbnail<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Thumbnail&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.i_o.file/_1a2bff5b0fbdb0ef68ad612a665efeac56" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::WriteAllBytes</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Thumbnail.gif&quot;</highlight><highlight class="normal">,<sp/>thumbnail-&gt;ToByteArray());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1802" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1b39fa8b0a3131346ecf099ab2208ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Properties::BuiltInDocumentProperties::get_Title</definition>
        <argsstring>()</argsstring>
        <name>get_Title</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Title</qualifiedname>
        <briefdescription>
<para>Gets or sets the title of the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties in the &quot;Description&quot; category. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>built-in<sp/>document<sp/>properties<sp/>that<sp/>have<sp/>fields<sp/>that<sp/>can<sp/>display<sp/>their<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>&quot;Author&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>an<sp/>AUTHOR<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Author:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>&quot;Title&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>TITLE<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Title(u</highlight><highlight class="stringliteral">&quot;John&apos;s<sp/>Document&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nDoc<sp/>title:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldTitle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>&quot;Subject&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>SUBJECT<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Subject(u</highlight><highlight class="stringliteral">&quot;My<sp/>subject&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nSubject:\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldSubject,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>&quot;Comments&quot;<sp/>property,<sp/>which<sp/>we<sp/>can<sp/>display<sp/>using<sp/>a<sp/>COMMENTS<sp/>field:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Comments(String::Format(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>{0}&apos;s<sp/>document<sp/>about<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Author(),<sp/>properties-&gt;get_Subject()));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nComments:\t\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(FieldType::FieldComments,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Category&quot;<sp/>built-in<sp/>property<sp/>does<sp/>not<sp/>have<sp/>a<sp/>field<sp/>that<sp/>can<sp/>display<sp/>its<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Category(u</highlight><highlight class="stringliteral">&quot;My<sp/>category&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>multiple<sp/>keywords<sp/>for<sp/>a<sp/>document<sp/>by<sp/>separating<sp/>the<sp/>string<sp/>value<sp/>of<sp/>the<sp/>&quot;Keywords&quot;<sp/>property<sp/>with<sp/>semicolons.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Keywords(u</highlight><highlight class="stringliteral">&quot;Tag<sp/>1;<sp/>Tag<sp/>2;<sp/>Tag<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Author&quot;<sp/>built-in<sp/>property<sp/>is<sp/>in<sp/>the<sp/>&quot;Origin&quot;<sp/>group,<sp/>and<sp/>the<sp/>others<sp/>are<sp/>in<sp/>the<sp/>&quot;Description&quot;<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Description.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1849" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a229eb04a41b9e8a8a64b710d97bd08a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &gt;</type>
        <definition>System::ArrayPtr&lt; System::String &gt; Aspose::Words::Properties::BuiltInDocumentProperties::get_TitlesOfParts</definition>
        <argsstring>()</argsstring>
        <name>get_TitlesOfParts</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_TitlesOfParts</qualifiedname>
        <briefdescription>
<para>Each string in the array specifies the name of a part in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words does not update this property.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a05b568cd37bf9b94f126cabac8d3d10c" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_HeadingPairs</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows the relationship between &quot;HeadingPairs&quot; and &quot;TitlesOfParts&quot; properties. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>pairs<sp/>and<sp/>titles<sp/>of<sp/>parts.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>find<sp/>the<sp/>combined<sp/>values<sp/>of<sp/>these<sp/>collections<sp/>via</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;File&quot;<sp/>-&gt;<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Advanced<sp/>Properties&quot;<sp/>-&gt;<sp/>&quot;Contents&quot;<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>HeadingPairs<sp/>property<sp/>is<sp/>a<sp/>collection<sp/>of<sp/>&lt;string,<sp/>int&gt;<sp/>pairs<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>determines<sp/>how<sp/>many<sp/>document<sp/>parts<sp/>a<sp/>heading<sp/>spans<sp/>across.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;System::Object&gt;&gt;<sp/>headingPairs<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_HeadingPairs();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TitlesOfParts<sp/>property<sp/>contains<sp/>the<sp/>names<sp/>of<sp/>parts<sp/>that<sp/>belong<sp/>to<sp/>the<sp/>above<sp/>headings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;String&gt;<sp/>titlesOfParts<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_TitlesOfParts();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headingPairsIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>titlesOfPartsIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(headingPairsIndex<sp/>&lt;<sp/>headingPairs-&gt;get_Length())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Parts<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>headingPairs[headingPairsIndex++]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>partsCount<sp/>=<sp/><ref refid="struct/system.convert/_1a5ec7686ca1d45c99e58263fed936344c" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Convert::ToInt32</ref>(headingPairs[headingPairsIndex++]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>partsCount;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>titlesOfParts[titlesOfPartsIndex++]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2389" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acf86b53676fc352ad6bef747ef1fa81e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_TotalEditingTime</definition>
        <argsstring>()</argsstring>
        <name>get_TotalEditingTime</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_TotalEditingTime</qualifiedname>
        <briefdescription>
<para>Gets or sets the total editing time in minutes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1887" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a08ecbfe953ff8c4a20528ad20b3fcd94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Version</definition>
        <argsstring>()</argsstring>
        <name>get_Version</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Version</qualifiedname>
        <briefdescription>
<para>Represents the version number of the application that created the document. </para>
        </briefdescription>
        <detaileddescription>
<para>When a document was created by Microsoft Word, then high 16 bit represent the major version and low 16 bit represent the build number.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with document properties in the &quot;Origin&quot; category. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>we<sp/>have<sp/>created<sp/>and<sp/>edited<sp/>using<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>built-in<sp/>properties<sp/>contain<sp/>information<sp/>regarding<sp/>the<sp/>creation<sp/>and<sp/>editing<sp/>of<sp/>this<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>properties<sp/>via<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;<sp/>category.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>such<sp/>as<sp/>PRINTDATE<sp/>and<sp/>EDITTIME<sp/>can<sp/>display<sp/>these<sp/>values<sp/>in<sp/>the<sp/>document<sp/>body.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_NameOfApplication()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>on<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_CreatedTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Minutes<sp/>spent<sp/>editing:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_TotalEditingTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Date/time<sp/>last<sp/>printed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_LastPrinted()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Template<sp/>document:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>properties-&gt;get_Template()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>change<sp/>the<sp/>values<sp/>of<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Company(u</highlight><highlight class="stringliteral">&quot;Doe<sp/>Ltd.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Manager(u</highlight><highlight class="stringliteral">&quot;Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_Version(5);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_RevisionNumber(properties-&gt;get_RevisionNumber()<sp/>+<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>updates<sp/>the<sp/>following<sp/>properties<sp/>automatically<sp/>when<sp/>we<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>use<sp/>these<sp/>properties<sp/>with<sp/>Aspose.Words,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>values<sp/>for<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedBy(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">properties-&gt;set_LastSavedTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>right-click<sp/>this<sp/>document<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>find<sp/>these<sp/>properties<sp/>in<sp/>&quot;Properties&quot;<sp/>-&gt;<sp/>&quot;Details&quot;<sp/>-&gt;<sp/>&quot;Origin&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Origin.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2156" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1af22aef4479030762efad9fca8474bbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Properties::BuiltInDocumentProperties::get_Words</definition>
        <argsstring>()</argsstring>
        <name>get_Words</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::get_Words</qualifiedname>
        <briefdescription>
<para>Represents an estimate of the number of words in the document. </para>
        </briefdescription>
        <detaileddescription>
<para>Aspose.Words updates this property when you call <ref refid="class_aspose_1_1_words_1_1_document_1a1828e1ccbb5d7936fd248401b0c8deee" kindref="member">UpdateWordCount</ref>.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to update all list labels in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Lorem<sp/>ipsum<sp/>dolor<sp/>sit<sp/>amet,<sp/>consectetur<sp/>adipiscing<sp/>elit,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u</highlight><highlight class="stringliteral">&quot;sed<sp/>do<sp/>eiusmod<sp/>tempor<sp/>incididunt<sp/>ut<sp/>labore<sp/>et<sp/>dolore<sp/>magna<sp/>aliqua.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Ut<sp/>enim<sp/>ad<sp/>minim<sp/>veniam,<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;quis<sp/>nostrud<sp/>exercitation<sp/>ullamco<sp/>laboris<sp/>nisi<sp/>ut<sp/>aliquip<sp/>ex<sp/>ea<sp/>commodo<sp/>consequat.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspose.Words<sp/>does<sp/>not<sp/>track<sp/>document<sp/>metrics<sp/>like<sp/>these<sp/>in<sp/>real<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>get<sp/>accurate<sp/>values<sp/>for<sp/>three<sp/>of<sp/>these<sp/>properties,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>update<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(196,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(36,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>line<sp/>count,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>call<sp/>a<sp/>specific<sp/>overload<sp/>of<sp/>the<sp/>updating<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateWordCount(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Lines());</highlight></codeline>
</programlisting></para>
<para>Shows how to work with document properties in the &quot;Content&quot; category. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_building_blocks_1a983863dc1cbac800bf1d75ce1a9d8475af15c1cae7882448b3fb0404682e17e61" kindref="member" tooltip="Specifies that the building block shall be inserted as inline content.">Content</ref>()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Paragraphs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;BuiltInDocumentProperties&gt;<sp/>properties<sp/>=<sp/>doc-&gt;get_BuiltInDocumentProperties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>using<sp/>built<sp/>in<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>treat<sp/>document<sp/>statistics<sp/>such<sp/>as<sp/>word/page/character<sp/>counts<sp/>as<sp/>metadata<sp/>that<sp/>can<sp/>be<sp/>glanced<sp/>at<sp/>without<sp/>opening<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>properties<sp/>are<sp/>accessed<sp/>by<sp/>right<sp/>clicking<sp/>the<sp/>file<sp/>in<sp/>Windows<sp/>Explorer<sp/>and<sp/>navigating<sp/>to<sp/>Properties<sp/>&gt;<sp/>Details<sp/>&gt;<sp/>Content</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>want<sp/>to<sp/>display<sp/>this<sp/>data<sp/>inside<sp/>the<sp/>document,<sp/>we<sp/>can<sp/>use<sp/>fields<sp/>such<sp/>as<sp/>NUMPAGES,<sp/>NUMWORDS,<sp/>NUMCHARS<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>these<sp/>values<sp/>can<sp/>also<sp/>be<sp/>viewed<sp/>in<sp/>Microsoft<sp/>Word<sp/>by<sp/>navigating<sp/>File<sp/>&gt;<sp/>Properties<sp/>&gt;<sp/>Advanced<sp/>Properties<sp/>&gt;<sp/>Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Page<sp/>count:<sp/>The<sp/>PageCount<sp/>property<sp/>shows<sp/>the<sp/>page<sp/>count<sp/>in<sp/>real<sp/>time<sp/>and<sp/>its<sp/>value<sp/>can<sp/>be<sp/>assigned<sp/>to<sp/>the<sp/>Pages<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Pages&quot;<sp/>property<sp/>stores<sp/>the<sp/>page<sp/>count<sp/>of<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>properties-&gt;get_Pages());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Words&quot;,<sp/>&quot;Characters&quot;,<sp/>and<sp/>&quot;CharactersWithSpaces&quot;<sp/>built-in<sp/>properties<sp/>also<sp/>display<sp/>various<sp/>document<sp/>statistics,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>need<sp/>to<sp/>call<sp/>the<sp/>&quot;UpdateWordCount&quot;<sp/>method<sp/>on<sp/>the<sp/>whole<sp/>document<sp/>before<sp/>we<sp/>can<sp/>expect<sp/>them<sp/>to<sp/>contain<sp/>accurate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateWordCount();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(1035,<sp/>properties-&gt;get_Words());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6026,<sp/>properties-&gt;get_Characters());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(7041,<sp/>properties-&gt;get_CharactersWithSpaces());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>lines<sp/>in<sp/>the<sp/>document,<sp/>and<sp/>then<sp/>assign<sp/>the<sp/>result<sp/>to<sp/>the<sp/>&quot;Lines&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lineCounter<sp/>=<sp/>MakeObject&lt;ExDocumentProperties::LineCounter&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Lines(lineCounter-&gt;GetLineCount());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(142,<sp/>properties-&gt;get_Lines());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>number<sp/>of<sp/>Paragraph<sp/>nodes<sp/>in<sp/>the<sp/>document<sp/>to<sp/>the<sp/>&quot;Paragraphs&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Paragraphs(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379afeaf0a320c3d678ad30dd179b7d21584" kindref="member" tooltip="A paragraph of text. A Paragraph node is a container for inline level elements Run,...">NodeType::Paragraph</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(29,<sp/>properties-&gt;get_Paragraphs());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>file<sp/>size<sp/>of<sp/>our<sp/>document<sp/>via<sp/>the<sp/>&quot;Bytes&quot;<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(20310,<sp/>properties-&gt;get_Bytes());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>different<sp/>template<sp/>for<sp/>our<sp/>document,<sp/>and<sp/>then<sp/>update<sp/>the<sp/>&quot;Template&quot;<sp/>built-in<sp/>property<sp/>manually<sp/>to<sp/>reflect<sp/>this<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_AttachedTemplate(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Business<sp/>brochure.dotx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Normal&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;get_Template());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_Template(doc-&gt;get_AttachedTemplate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;ContentStatus&quot;<sp/>is<sp/>a<sp/>descriptive<sp/>built-in<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;set_ContentStatus(u</highlight><highlight class="stringliteral">&quot;Draft&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>saving,<sp/>the<sp/>&quot;ContentType&quot;<sp/>built-in<sp/>property<sp/>will<sp/>contain<sp/>the<sp/>MIME<sp/>type<sp/>of<sp/>the<sp/>output<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>properties-&gt;get_ContentType());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>contains<sp/>links,<sp/>and<sp/>they<sp/>are<sp/>all<sp/>up<sp/>to<sp/>date,<sp/>we<sp/>can<sp/>set<sp/>the<sp/>&quot;LinksUpToDate&quot;<sp/>property<sp/>to<sp/>&quot;true&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(properties-&gt;get_LinksUpToDate());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DocumentProperties.Content.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">LineCounter<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>LineCounter(SharedPtr&lt;Document&gt;<sp/>doc)<sp/>:<sp/>mLineCount(0),<sp/>mScanningLineForRealText(false)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator<sp/>=<sp/>MakeObject&lt;LayoutEnumerator&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetLineCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;LayoutEnumerator&gt;<sp/>mLayoutEnumerator;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLineCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mScanningLineForRealText;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CountLines()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;get_Type()<sp/>==<sp/>LayoutEntityType::Line)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveFirstChild())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mScanningLineForRealText<sp/>&amp;&amp;<sp/>mLayoutEnumerator-&gt;get_Kind().StartsWith(u</highlight><highlight class="stringliteral">&quot;TEXT&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLineCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mScanningLineForRealText<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CountLines();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLayoutEnumerator-&gt;MoveParent();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mLayoutEnumerator-&gt;MoveNext());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2302" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a7dc59a10edee2daaeb10be84e09e3a78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property" kindref="compound">Aspose::Words::Properties::DocumentProperty</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Properties::DocumentProperty &gt; Aspose::Words::Properties::BuiltInDocumentProperties::idx_get</definition>
        <argsstring>(System::String name) override</argsstring>
        <name>idx_get</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::idx_get</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1adc980be7a6d96f84221b932394b8c1a1">idx_get</reimplements>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns a <ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property" kindref="compound">DocumentProperty</ref> object by the name of the property. </para>
        </briefdescription>
        <detaileddescription>
<para>The string names of the properties correspond to the names of the typed properties available from <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties" kindref="compound">BuiltInDocumentProperties</ref>.</para>
<para>If you request a property that is not present in the document, but the name of the property is recognized as a valid built-in name, a new <ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property" kindref="compound">DocumentProperty</ref> is created, added to the collection and returned. The newly created property is assigned a default value (empty string, zero, false or DateTime.MinValue depending on the type of the built-in property).</para>
<para>If you request a property that is not present in the document and the name is not recognized as a built-in name, a null is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The case-insensitive name of the property to retrieve.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with custom document properties. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>document<sp/>contains<sp/>a<sp/>collection<sp/>of<sp/>custom<sp/>properties,<sp/>which,<sp/>like<sp/>the<sp/>built-in<sp/>properties,<sp/>are<sp/>key-value<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>document<sp/>has<sp/>a<sp/>fixed<sp/>list<sp/>of<sp/>built-in<sp/>properties.<sp/>The<sp/>user<sp/>creates<sp/>all<sp/>of<sp/>the<sp/>custom<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Value<sp/>of<sp/>custom<sp/>document<sp/>property&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(doc-&gt;get_CustomDocumentProperties()-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;CustomProperty&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_CustomDocumentProperties()-&gt;Add(u</highlight><highlight class="stringliteral">&quot;CustomProperty2&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Value<sp/>of<sp/>custom<sp/>document<sp/>property<sp/>#2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Custom<sp/>Properties:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>customDocumentProperty<sp/>:<sp/>System::IterateOver(doc-&gt;get_CustomDocumentProperties()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>customDocumentProperty-&gt;get_Name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tType:\t{0}&quot;</highlight><highlight class="normal">,<sp/>customDocumentProperty-&gt;get_Type())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tValue:\t\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>customDocumentProperty-&gt;get_Value()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2430" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1adb93a75a62bace436e8997088cc33367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Author</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Author</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Author</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a224231012532469f0b63f227cf3f99c3" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Author</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="148" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1af155ab66806b9b63009b56d31e724135" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Bytes</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Bytes</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Bytes</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a4fd92024c61d8be83aa6649a6e10fabc" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Bytes</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="266" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a2ed62af5aa7d5674550a3b84d1e72861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Category</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Category</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Category</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1900a7c389ff994ec1037eca908c1a8c" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Category</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="622" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a0563c07bd211f41dddb28b36155fc656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Characters</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Characters</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Characters</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab5319940a69f96f39eccfd348a0394f9" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Characters</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="412" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a07172fc633dac93cc06e684dd1adcac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_CharactersWithSpaces</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_CharactersWithSpaces</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_CharactersWithSpaces</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a3c682a63e3dec93c1a5a10b7f8ee4373" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_CharactersWithSpaces</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="528" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab68b062f4a970bbae3964447b9b24f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Comments</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Comments</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Comments</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac9b2b2288824e5b7add014de09a427b5" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Comments</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="575" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1adba01a5f7346e1e5d47085ef8229916e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Company</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Company</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Company</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a2e56e6e7d6b8a6e3aa204488df85f937" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Company</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="660" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae8d2deaffc21ce9db81b168093c6a709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_ContentStatus</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ContentStatus</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_ContentStatus</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a39746ca1d59be6ae55d3501c1aad74a4" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_ContentStatus</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2118" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1afcb0ea2c596302c4eec80c1ae7f72ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_ContentType</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ContentType</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_ContentType</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a57ace2480dfb2b3f54a0f16414ea23d5" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_ContentType</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2004" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ad5167027f931514e6d51dfb5f73f7176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_CreatedTime</definition>
        <argsstring>(System::DateTime value)</argsstring>
        <name>set_CreatedTime</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_CreatedTime</qualifiedname>
        <param>
          <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aefb734a64d1f970f2b8c65a35e07ce89" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_CreatedTime</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="702" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aecbb5cae89e6b2795eec6ea86c24250f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_HeadingPairs</definition>
        <argsstring>(const System::ArrayPtr&lt; System::SharedPtr&lt; System::Object &gt; &gt; &amp;value)</argsstring>
        <name>set_HeadingPairs</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_HeadingPairs</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt; &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a05b568cd37bf9b94f126cabac8d3d10c" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_HeadingPairs</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2353" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a4604136d0f8c637400dffa5c717a6683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_HyperlinkBase</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_HyperlinkBase</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_HyperlinkBase</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a323b14c2a0533e9ecf9259678e253060" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_HyperlinkBase</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="739" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aeb34602d6f4ed7c6217ab7b9270abff1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Keywords</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Keywords</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Keywords</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a86957d86711100f4ae7b45bd250467fe" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Keywords</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="786" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5b7d0ba2cdfedfd1fcf55a213ef9c636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_LastPrinted</definition>
        <argsstring>(System::DateTime value)</argsstring>
        <name>set_LastPrinted</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_LastPrinted</qualifiedname>
        <param>
          <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9f61389290d69d79bb3670af2817d377" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_LastPrinted</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="830" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a272bec8d0e3fd9f184a801aa98975d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_LastSavedBy</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_LastSavedBy</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_LastSavedBy</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acc2c32cd9d6f83849359c850c7bb33e5" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_LastSavedBy</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="870" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9ee8a8e50405f5015a1930726e8c9a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_LastSavedTime</definition>
        <argsstring>(System::DateTime value)</argsstring>
        <name>set_LastSavedTime</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_LastSavedTime</qualifiedname>
        <param>
          <type><ref refid="class/system.date_time/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5201173c24c8f03388c23acffee9263b" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_LastSavedTime</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="952" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9f9f1e89dd5da819005d1d06abd05b1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Lines</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Lines</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Lines</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aec961e8cdd47a13a054d8da6765870da" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Lines</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1098" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a43f9f1223b07d8fac49ae17bdb8acde0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_LinksUpToDate</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_LinksUpToDate</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_LinksUpToDate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a73a938245af1f64430e365299665e4e3" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_LinksUpToDate</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1214" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a731aa24bb6db123019f7b01b8c8629bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Manager</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Manager</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Manager</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1b5842d36f6e131bde0522e3e04a0ef3" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Manager</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1252" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa88c1a83ab42f517abf8bca27344aa04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_NameOfApplication</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_NameOfApplication</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_NameOfApplication</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a6439bbaaa5ab514cc8ce3057051f307b" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_NameOfApplication</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1290" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a376db384586cf3b3fcb93a779bae7070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Pages</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Pages</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Pages</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9345201f04b039921cada0304972fb75" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Pages</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1406" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1cc87b3bd4c513d09c41816de611667c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Paragraphs</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Paragraphs</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Paragraphs</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1abf2e8427ab4b8df1fecd456b88dd2e19" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Paragraphs</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1552" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae9ee0c6fa7fa39c99212e33a70e16c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_RevisionNumber</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_RevisionNumber</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_RevisionNumber</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae08f16b4e2300102190a62651a1b130b" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_RevisionNumber</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1615" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1cb9785c6d415ec69f9b542dcc2e67b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Security</definition>
        <argsstring>(Aspose::Words::Properties::DocumentSecurity value)</argsstring>
        <name>set_Security</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Security</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_properties_1aaa14731ef0c14bf07a89f9d1cd62f31d" kindref="member">Aspose::Words::Properties::DocumentSecurity</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a815b4b87727ee7d49c07a540ce93799b" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Security</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1673" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acdfba7575fd5f7c671bff88dd01bcd31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Subject</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Subject</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Subject</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a7113e88541dca17111b4ca95499ac220" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Subject</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1720" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab6333bb1978560d83a2f6e78697987dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Template</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Template</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Template</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a8c92b68822ecf7d511ebc6f37eb65d43" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Template</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1768" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ad270649260329d64a4a559f2159a67f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Thumbnail</definition>
        <argsstring>(const System::ArrayPtr&lt; uint8_t &gt; &amp;value)</argsstring>
        <name>set_Thumbnail</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Thumbnail</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; uint8_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa79b25f9c348bd6ccdd8dac1fc64dc66" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Thumbnail</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1805" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a73b872a8acd028b06d1d2b341a7947ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Title</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Title</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Title</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1b39fa8b0a3131346ecf099ab2208ecd" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Title</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1852" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a87a8c27369e1202c9e0b1d52e51c7542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_TitlesOfParts</definition>
        <argsstring>(const System::ArrayPtr&lt; System::String &gt; &amp;value)</argsstring>
        <name>set_TitlesOfParts</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_TitlesOfParts</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ArrayPtr</ref>&lt; <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a229eb04a41b9e8a8a64b710d97bd08a6" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_TitlesOfParts</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2392" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac835dc6fc555feb6c5dc3a3e11f35d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_TotalEditingTime</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_TotalEditingTime</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_TotalEditingTime</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acf86b53676fc352ad6bef747ef1fa81e" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_TotalEditingTime</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="1890" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa14c53bc9c2e19c8d8f48a94f02651b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Version</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Version</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Version</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a08ecbfe953ff8c4a20528ad20b3fcd94" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2159" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1afb569a6d58a4e69789116d58d884f493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Properties::BuiltInDocumentProperties::set_Words</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_Words</name>
        <qualifiedname>Aspose::Words::Properties::BuiltInDocumentProperties::set_Words</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1af22aef4479030762efad9fca8474bbcd" kindref="member">Aspose::Words::Properties::BuiltInDocumentProperties::get_Words</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="2305" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A collection of built-in document properties. </para>
    </briefdescription>
    <detaileddescription>
<para>Provides access to <ref refid="class_aspose_1_1_words_1_1_properties_1_1_document_property" kindref="compound">DocumentProperty</ref> objects by their names (using an indexer) and via a set of typed properties that return values of appropriate types.</para>
<para>The names of the properties are case-insensitive.</para>
<para>The properties in the collection are sorted alphabetically by name.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Aspose::Words::Document</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_document_1a86baaf34be1f79ea482b1f393f8f4bed" kindref="member">Aspose::Words::Document::get_BuiltInDocumentProperties</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_document_1aa32b0d92748ee5c77365f05c75f7a30f" kindref="member">Aspose::Words::Document::get_CustomDocumentProperties</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with built-in document properties. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Properties.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Document&quot;<sp/>object<sp/>contains<sp/>some<sp/>of<sp/>its<sp/>metadata<sp/>in<sp/>its<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Document<sp/>filename:\n\t<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>doc-&gt;get_OriginalFileName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>document<sp/>also<sp/>stores<sp/>metadata<sp/>in<sp/>its<sp/>built-in<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>built-in<sp/>property<sp/>is<sp/>a<sp/>member<sp/>of<sp/>the<sp/>document&apos;s<sp/>&quot;BuiltInDocumentProperties&quot;<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Built-in<sp/>Properties:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>docProperty<sp/>:<sp/>System::IterateOver(doc-&gt;get_BuiltInDocumentProperties()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>docProperty-&gt;get_Name()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tType:\t{0}&quot;</highlight><highlight class="normal">,<sp/>docProperty-&gt;get_Type())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>properties<sp/>may<sp/>store<sp/>multiple<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class/system.object_ext/_1a49cadf4152a1be9ca40712f579e660a6" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::Is</ref>&lt;<ref refid="class/system.collections.generic.i_collection/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Collections::Generic::ICollection</ref>&lt;SharedPtr&lt;System::Object&gt;&gt;&gt;(docProperty-&gt;get_Value()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>System::IterateOver(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System::DynamicCast_noexcept&lt;<ref refid="class/system.collections.generic.i_collection/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Collections::Generic::ICollection</ref>&lt;SharedPtr&lt;System::Object&gt;&gt;&gt;(docProperty-&gt;get_Value())))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tValue:\t\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tValue:\t\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>docProperty-&gt;get_Value()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Properties::BuiltInDocumentProperties</label>
        <link refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Properties::DocumentPropertyCollection</label>
        <link refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Properties::DocumentProperty &gt; &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Properties::BuiltInDocumentProperties</label>
        <link refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Properties::DocumentPropertyCollection</label>
        <link refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Properties::DocumentProperty &gt; &gt;</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" line="90" column="1" bodyfile="Aspose.Words.Cpp/Properties/BuiltInDocumentProperties.h" bodystart="91" bodyend="2444"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a06a798a73c874bacdec55998311f3d96" prot="private" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1abbf47ca93bdc8600003bb31ced49a38f" prot="private" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>BuiltInDocumentProperties</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1a7abda7b50ad68520afd35ace74ce7f69" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>Clear</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1a746761ec9fae04da876585f3bc2598aa" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>Contains</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aee292fa286d32ea4873fa1d26b03f2e1" prot="private" virt="virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>Create</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a224231012532469f0b63f227cf3f99c3" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Author</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a4fd92024c61d8be83aa6649a6e10fabc" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Bytes</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1900a7c389ff994ec1037eca908c1a8c" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Category</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab5319940a69f96f39eccfd348a0394f9" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Characters</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a3c682a63e3dec93c1a5a10b7f8ee4373" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_CharactersWithSpaces</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac9b2b2288824e5b7add014de09a427b5" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Comments</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a2e56e6e7d6b8a6e3aa204488df85f937" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Company</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a39746ca1d59be6ae55d3501c1aad74a4" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_ContentStatus</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a57ace2480dfb2b3f54a0f16414ea23d5" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_ContentType</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1af79602b6d42ccfc8092c7ed7a811e031" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Count</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aefb734a64d1f970f2b8c65a35e07ce89" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_CreatedTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a05b568cd37bf9b94f126cabac8d3d10c" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_HeadingPairs</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a323b14c2a0533e9ecf9259678e253060" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_HyperlinkBase</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a86957d86711100f4ae7b45bd250467fe" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Keywords</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9f61389290d69d79bb3670af2817d377" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_LastPrinted</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acc2c32cd9d6f83849359c850c7bb33e5" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_LastSavedBy</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5201173c24c8f03388c23acffee9263b" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_LastSavedTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aec961e8cdd47a13a054d8da6765870da" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Lines</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a73a938245af1f64430e365299665e4e3" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_LinksUpToDate</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1b5842d36f6e131bde0522e3e04a0ef3" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Manager</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a6439bbaaa5ab514cc8ce3057051f307b" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_NameOfApplication</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9345201f04b039921cada0304972fb75" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Pages</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1abf2e8427ab4b8df1fecd456b88dd2e19" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Paragraphs</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae08f16b4e2300102190a62651a1b130b" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_RevisionNumber</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a815b4b87727ee7d49c07a540ce93799b" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Security</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a7113e88541dca17111b4ca95499ac220" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Subject</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a8c92b68822ecf7d511ebc6f37eb65d43" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Template</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa79b25f9c348bd6ccdd8dac1fc64dc66" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Thumbnail</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1b39fa8b0a3131346ecf099ab2208ecd" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Title</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a229eb04a41b9e8a8a64b710d97bd08a6" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_TitlesOfParts</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acf86b53676fc352ad6bef747ef1fa81e" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_TotalEditingTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a08ecbfe953ff8c4a20528ad20b3fcd94" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Version</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1af22aef4479030762efad9fca8474bbcd" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>get_Words</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1af6f6a44996a7eb0e260f79285d379d80" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>GetEnumerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a7dc59a10edee2daaeb10be84e09e3a78" prot="public" virt="virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>idx_get</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1a6dedd1cdf01bdf13a1f608a501684cc9" prot="public" virt="non-virtual" ambiguityscope="Aspose::Words::Properties::DocumentPropertyCollection::"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>idx_get</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1aae5dc653d0438132b7ce43b4c5403aec" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>IndexOf</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae8aa75ba364af2e82ed0cb6a9afea834" prot="private" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1a6521fef45da18d73902df4ed757db27e" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_document_property_collection_1a6a52162ce259ae840abf318ebc064f36" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>RemoveAt</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa386b956886bef7b7356d0ae834ca1b0" prot="private" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1adb93a75a62bace436e8997088cc33367" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Author</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1af155ab66806b9b63009b56d31e724135" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Bytes</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a2ed62af5aa7d5674550a3b84d1e72861" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Category</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a0563c07bd211f41dddb28b36155fc656" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Characters</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a07172fc633dac93cc06e684dd1adcac5" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_CharactersWithSpaces</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab68b062f4a970bbae3964447b9b24f3b" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Comments</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1adba01a5f7346e1e5d47085ef8229916e" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Company</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae8d2deaffc21ce9db81b168093c6a709" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_ContentStatus</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1afcb0ea2c596302c4eec80c1ae7f72ee4" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_ContentType</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ad5167027f931514e6d51dfb5f73f7176" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_CreatedTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aecbb5cae89e6b2795eec6ea86c24250f" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_HeadingPairs</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a4604136d0f8c637400dffa5c717a6683" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_HyperlinkBase</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aeb34602d6f4ed7c6217ab7b9270abff1" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Keywords</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5b7d0ba2cdfedfd1fcf55a213ef9c636" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_LastPrinted</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a272bec8d0e3fd9f184a801aa98975d50" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_LastSavedBy</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9ee8a8e50405f5015a1930726e8c9a51" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_LastSavedTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a9f9f1e89dd5da819005d1d06abd05b1b" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Lines</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a43f9f1223b07d8fac49ae17bdb8acde0" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_LinksUpToDate</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a731aa24bb6db123019f7b01b8c8629bf" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Manager</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa88c1a83ab42f517abf8bca27344aa04" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_NameOfApplication</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a376db384586cf3b3fcb93a779bae7070" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Pages</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1cc87b3bd4c513d09c41816de611667c" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Paragraphs</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ae9ee0c6fa7fa39c99212e33a70e16c9a" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_RevisionNumber</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a1cb9785c6d415ec69f9b542dcc2e67b1" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Security</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1acdfba7575fd5f7c671bff88dd01bcd31" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Subject</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ab6333bb1978560d83a2f6e78697987dd" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Template</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ad270649260329d64a4a559f2159a67f8" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Thumbnail</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a73b872a8acd028b06d1d2b341a7947ac" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Title</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a87a8c27369e1202c9e0b1d52e51c7542" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_TitlesOfParts</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac835dc6fc555feb6c5dc3a3e11f35d82" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_TotalEditingTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1aa14c53bc9c2e19c8d8f48a94f02651b0" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Version</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1afb569a6d58a4e69789116d58d884f493" prot="public" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>set_Words</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1a5cad44130f8d1894ad200ce9ba55e392" prot="private" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1ac7627fcdcfb4b34a481bc10afc0404a6" prot="private" virt="non-virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_properties_1_1_built_in_document_properties_1addd7142ffdf9f75d38fff55a6eba6cba" prot="private" virt="virtual"><scope>Aspose::Words::Properties::BuiltInDocumentProperties</scope><name>~BuiltInDocumentProperties</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
