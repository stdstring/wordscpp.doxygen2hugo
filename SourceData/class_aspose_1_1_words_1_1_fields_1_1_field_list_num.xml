<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fields::FieldListNum</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field" prot="public" virt="non-virtual">Aspose::Words::Fields::Field</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Fields::IFieldCodeTokenInfoProvider</basecompoundref>
    <includes refid="_field_list_num_8h" local="no">Aspose.Words.Cpp/Fields/FieldListNum.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a4236112731275a950913f20e2810233c" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Aspose::Words::Fields::Field</ref></type>
        <definition>typedef Aspose::Words::Fields::Field Aspose::Words::Fields::FieldListNum::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="110" column="42" bodyfile="Aspose.Words.Cpp/Fields/FieldListNum.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aeac8e5ce99f7cd0878c3e985ce121840" prot="private" static="no">
        <type>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</type>
        <definition>typedef Aspose::Words::Fields::IFieldCodeTokenInfoProvider Aspose::Words::Fields::FieldListNum::BaseType1</definition>
        <argsstring></argsstring>
        <name>BaseType1</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::BaseType1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="111" column="64" bodyfile="Aspose.Words.Cpp/Fields/FieldListNum.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aa433321852276c3d038c18b08d70b3f6" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num" kindref="compound">FieldListNum</ref></type>
        <definition>typedef FieldListNum Aspose::Words::Fields::FieldListNum::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="109" column="26" bodyfile="Aspose.Words.Cpp/Fields/FieldListNum.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aeecbf3681d23ac285f82fb25852e7fd9" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">BaseType</ref>, BaseType1 &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType, BaseType1&gt; Aspose::Words::Fields::FieldListNum::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="113" column="37" bodyfile="Aspose.Words.Cpp/Fields/FieldListNum.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a7a689afc602625734613488410792954" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Fields::FieldListNum::~FieldListNum</definition>
        <argsstring>()</argsstring>
        <name>~FieldListNum</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::~FieldListNum</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="408" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a59286c052977fbf7f90451cfb463648d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::NodeRange &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::NodeRange &gt; Aspose::Words::Fields::FieldListNum::GetFakeResult</definition>
        <argsstring>() override</argsstring>
        <name>GetFakeResult</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::GetFakeResult</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aec0fb24827aecbea0ff27a044ba7c760">GetFakeResult</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="406" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a06e4d47ddd77cde42d6f77b52326de58" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Aspose::Words::Fields::FieldSwitchType</type>
        <definition>Aspose::Words::Fields::FieldSwitchType Aspose::Words::Fields::FieldListNum::GetSwitchType</definition>
        <argsstring>(System::String) override</argsstring>
        <name>GetSwitchType</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::GetSwitchType</qualifiedname>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="412" column="44"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aeaa569e604f51b6cc39cdcf8c88d6264" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::FieldListNum::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="114" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1afc3adf7a95c6ed40aaf9c1dc26796cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldListNum::get_HasListName</definition>
        <argsstring>()</argsstring>
        <name>get_HasListName</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::get_HasListName</qualifiedname>
        <briefdescription>
<para>Returns a value indicating whether the name of an abstract numbering definition is provided by the field&apos;s code. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to number paragraphs with LISTNUM fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>display<sp/>a<sp/>number<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>LISTNUM<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>have<sp/>a<sp/>variety<sp/>of<sp/>options<sp/>that<sp/>allow<sp/>us<sp/>to<sp/>use<sp/>them<sp/>to<sp/>emulate<sp/>numbered<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>start<sp/>counting<sp/>at<sp/>1<sp/>by<sp/>default,<sp/>but<sp/>we<sp/>can<sp/>set<sp/>this<sp/>number<sp/>to<sp/>a<sp/>different<sp/>value,<sp/>such<sp/>as<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>display<sp/>&quot;0)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\s<sp/>0&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>LISTNUM<sp/>field<sp/>in<sp/>the<sp/>same<sp/>paragraph<sp/>as<sp/>another<sp/>LISTNUM<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>increases<sp/>the<sp/>list<sp/>level<sp/>instead<sp/>of<sp/>the<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>field<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>we<sp/>started<sp/>above<sp/>and<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;<sp/>at<sp/>list<sp/>level<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>2.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>3.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>list<sp/>levels<sp/>have<sp/>different<sp/>formatting,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>fields<sp/>combined<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1)a)i)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>LISTNUM<sp/>field<sp/>that<sp/>we<sp/>insert<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>at<sp/>the<sp/>list<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>previous<sp/>LISTNUM<sp/>field<sp/>was<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;ListLevel&quot;<sp/>property<sp/>to<sp/>jump<sp/>to<sp/>a<sp/>different<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>LISTNUM<sp/>field<sp/>stayed<sp/>on<sp/>list<sp/>level<sp/>3,<sp/>it<sp/>would<sp/>display<sp/>&quot;ii)&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but,<sp/>since<sp/>we<sp/>have<sp/>moved<sp/>it<sp/>to<sp/>list<sp/>level<sp/>2,<sp/>it<sp/>carries<sp/>on<sp/>the<sp/>count<sp/>at<sp/>that<sp/>level<sp/>and<sp/>displays<sp/>&quot;b)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListLevel(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\l<sp/>2&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>ListName<sp/>property<sp/>to<sp/>get<sp/>the<sp/>field<sp/>to<sp/>emulate<sp/>a<sp/>different<sp/>AUTONUM<sp/>field<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;NumberDefault&quot;<sp/>emulates<sp/>AUTONUM,<sp/>&quot;OutlineDefault&quot;<sp/>emulates<sp/>AUTONUMOUT,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>&quot;LegalDefault&quot;<sp/>emulates<sp/>AUTONUMLGL<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;OutlineDefault&quot;<sp/>list<sp/>name<sp/>with<sp/>1<sp/>as<sp/>the<sp/>starting<sp/>number<sp/>will<sp/>result<sp/>in<sp/>displaying<sp/>&quot;I.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(field-&gt;get_HasListName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>OutlineDefault<sp/>\\s<sp/>1&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ListName<sp/>does<sp/>not<sp/>carry<sp/>over<sp/>from<sp/>the<sp/>previous<sp/>field,<sp/>so<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>it<sp/>for<sp/>each<sp/>new<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>continues<sp/>the<sp/>count<sp/>with<sp/>the<sp/>different<sp/>list<sp/>name<sp/>and<sp/>displays<sp/>&quot;II.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.LISTNUM.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="258" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a02b8d9fb779a7a210083bfe4ce4b0d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldListNum::get_ListLevel</definition>
        <argsstring>()</argsstring>
        <name>get_ListLevel</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::get_ListLevel</qualifiedname>
        <briefdescription>
<para>Gets or sets the level in the list, overriding the default behavior of the field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to number paragraphs with LISTNUM fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>display<sp/>a<sp/>number<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>LISTNUM<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>have<sp/>a<sp/>variety<sp/>of<sp/>options<sp/>that<sp/>allow<sp/>us<sp/>to<sp/>use<sp/>them<sp/>to<sp/>emulate<sp/>numbered<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>start<sp/>counting<sp/>at<sp/>1<sp/>by<sp/>default,<sp/>but<sp/>we<sp/>can<sp/>set<sp/>this<sp/>number<sp/>to<sp/>a<sp/>different<sp/>value,<sp/>such<sp/>as<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>display<sp/>&quot;0)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\s<sp/>0&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>LISTNUM<sp/>field<sp/>in<sp/>the<sp/>same<sp/>paragraph<sp/>as<sp/>another<sp/>LISTNUM<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>increases<sp/>the<sp/>list<sp/>level<sp/>instead<sp/>of<sp/>the<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>field<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>we<sp/>started<sp/>above<sp/>and<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;<sp/>at<sp/>list<sp/>level<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>2.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>3.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>list<sp/>levels<sp/>have<sp/>different<sp/>formatting,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>fields<sp/>combined<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1)a)i)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>LISTNUM<sp/>field<sp/>that<sp/>we<sp/>insert<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>at<sp/>the<sp/>list<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>previous<sp/>LISTNUM<sp/>field<sp/>was<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;ListLevel&quot;<sp/>property<sp/>to<sp/>jump<sp/>to<sp/>a<sp/>different<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>LISTNUM<sp/>field<sp/>stayed<sp/>on<sp/>list<sp/>level<sp/>3,<sp/>it<sp/>would<sp/>display<sp/>&quot;ii)&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but,<sp/>since<sp/>we<sp/>have<sp/>moved<sp/>it<sp/>to<sp/>list<sp/>level<sp/>2,<sp/>it<sp/>carries<sp/>on<sp/>the<sp/>count<sp/>at<sp/>that<sp/>level<sp/>and<sp/>displays<sp/>&quot;b)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListLevel(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\l<sp/>2&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>ListName<sp/>property<sp/>to<sp/>get<sp/>the<sp/>field<sp/>to<sp/>emulate<sp/>a<sp/>different<sp/>AUTONUM<sp/>field<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;NumberDefault&quot;<sp/>emulates<sp/>AUTONUM,<sp/>&quot;OutlineDefault&quot;<sp/>emulates<sp/>AUTONUMOUT,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>&quot;LegalDefault&quot;<sp/>emulates<sp/>AUTONUMLGL<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;OutlineDefault&quot;<sp/>list<sp/>name<sp/>with<sp/>1<sp/>as<sp/>the<sp/>starting<sp/>number<sp/>will<sp/>result<sp/>in<sp/>displaying<sp/>&quot;I.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(field-&gt;get_HasListName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>OutlineDefault<sp/>\\s<sp/>1&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ListName<sp/>does<sp/>not<sp/>carry<sp/>over<sp/>from<sp/>the<sp/>previous<sp/>field,<sp/>so<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>it<sp/>for<sp/>each<sp/>new<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>continues<sp/>the<sp/>count<sp/>with<sp/>the<sp/>different<sp/>list<sp/>name<sp/>and<sp/>displays<sp/>&quot;II.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.LISTNUM.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="327" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aef23d2d1d41e253b4258ba0cac6c6427" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldListNum::get_ListName</definition>
        <argsstring>()</argsstring>
        <name>get_ListName</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::get_ListName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the abstract numbering definition used for the numbering. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to number paragraphs with LISTNUM fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>display<sp/>a<sp/>number<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>LISTNUM<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>have<sp/>a<sp/>variety<sp/>of<sp/>options<sp/>that<sp/>allow<sp/>us<sp/>to<sp/>use<sp/>them<sp/>to<sp/>emulate<sp/>numbered<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>start<sp/>counting<sp/>at<sp/>1<sp/>by<sp/>default,<sp/>but<sp/>we<sp/>can<sp/>set<sp/>this<sp/>number<sp/>to<sp/>a<sp/>different<sp/>value,<sp/>such<sp/>as<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>display<sp/>&quot;0)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\s<sp/>0&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>LISTNUM<sp/>field<sp/>in<sp/>the<sp/>same<sp/>paragraph<sp/>as<sp/>another<sp/>LISTNUM<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>increases<sp/>the<sp/>list<sp/>level<sp/>instead<sp/>of<sp/>the<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>field<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>we<sp/>started<sp/>above<sp/>and<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;<sp/>at<sp/>list<sp/>level<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>2.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>3.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>list<sp/>levels<sp/>have<sp/>different<sp/>formatting,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>fields<sp/>combined<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1)a)i)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>LISTNUM<sp/>field<sp/>that<sp/>we<sp/>insert<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>at<sp/>the<sp/>list<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>previous<sp/>LISTNUM<sp/>field<sp/>was<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;ListLevel&quot;<sp/>property<sp/>to<sp/>jump<sp/>to<sp/>a<sp/>different<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>LISTNUM<sp/>field<sp/>stayed<sp/>on<sp/>list<sp/>level<sp/>3,<sp/>it<sp/>would<sp/>display<sp/>&quot;ii)&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but,<sp/>since<sp/>we<sp/>have<sp/>moved<sp/>it<sp/>to<sp/>list<sp/>level<sp/>2,<sp/>it<sp/>carries<sp/>on<sp/>the<sp/>count<sp/>at<sp/>that<sp/>level<sp/>and<sp/>displays<sp/>&quot;b)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListLevel(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\l<sp/>2&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>ListName<sp/>property<sp/>to<sp/>get<sp/>the<sp/>field<sp/>to<sp/>emulate<sp/>a<sp/>different<sp/>AUTONUM<sp/>field<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;NumberDefault&quot;<sp/>emulates<sp/>AUTONUM,<sp/>&quot;OutlineDefault&quot;<sp/>emulates<sp/>AUTONUMOUT,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>&quot;LegalDefault&quot;<sp/>emulates<sp/>AUTONUMLGL<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;OutlineDefault&quot;<sp/>list<sp/>name<sp/>with<sp/>1<sp/>as<sp/>the<sp/>starting<sp/>number<sp/>will<sp/>result<sp/>in<sp/>displaying<sp/>&quot;I.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(field-&gt;get_HasListName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>OutlineDefault<sp/>\\s<sp/>1&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ListName<sp/>does<sp/>not<sp/>carry<sp/>over<sp/>from<sp/>the<sp/>previous<sp/>field,<sp/>so<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>it<sp/>for<sp/>each<sp/>new<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>continues<sp/>the<sp/>count<sp/>with<sp/>the<sp/>different<sp/>list<sp/>name<sp/>and<sp/>displays<sp/>&quot;II.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.LISTNUM.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="185" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a6c36887ca47891ad9cea63684387c8ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldListNum::get_StartingNumber</definition>
        <argsstring>()</argsstring>
        <name>get_StartingNumber</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::get_StartingNumber</qualifiedname>
        <briefdescription>
<para>Gets or sets the starting value for this field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to number paragraphs with LISTNUM fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>display<sp/>a<sp/>number<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>LISTNUM<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>have<sp/>a<sp/>variety<sp/>of<sp/>options<sp/>that<sp/>allow<sp/>us<sp/>to<sp/>use<sp/>them<sp/>to<sp/>emulate<sp/>numbered<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>start<sp/>counting<sp/>at<sp/>1<sp/>by<sp/>default,<sp/>but<sp/>we<sp/>can<sp/>set<sp/>this<sp/>number<sp/>to<sp/>a<sp/>different<sp/>value,<sp/>such<sp/>as<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>display<sp/>&quot;0)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\s<sp/>0&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>LISTNUM<sp/>field<sp/>in<sp/>the<sp/>same<sp/>paragraph<sp/>as<sp/>another<sp/>LISTNUM<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>increases<sp/>the<sp/>list<sp/>level<sp/>instead<sp/>of<sp/>the<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>field<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>we<sp/>started<sp/>above<sp/>and<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;<sp/>at<sp/>list<sp/>level<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>2.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>3.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>list<sp/>levels<sp/>have<sp/>different<sp/>formatting,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>fields<sp/>combined<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1)a)i)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>LISTNUM<sp/>field<sp/>that<sp/>we<sp/>insert<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>at<sp/>the<sp/>list<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>previous<sp/>LISTNUM<sp/>field<sp/>was<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;ListLevel&quot;<sp/>property<sp/>to<sp/>jump<sp/>to<sp/>a<sp/>different<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>LISTNUM<sp/>field<sp/>stayed<sp/>on<sp/>list<sp/>level<sp/>3,<sp/>it<sp/>would<sp/>display<sp/>&quot;ii)&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but,<sp/>since<sp/>we<sp/>have<sp/>moved<sp/>it<sp/>to<sp/>list<sp/>level<sp/>2,<sp/>it<sp/>carries<sp/>on<sp/>the<sp/>count<sp/>at<sp/>that<sp/>level<sp/>and<sp/>displays<sp/>&quot;b)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListLevel(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\l<sp/>2&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>ListName<sp/>property<sp/>to<sp/>get<sp/>the<sp/>field<sp/>to<sp/>emulate<sp/>a<sp/>different<sp/>AUTONUM<sp/>field<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;NumberDefault&quot;<sp/>emulates<sp/>AUTONUM,<sp/>&quot;OutlineDefault&quot;<sp/>emulates<sp/>AUTONUMOUT,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>&quot;LegalDefault&quot;<sp/>emulates<sp/>AUTONUMLGL<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;OutlineDefault&quot;<sp/>list<sp/>name<sp/>with<sp/>1<sp/>as<sp/>the<sp/>starting<sp/>number<sp/>will<sp/>result<sp/>in<sp/>displaying<sp/>&quot;I.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(field-&gt;get_HasListName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>OutlineDefault<sp/>\\s<sp/>1&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ListName<sp/>does<sp/>not<sp/>carry<sp/>over<sp/>from<sp/>the<sp/>previous<sp/>field,<sp/>so<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>it<sp/>for<sp/>each<sp/>new<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>continues<sp/>the<sp/>count<sp/>with<sp/>the<sp/>different<sp/>list<sp/>name<sp/>and<sp/>displays<sp/>&quot;II.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.LISTNUM.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="399" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aa594d6884d323400d36a96cd7621ba9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldListNum::set_ListLevel</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ListLevel</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::set_ListLevel</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a02b8d9fb779a7a210083bfe4ce4b0d72" kindref="member">Aspose::Words::Fields::FieldListNum::get_ListLevel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="330" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1ac2c86e0642a0ec2b1a56b5028bf7ae36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldListNum::set_ListName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_ListName</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::set_ListName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aef23d2d1d41e253b4258ba0cac6c6427" kindref="member">Aspose::Words::Fields::FieldListNum::get_ListName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="188" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a5c52948c3e9664d3b5d1360be0b802cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldListNum::set_StartingNumber</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_StartingNumber</name>
        <qualifiedname>Aspose::Words::Fields::FieldListNum::set_StartingNumber</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a6c36887ca47891ad9cea63684387c8ab" kindref="member">Aspose::Words::Fields::FieldListNum::get_StartingNumber</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="402" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements the LISTNUM field. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to number paragraphs with LISTNUM fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>display<sp/>a<sp/>number<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>LISTNUM<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>have<sp/>a<sp/>variety<sp/>of<sp/>options<sp/>that<sp/>allow<sp/>us<sp/>to<sp/>use<sp/>them<sp/>to<sp/>emulate<sp/>numbered<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lists<sp/>start<sp/>counting<sp/>at<sp/>1<sp/>by<sp/>default,<sp/>but<sp/>we<sp/>can<sp/>set<sp/>this<sp/>number<sp/>to<sp/>a<sp/>different<sp/>value,<sp/>such<sp/>as<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>display<sp/>&quot;0)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\s<sp/>0&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>LISTNUM<sp/>fields<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserting<sp/>a<sp/>LISTNUM<sp/>field<sp/>in<sp/>the<sp/>same<sp/>paragraph<sp/>as<sp/>another<sp/>LISTNUM<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>increases<sp/>the<sp/>list<sp/>level<sp/>instead<sp/>of<sp/>the<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>field<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>we<sp/>started<sp/>above<sp/>and<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;<sp/>at<sp/>list<sp/>level<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>2.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>start<sp/>a<sp/>count<sp/>at<sp/>list<sp/>level<sp/>3.<sp/>It<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Different<sp/>list<sp/>levels<sp/>have<sp/>different<sp/>formatting,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>these<sp/>fields<sp/>combined<sp/>will<sp/>display<sp/>a<sp/>value<sp/>of<sp/>&quot;1)a)i)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>LISTNUM<sp/>field<sp/>that<sp/>we<sp/>insert<sp/>will<sp/>continue<sp/>the<sp/>count<sp/>at<sp/>the<sp/>list<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>previous<sp/>LISTNUM<sp/>field<sp/>was<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>&quot;ListLevel&quot;<sp/>property<sp/>to<sp/>jump<sp/>to<sp/>a<sp/>different<sp/>list<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>LISTNUM<sp/>field<sp/>stayed<sp/>on<sp/>list<sp/>level<sp/>3,<sp/>it<sp/>would<sp/>display<sp/>&quot;ii)&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>but,<sp/>since<sp/>we<sp/>have<sp/>moved<sp/>it<sp/>to<sp/>list<sp/>level<sp/>2,<sp/>it<sp/>carries<sp/>on<sp/>the<sp/>count<sp/>at<sp/>that<sp/>level<sp/>and<sp/>displays<sp/>&quot;b)&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListLevel(u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>\\l<sp/>2&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>the<sp/>ListName<sp/>property<sp/>to<sp/>get<sp/>the<sp/>field<sp/>to<sp/>emulate<sp/>a<sp/>different<sp/>AUTONUM<sp/>field<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;NumberDefault&quot;<sp/>emulates<sp/>AUTONUM,<sp/>&quot;OutlineDefault&quot;<sp/>emulates<sp/>AUTONUMOUT,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>&quot;LegalDefault&quot;<sp/>emulates<sp/>AUTONUMLGL<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;OutlineDefault&quot;<sp/>list<sp/>name<sp/>with<sp/>1<sp/>as<sp/>the<sp/>starting<sp/>number<sp/>will<sp/>result<sp/>in<sp/>displaying<sp/>&quot;I.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_StartingNumber(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(field-&gt;get_HasListName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>LISTNUM<sp/><sp/>OutlineDefault<sp/>\\s<sp/>1&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>ListName<sp/>does<sp/>not<sp/>carry<sp/>over<sp/>from<sp/>the<sp/>previous<sp/>field,<sp/>so<sp/>we<sp/>will<sp/>need<sp/>to<sp/>set<sp/>it<sp/>for<sp/>each<sp/>new<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>continues<sp/>the<sp/>count<sp/>with<sp/>the<sp/>different<sp/>list<sp/>name<sp/>and<sp/>displays<sp/>&quot;II.&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldListNum&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca376d045f2a0ed91c76dd0ed6ea065139" kindref="member" tooltip="Specifies the LISTNUM field.">FieldType::FieldListNum</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_ListName(u</highlight><highlight class="stringliteral">&quot;OutlineDefault&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.LISTNUM.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldListNum</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldListNum</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/FieldListNum.h" line="107" column="1" bodyfile="Aspose.Words.Cpp/Fields/FieldListNum.h" bodystart="108" bodyend="414"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a4236112731275a950913f20e2810233c" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aeac8e5ce99f7cd0878c3e985ce121840" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>BaseType1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a5c2d01019c517ea8098f296903e37a34" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_DisplayResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_End</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a399c14463916724cac0015b430175589" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_FieldEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abc40cddc1325f7fec80d8530e5287448" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_FieldStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a090c5d09915e2ead6cc54fda736dd7c2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_Format</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1afc3adf7a95c6ed40aaf9c1dc26796cc8" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_HasListName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a02b8d9fb779a7a210083bfe4ce4b0d72" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_ListLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aef23d2d1d41e253b4258ba0cac6c6427" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_ListName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_Start</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a6c36887ca47891ad9cea63684387c8ab" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_StartingNumber</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad68196653db5cfca30c1ba18ed44c76e" prot="public" virt="virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a59286c052977fbf7f90451cfb463648d" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>GetFakeResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a578378121cced134f079765f19f64498" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a06e4d47ddd77cde42d6f77b52326de58" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>GetSwitchType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad26a8021af3dbdc5bf0a1360a201222f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aeaa569e604f51b6cc39cdcf8c88d6264" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa637d825865724665fb8ed856e664d95" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ac70b125adbe7f0ba5b889280cd282c47" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aa594d6884d323400d36a96cd7621ba9e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_ListLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1ac2c86e0642a0ec2b1a56b5028bf7ae36" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_ListName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a165f748dd5ba33844f1d765f6c710f88" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa6af1e900c84ae806f071098dfe8f087" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a5c52948c3e9664d3b5d1360be0b802cc" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>set_StartingNumber</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aa433321852276c3d038c18b08d70b3f6" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1aeecbf3681d23ac285f82fb25852e7fd9" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9f908becb16b26bed76d58dbcee9929" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>Unlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a1298d7daa07c863bf97cb3f37a4d7a99" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a7a689afc602625734613488410792954" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldListNum</scope><name>~FieldListNum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
