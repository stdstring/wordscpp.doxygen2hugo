<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_field_toc" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fields::FieldToc</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field" prot="public" virt="non-virtual">Aspose::Words::Fields::Field</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Fields::IFieldCodeTokenInfoProvider</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">Aspose::Words::Fields::ITocEntryExtractorOptions</basecompoundref>
    <includes refid="_field_toc_8h" local="no">Aspose.Words.Cpp/Fields/FieldToc.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a45f95292400de8d71d27fb8e4bbf8771" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Aspose::Words::Fields::Field</ref></type>
        <definition>typedef Aspose::Words::Fields::Field Aspose::Words::Fields::FieldToc::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="220" column="42" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1acbfc6184b7df3f16758c7a4aa068256b" prot="private" static="no">
        <type>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</type>
        <definition>typedef Aspose::Words::Fields::IFieldCodeTokenInfoProvider Aspose::Words::Fields::FieldToc::BaseType1</definition>
        <argsstring></argsstring>
        <name>BaseType1</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::BaseType1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="221" column="64" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adb2e18779cdf398d918685d36ba4e7d0" prot="private" static="no">
        <type>Aspose::Words::Fields::ITocEntryExtractorOptions</type>
        <definition>typedef Aspose::Words::Fields::ITocEntryExtractorOptions Aspose::Words::Fields::FieldToc::BaseType2</definition>
        <argsstring></argsstring>
        <name>BaseType2</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::BaseType2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="222" column="62" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a0f910517ab22a5c3a90ebb46feabbee6" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc" kindref="compound">FieldToc</ref></type>
        <definition>typedef FieldToc Aspose::Words::Fields::FieldToc::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="219" column="22" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a6dc4e34a5823a0d091686fed7419f0fc" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">BaseType</ref>, BaseType1, BaseType2 &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType, BaseType1, BaseType2&gt; Aspose::Words::Fields::FieldToc::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="224" column="37" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a991f7b95d1a1079aa5f8b25a0b586c1f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::FieldToc::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1567" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="1567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adc48a4498cf0cb6a7eadd5fc4ec31f78" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Fields::FieldToc::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1568" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="1568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a8f1051a59437ef7ec72a18ac3594e79c" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Fields::FieldToc::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1569" column="23" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="1569" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a88b5f7da0dc54701fad498874f72fcb1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Fields::FieldToc::~FieldToc</definition>
        <argsstring>()</argsstring>
        <name>~FieldToc</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::~FieldToc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1551" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a8a6a2d4eae268a48d148e9ce4ddc5ac1" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::BeforeUnlink</definition>
        <argsstring>() override</argsstring>
        <name>BeforeUnlink</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::BeforeUnlink</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a8beea0f88f340d5955669d1c8eaeb740">BeforeUnlink</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1549" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a6392544bf1e314e3ce7c503dabd15503" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_AreCustomStylesSpecified</definition>
        <argsstring>() override</argsstring>
        <name>get_AreCustomStylesSpecified</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_AreCustomStylesSpecified</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1563" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a5f04451ba7a9b2b028636a14b9c75c76" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Fields::FieldToc::get_EntryTypeCore</definition>
        <argsstring>() override</argsstring>
        <name>get_EntryTypeCore</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_EntryTypeCore</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1560" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a77d3040d6cb4d9533610f1d6313dbb96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::LevelRange &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::LevelRange &gt; Aspose::Words::Fields::FieldToc::get_HeadingLevelRangeParsed</definition>
        <argsstring>() override</argsstring>
        <name>get_HeadingLevelRangeParsed</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_HeadingLevelRangeParsed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1557" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad4c2781e38709dd8b690ee7dcb97816c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_IncludeRefDocFields</definition>
        <argsstring>() override</argsstring>
        <name>get_IncludeRefDocFields</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_IncludeRefDocFields</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1556" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a79b23512f8614adeaf0e3206ede8c3b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_IncludeTocEntryFields</definition>
        <argsstring>() override</argsstring>
        <name>get_IncludeTocEntryFields</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_IncludeTocEntryFields</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1559" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a85a00044ae197f433eac1c8e70261e46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_IsBookmarkRangeSpecified</definition>
        <argsstring>() override</argsstring>
        <name>get_IsBookmarkRangeSpecified</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_IsBookmarkRangeSpecified</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1565" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a46425f3a187899e14b7a28339983070c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_IsEntryLevelRangeSpecified</definition>
        <argsstring>() override</argsstring>
        <name>get_IsEntryLevelRangeSpecified</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_IsEntryLevelRangeSpecified</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1562" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a571d28b5aecabe1ef65843218e79665d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_IsHeadingLevelRangeSpecified</definition>
        <argsstring>() override</argsstring>
        <name>get_IsHeadingLevelRangeSpecified</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_IsHeadingLevelRangeSpecified</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1561" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a48408763b447b736d4bfa2f118be5ea1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_IsTableOfFigures</definition>
        <argsstring>() override</argsstring>
        <name>get_IsTableOfFigures</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_IsTableOfFigures</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1564" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1abcd04bcd67f00951db1500749952c8f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_SkipTables</definition>
        <argsstring>() override</argsstring>
        <name>get_SkipTables</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_SkipTables</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1555" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a15ed39a275955b4fa46d4332614496f1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::LevelRange &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::LevelRange &gt; Aspose::Words::Fields::FieldToc::get_TocEntryLevelRange</definition>
        <argsstring>() override</argsstring>
        <name>get_TocEntryLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_TocEntryLevelRange</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1558" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ae81561c740d4b335e66741aae1bdd686" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Fields::FieldToc::GetLevelForCustomStyle</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Paragraph &gt;, System::SharedPtr&lt; Aspose::Words::Style &gt;) override</argsstring>
        <name>GetLevelForCustomStyle</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::GetLevelForCustomStyle</qualifiedname>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_paragraph" kindref="compound">Aspose::Words::Paragraph</ref> &gt;</type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Aspose::Words::Style</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1571" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a4e3d8e2cef42dff8102cd4d29a2f5219" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_bookmark" kindref="compound">Aspose::Words::Bookmark</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Bookmark &gt; Aspose::Words::Fields::FieldToc::GetRangeBookmark</definition>
        <argsstring>() override</argsstring>
        <name>GetRangeBookmark</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::GetRangeBookmark</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1574" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab0fdea8f1e54134247462f90e3b0e0b4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Aspose::Words::Fields::FieldSwitchType</type>
        <definition>Aspose::Words::Fields::FieldSwitchType Aspose::Words::Fields::FieldToc::GetSwitchType</definition>
        <argsstring>(System::String) override</argsstring>
        <name>GetSwitchType</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::GetSwitchType</qualifiedname>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1573" column="44"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab1786daadfaf7a663924254cc8d208ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Aspose::Words::Fields::FieldUpdateStage</type>
        <definition>Aspose::Words::Fields::FieldUpdateStage Aspose::Words::Fields::FieldToc::GetUpdateStage</definition>
        <argsstring>() override</argsstring>
        <name>GetUpdateStage</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::GetUpdateStage</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa312d165970a8c453ad49aca355adf8a">GetUpdateStage</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1547" column="48"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9d7d45412464f954d52351b86c5aba81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::FieldToc::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="225" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9b585e6d641cefb6d611262c87aca65b" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::FieldUpdateAction &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldUpdateAction &gt; Aspose::Words::Fields::FieldToc::UpdateCore</definition>
        <argsstring>() override</argsstring>
        <name>UpdateCore</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::UpdateCore</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afd2f4d29a84550a38375396538654ab8">UpdateCore</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1548" column="26"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad620c52941a1bc45ac619accafcee0af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::FieldToc::FieldToc</definition>
        <argsstring>()</argsstring>
        <name>FieldToc</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::FieldToc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1543" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3e5bd0a36b06a16bb8a5e5014842bd2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_BookmarkName</definition>
        <argsstring>()</argsstring>
        <name>get_BookmarkName</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_BookmarkName</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the bookmark that marks the portion of the document used to build the table. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="319" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a5945554a551d6032721001db9de4e403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_CaptionlessTableOfFiguresLabel</definition>
        <argsstring>() override</argsstring>
        <name>get_CaptionlessTableOfFiguresLabel</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_CaptionlessTableOfFiguresLabel</qualifiedname>
        <briefdescription>
<para>Gets the name of the sequence identifier used when building a table of figures that does not include caption&apos;s label and number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="404" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ada686302112e553a98b6f1d46640d059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_CustomStyles</definition>
        <argsstring>()</argsstring>
        <name>get_CustomStyles</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_CustomStyles</qualifiedname>
        <briefdescription>
<para>Gets or sets a list of styles other than the built-in heading styles to include in the table of contents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1104" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aa4bfe541f4f2096d3115bfbb96a90a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_end" kindref="compound">Aspose::Words::Fields::FieldEnd</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldEnd &gt; Aspose::Words::Fields::FieldToc::get_End</definition>
        <argsstring>() override</argsstring>
        <name>get_End</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_End</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the field end. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="232" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aadfbf64b9be67659472bd92df8bddd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_EntryIdentifier</definition>
        <argsstring>()</argsstring>
        <name>get_EntryIdentifier</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_EntryIdentifier</qualifiedname>
        <briefdescription>
<para>Gets or sets a string that should match type identifiers of TC fields being included. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC field, and filter which TC fields end up as entries. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTocEntryIdentifier()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>TC<sp/>fields<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>only<sp/>to<sp/>pick<sp/>up<sp/>TC<sp/>entries<sp/>of<sp/>the<sp/>&quot;A&quot;<sp/>type,<sp/>and<sp/>an<sp/>entry-level<sp/>between<sp/>1<sp/>and<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToc-&gt;set_EntryIdentifier(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToc-&gt;set_EntryLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\f<sp/>A<sp/>\\l<sp/>1-3&quot;</highlight><highlight class="normal">,<sp/>fieldToc-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>entries<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TC<sp/><sp/>\&quot;TC<sp/>field<sp/>1\&quot;<sp/>\\n<sp/>\\f<sp/>A<sp/>\\l<sp/>1&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>be<sp/>omitted<sp/>from<sp/>the<sp/>table<sp/>because<sp/>it<sp/>has<sp/>a<sp/>different<sp/>type<sp/>from<sp/>&quot;A&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>be<sp/>omitted<sp/>from<sp/>the<sp/>table<sp/>because<sp/>it<sp/>has<sp/>an<sp/>entry-level<sp/>outside<sp/>of<sp/>the<sp/>1-3<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertTocEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>text,<sp/>String<sp/>typeIdentifier,<sp/>String<sp/>entryLevel)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldTc<sp/>=<sp/>System::DynamicCast&lt;FieldTC&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca7446f162f3ce52e7c8816ed9d0039052" kindref="member" tooltip="Specifies the TC field.">FieldType::FieldTOCEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_OmitPageNumber(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_Text(text);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_TypeIdentifier(typeIdentifier);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_EntryLevel(entryLevel);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="537" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a21b648994a094fb702498d112cbcde97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_EntryLevelRange</definition>
        <argsstring>()</argsstring>
        <name>get_EntryLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_EntryLevelRange</qualifiedname>
        <briefdescription>
<para>Gets or sets a range of levels of the table of contents entries to be included. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC field, and filter which TC fields end up as entries. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldTocEntryIdentifier()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>TC<sp/>fields<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>only<sp/>to<sp/>pick<sp/>up<sp/>TC<sp/>entries<sp/>of<sp/>the<sp/>&quot;A&quot;<sp/>type,<sp/>and<sp/>an<sp/>entry-level<sp/>between<sp/>1<sp/>and<sp/>3.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToc-&gt;set_EntryIdentifier(u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldToc-&gt;set_EntryLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\f<sp/>A<sp/>\\l<sp/>1-3&quot;</highlight><highlight class="normal">,<sp/>fieldToc-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>entries<sp/>will<sp/>appear<sp/>in<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>1&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>2&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TC<sp/><sp/>\&quot;TC<sp/>field<sp/>1\&quot;<sp/>\\n<sp/>\\f<sp/>A<sp/>\\l<sp/>1&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>be<sp/>omitted<sp/>from<sp/>the<sp/>table<sp/>because<sp/>it<sp/>has<sp/>a<sp/>different<sp/>type<sp/>from<sp/>&quot;A&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>3&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>be<sp/>omitted<sp/>from<sp/>the<sp/>table<sp/>because<sp/>it<sp/>has<sp/>an<sp/>entry-level<sp/>outside<sp/>of<sp/>the<sp/>1-3<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertTocEntry(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;TC<sp/>field<sp/>4&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertTocEntry(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>text,<sp/>String<sp/>typeIdentifier,<sp/>String<sp/>entryLevel)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldTc<sp/>=<sp/>System::DynamicCast&lt;FieldTC&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca7446f162f3ce52e7c8816ed9d0039052" kindref="member" tooltip="Specifies the TC field.">FieldType::FieldTOCEntry</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_OmitPageNumber(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_Text(text);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_TypeIdentifier(typeIdentifier);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fieldTc-&gt;set_EntryLevel(entryLevel);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="678" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a59cec17a4bb06d80f8349ffb72087750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_EntrySeparator</definition>
        <argsstring>()</argsstring>
        <name>get_EntrySeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_EntrySeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets a sequence of characters that separate an entry and its page number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="939" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3d00c48caccf86c124ffe7504f3d44e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_HeadingLevelRange</definition>
        <argsstring>()</argsstring>
        <name>get_HeadingLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_HeadingLevelRange</qualifiedname>
        <briefdescription>
<para>Gets or sets a range of heading levels to include. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="852" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab0cb1f3398fdf968b10fba2cab85279e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_HideInWebLayout</definition>
        <argsstring>()</argsstring>
        <name>get_HideInWebLayout</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_HideInWebLayout</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to hide tab leader and page numbers in Web layout view. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1452" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a984778f060846191ce82d06c4a6ab52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_InsertHyperlinks</definition>
        <argsstring>()</argsstring>
        <name>get_InsertHyperlinks</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_InsertHyperlinks</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to make the table of contents entries hyperlinks. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="624" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adcc1bb79bc6ca532b83b09a03aa1c247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_PageNumberOmittingLevelRange</definition>
        <argsstring>()</argsstring>
        <name>get_PageNumberOmittingLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_PageNumberOmittingLevelRange</qualifiedname>
        <briefdescription>
<para>Gets or sets a range of levels of the table of contents entries from which to omits page numbers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="765" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a1dd00e44b79203f4ef6d0368759f46b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_PrefixedSequenceIdentifier</definition>
        <argsstring>()</argsstring>
        <name>get_PrefixedSequenceIdentifier</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_PrefixedSequenceIdentifier</qualifiedname>
        <briefdescription>
<para>Gets or sets the identifier of a sequence for which a prefix should be added to the entry&apos;s page number. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate a TOC field with entries using SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>TOC<sp/>field<sp/>can<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>its<sp/>table<sp/>of<sp/>contents<sp/>for<sp/>each<sp/>SEQ<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>contains<sp/>the<sp/>paragraph<sp/>that<sp/>includes<sp/>the<sp/>SEQ<sp/>field<sp/>and<sp/>the<sp/>page&apos;s<sp/>number<sp/>that<sp/>the<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>to<sp/>name<sp/>a<sp/>main<sp/>sequence<sp/>for<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now,<sp/>this<sp/>TOC<sp/>will<sp/>only<sp/>create<sp/>entries<sp/>out<sp/>of<sp/>SEQ<sp/>fields<sp/>with<sp/>their<sp/>&quot;SequenceIdentifier&quot;<sp/>set<sp/>to<sp/>&quot;MySequence&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_TableOfFiguresLabel(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>another<sp/>SEQ<sp/>field<sp/>sequence<sp/>in<sp/>the<sp/>&quot;PrefixedSequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>from<sp/>this<sp/>prefix<sp/>sequence<sp/>will<sp/>not<sp/>create<sp/>TOC<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>TOC<sp/>entry<sp/>created<sp/>from<sp/>a<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>on<sp/>at<sp/>the<sp/>primary<sp/>sequence<sp/>SEQ<sp/>field<sp/>that<sp/>made<sp/>the<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_PrefixedSequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>prefix<sp/>sequence<sp/>count<sp/>immediately<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>page<sp/>number<sp/>that<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>custom<sp/>separator<sp/>that<sp/>will<sp/>appear<sp/>between<sp/>these<sp/>two<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\c<sp/>MySequence<sp/>\\s<sp/>PrefixSequence<sp/>\\d<sp/>&gt;&quot;</highlight><highlight class="normal">,<sp/>fieldToc-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>using<sp/>SEQ<sp/>fields<sp/>to<sp/>populate<sp/>this<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>prefix<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>increment<sp/>the<sp/>SEQ<sp/>sequence<sp/>count<sp/>for<sp/>the<sp/>&quot;PrefixSequence&quot;<sp/>by<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>field<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>main<sp/>sequence<sp/>identified</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>of<sp/>the<sp/>TOC,<sp/>it<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>PrefixSequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>main<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>SEQ<sp/>field<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>entry<sp/>will<sp/>contain<sp/>the<sp/>paragraph<sp/>that<sp/>the<sp/>SEQ<sp/>field<sp/>is<sp/>in<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>it<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>at,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>separated<sp/>from<sp/>the<sp/>page<sp/>number<sp/>by<sp/>the<sp/>value<sp/>in<sp/>the<sp/>TOC&apos;s<sp/>SeqenceSeparator<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;PrefixSequence&quot;<sp/>count<sp/>is<sp/>at<sp/>1,<sp/>this<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>separator<sp/>is<sp/>&quot;&gt;&quot;,<sp/>so<sp/>entry<sp/>will<sp/>display<sp/>&quot;1&gt;2&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;First<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page,<sp/>advance<sp/>the<sp/>prefix<sp/>sequence<sp/>by<sp/>2,<sp/>and<sp/>insert<sp/>a<sp/>SEQ<sp/>field<sp/>to<sp/>create<sp/>a<sp/>TOC<sp/>entry<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>prefix<sp/>sequence<sp/>is<sp/>now<sp/>at<sp/>2,<sp/>and<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>3,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>&quot;2&gt;3&quot;<sp/>at<sp/>its<sp/>page<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Second<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.SEQ.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1017" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad24bea7f201aca340b4f6dbe4c42cfbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_PreserveLineBreaks</definition>
        <argsstring>()</argsstring>
        <name>get_PreserveLineBreaks</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_PreserveLineBreaks</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to preserve newline characters within table entries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1365" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a7c61e2bc5a1ca81cdc3d54794eb631a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_PreserveTabs</definition>
        <argsstring>()</argsstring>
        <name>get_PreserveTabs</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_PreserveTabs</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to preserve tab entries within table entries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1278" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ae655ac7d8baa7808499cc8b21f5d8a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_SequenceSeparator</definition>
        <argsstring>()</argsstring>
        <name>get_SequenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_SequenceSeparator</qualifiedname>
        <briefdescription>
<para>Gets or sets the character sequence that is used to separate sequence numbers and page numbers. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate a TOC field with entries using SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>TOC<sp/>field<sp/>can<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>its<sp/>table<sp/>of<sp/>contents<sp/>for<sp/>each<sp/>SEQ<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>contains<sp/>the<sp/>paragraph<sp/>that<sp/>includes<sp/>the<sp/>SEQ<sp/>field<sp/>and<sp/>the<sp/>page&apos;s<sp/>number<sp/>that<sp/>the<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>to<sp/>name<sp/>a<sp/>main<sp/>sequence<sp/>for<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now,<sp/>this<sp/>TOC<sp/>will<sp/>only<sp/>create<sp/>entries<sp/>out<sp/>of<sp/>SEQ<sp/>fields<sp/>with<sp/>their<sp/>&quot;SequenceIdentifier&quot;<sp/>set<sp/>to<sp/>&quot;MySequence&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_TableOfFiguresLabel(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>another<sp/>SEQ<sp/>field<sp/>sequence<sp/>in<sp/>the<sp/>&quot;PrefixedSequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>from<sp/>this<sp/>prefix<sp/>sequence<sp/>will<sp/>not<sp/>create<sp/>TOC<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>TOC<sp/>entry<sp/>created<sp/>from<sp/>a<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>on<sp/>at<sp/>the<sp/>primary<sp/>sequence<sp/>SEQ<sp/>field<sp/>that<sp/>made<sp/>the<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_PrefixedSequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>prefix<sp/>sequence<sp/>count<sp/>immediately<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>page<sp/>number<sp/>that<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>custom<sp/>separator<sp/>that<sp/>will<sp/>appear<sp/>between<sp/>these<sp/>two<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\c<sp/>MySequence<sp/>\\s<sp/>PrefixSequence<sp/>\\d<sp/>&gt;&quot;</highlight><highlight class="normal">,<sp/>fieldToc-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>using<sp/>SEQ<sp/>fields<sp/>to<sp/>populate<sp/>this<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>prefix<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>increment<sp/>the<sp/>SEQ<sp/>sequence<sp/>count<sp/>for<sp/>the<sp/>&quot;PrefixSequence&quot;<sp/>by<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>field<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>main<sp/>sequence<sp/>identified</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>of<sp/>the<sp/>TOC,<sp/>it<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>PrefixSequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>main<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>SEQ<sp/>field<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>entry<sp/>will<sp/>contain<sp/>the<sp/>paragraph<sp/>that<sp/>the<sp/>SEQ<sp/>field<sp/>is<sp/>in<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>it<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>at,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>separated<sp/>from<sp/>the<sp/>page<sp/>number<sp/>by<sp/>the<sp/>value<sp/>in<sp/>the<sp/>TOC&apos;s<sp/>SeqenceSeparator<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;PrefixSequence&quot;<sp/>count<sp/>is<sp/>at<sp/>1,<sp/>this<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>separator<sp/>is<sp/>&quot;&gt;&quot;,<sp/>so<sp/>entry<sp/>will<sp/>display<sp/>&quot;1&gt;2&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;First<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page,<sp/>advance<sp/>the<sp/>prefix<sp/>sequence<sp/>by<sp/>2,<sp/>and<sp/>insert<sp/>a<sp/>SEQ<sp/>field<sp/>to<sp/>create<sp/>a<sp/>TOC<sp/>entry<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>prefix<sp/>sequence<sp/>is<sp/>now<sp/>at<sp/>2,<sp/>and<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>3,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>&quot;2&gt;3&quot;<sp/>at<sp/>its<sp/>page<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Second<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.SEQ.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="483" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1af4dd510cbcba867dc8e2880085a1865b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_start" kindref="compound">Aspose::Words::Fields::FieldStart</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldStart &gt; Aspose::Words::Fields::FieldToc::get_Start</definition>
        <argsstring>() override</argsstring>
        <name>get_Start</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_Start</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the start of the field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="235" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a1134a42062e3d37e6361ae847825fd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::FieldToc::get_TableOfFiguresLabel</definition>
        <argsstring>() override</argsstring>
        <name>get_TableOfFiguresLabel</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_TableOfFiguresLabel</qualifiedname>
        <briefdescription>
<para>Gets or sets the name of the sequence identifier used when building a table of figures. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to populate a TOC field with entries using SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>TOC<sp/>field<sp/>can<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>its<sp/>table<sp/>of<sp/>contents<sp/>for<sp/>each<sp/>SEQ<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>contains<sp/>the<sp/>paragraph<sp/>that<sp/>includes<sp/>the<sp/>SEQ<sp/>field<sp/>and<sp/>the<sp/>page&apos;s<sp/>number<sp/>that<sp/>the<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>to<sp/>name<sp/>a<sp/>main<sp/>sequence<sp/>for<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now,<sp/>this<sp/>TOC<sp/>will<sp/>only<sp/>create<sp/>entries<sp/>out<sp/>of<sp/>SEQ<sp/>fields<sp/>with<sp/>their<sp/>&quot;SequenceIdentifier&quot;<sp/>set<sp/>to<sp/>&quot;MySequence&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_TableOfFiguresLabel(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>another<sp/>SEQ<sp/>field<sp/>sequence<sp/>in<sp/>the<sp/>&quot;PrefixedSequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>from<sp/>this<sp/>prefix<sp/>sequence<sp/>will<sp/>not<sp/>create<sp/>TOC<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>TOC<sp/>entry<sp/>created<sp/>from<sp/>a<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>on<sp/>at<sp/>the<sp/>primary<sp/>sequence<sp/>SEQ<sp/>field<sp/>that<sp/>made<sp/>the<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_PrefixedSequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>prefix<sp/>sequence<sp/>count<sp/>immediately<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>page<sp/>number<sp/>that<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>custom<sp/>separator<sp/>that<sp/>will<sp/>appear<sp/>between<sp/>these<sp/>two<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\c<sp/>MySequence<sp/>\\s<sp/>PrefixSequence<sp/>\\d<sp/>&gt;&quot;</highlight><highlight class="normal">,<sp/>fieldToc-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>using<sp/>SEQ<sp/>fields<sp/>to<sp/>populate<sp/>this<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>prefix<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>increment<sp/>the<sp/>SEQ<sp/>sequence<sp/>count<sp/>for<sp/>the<sp/>&quot;PrefixSequence&quot;<sp/>by<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>field<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>main<sp/>sequence<sp/>identified</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>of<sp/>the<sp/>TOC,<sp/>it<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>PrefixSequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>main<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>SEQ<sp/>field<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>entry<sp/>will<sp/>contain<sp/>the<sp/>paragraph<sp/>that<sp/>the<sp/>SEQ<sp/>field<sp/>is<sp/>in<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>it<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>at,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>separated<sp/>from<sp/>the<sp/>page<sp/>number<sp/>by<sp/>the<sp/>value<sp/>in<sp/>the<sp/>TOC&apos;s<sp/>SeqenceSeparator<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;PrefixSequence&quot;<sp/>count<sp/>is<sp/>at<sp/>1,<sp/>this<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>separator<sp/>is<sp/>&quot;&gt;&quot;,<sp/>so<sp/>entry<sp/>will<sp/>display<sp/>&quot;1&gt;2&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;First<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page,<sp/>advance<sp/>the<sp/>prefix<sp/>sequence<sp/>by<sp/>2,<sp/>and<sp/>insert<sp/>a<sp/>SEQ<sp/>field<sp/>to<sp/>create<sp/>a<sp/>TOC<sp/>entry<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>prefix<sp/>sequence<sp/>is<sp/>now<sp/>at<sp/>2,<sp/>and<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>3,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>&quot;2&gt;3&quot;<sp/>at<sp/>its<sp/>page<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Second<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.SEQ.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="397" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9fbf76cc35d49379847985dd0609b534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::get_UseParagraphOutlineLevel</definition>
        <argsstring>() override</argsstring>
        <name>get_UseParagraphOutlineLevel</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::get_UseParagraphOutlineLevel</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to use the applied paragraph outline level. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1191" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1af8ce41f2fbf23beb28422191e5ce89d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_BookmarkName</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_BookmarkName</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_BookmarkName</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3e5bd0a36b06a16bb8a5e5014842bd2c" kindref="member">Aspose::Words::Fields::FieldToc::get_BookmarkName</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="322" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a68b8833c9328f9dc72e4592155aaf141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_CaptionlessTableOfFiguresLabel</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_CaptionlessTableOfFiguresLabel</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_CaptionlessTableOfFiguresLabel</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the name of the sequence identifier used when building a table of figures that does not include caption&apos;s label and number. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="408" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adfcef5854fcf6f7d222574704353997b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_CustomStyles</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_CustomStyles</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_CustomStyles</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ada686302112e553a98b6f1d46640d059" kindref="member">Aspose::Words::Fields::FieldToc::get_CustomStyles</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1107" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3fe821b0cc70a4fe9cdedd5dad8bbedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_EntryIdentifier</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_EntryIdentifier</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_EntryIdentifier</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aadfbf64b9be67659472bd92df8bddd80" kindref="member">Aspose::Words::Fields::FieldToc::get_EntryIdentifier</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="540" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9ac3ef89888ab188eed7a8d5a9948b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_EntryLevelRange</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_EntryLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_EntryLevelRange</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a21b648994a094fb702498d112cbcde97" kindref="member">Aspose::Words::Fields::FieldToc::get_EntryLevelRange</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="681" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a2b2a309daeedcaf522cf9ff254d77349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_EntrySeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_EntrySeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_EntrySeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a59cec17a4bb06d80f8349ffb72087750" kindref="member">Aspose::Words::Fields::FieldToc::get_EntrySeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="942" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a46dc763f98b71b886c875b4dd4f54e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_HeadingLevelRange</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_HeadingLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_HeadingLevelRange</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3d00c48caccf86c124ffe7504f3d44e9" kindref="member">Aspose::Words::Fields::FieldToc::get_HeadingLevelRange</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="855" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a71294d5de8aa99de92a4e63989117341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_HideInWebLayout</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_HideInWebLayout</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_HideInWebLayout</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab0cb1f3398fdf968b10fba2cab85279e" kindref="member">Aspose::Words::Fields::FieldToc::get_HideInWebLayout</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1455" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a36dd5bc9837356664f898be9a93b1ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_InsertHyperlinks</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_InsertHyperlinks</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_InsertHyperlinks</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a984778f060846191ce82d06c4a6ab52e" kindref="member">Aspose::Words::Fields::FieldToc::get_InsertHyperlinks</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="627" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aa30e1e91ac68bbfd76542dce5ec4ff8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_PageNumberOmittingLevelRange</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PageNumberOmittingLevelRange</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_PageNumberOmittingLevelRange</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adcc1bb79bc6ca532b83b09a03aa1c247" kindref="member">Aspose::Words::Fields::FieldToc::get_PageNumberOmittingLevelRange</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="768" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a81715e0cfa35a125ba6a619eb189de83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_PrefixedSequenceIdentifier</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_PrefixedSequenceIdentifier</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_PrefixedSequenceIdentifier</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a1dd00e44b79203f4ef6d0368759f46b9" kindref="member">Aspose::Words::Fields::FieldToc::get_PrefixedSequenceIdentifier</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1020" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ac95d7792de25d79ed23adfe9df7de566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_PreserveLineBreaks</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_PreserveLineBreaks</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_PreserveLineBreaks</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad24bea7f201aca340b4f6dbe4c42cfbf" kindref="member">Aspose::Words::Fields::FieldToc::get_PreserveLineBreaks</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1368" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a61e2268fbe6f21061de6bbeec3a0b0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_PreserveTabs</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_PreserveTabs</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_PreserveTabs</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a7c61e2bc5a1ca81cdc3d54794eb631a4" kindref="member">Aspose::Words::Fields::FieldToc::get_PreserveTabs</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1281" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a920fa197f3edda3ca8bdb53c8fbbec1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_SequenceSeparator</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_SequenceSeparator</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_SequenceSeparator</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ae655ac7d8baa7808499cc8b21f5d8a10" kindref="member">Aspose::Words::Fields::FieldToc::get_SequenceSeparator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="486" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ac138cb18e3f955f32f52ef9cb89d4414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_TableOfFiguresLabel</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_TableOfFiguresLabel</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_TableOfFiguresLabel</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a1134a42062e3d37e6361ae847825fd2d" kindref="member">Aspose::Words::Fields::FieldToc::get_TableOfFiguresLabel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="400" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a2fcedf2b1ed89ad17aafa64b7267a2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::FieldToc::set_UseParagraphOutlineLevel</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UseParagraphOutlineLevel</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::set_UseParagraphOutlineLevel</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9fbf76cc35d49379847985dd0609b534" kindref="member">Aspose::Words::Fields::FieldToc::get_UseParagraphOutlineLevel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1194" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aec96e3a205615a7b0373a9f223d23fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::FieldToc::UpdatePageNumbers</definition>
        <argsstring>()</argsstring>
        <name>UpdatePageNumbers</name>
        <qualifiedname>Aspose::Words::Fields::FieldToc::UpdatePageNumbers</qualifiedname>
        <briefdescription>
<para>Updates the page numbers for items in this table of contents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the operation is successful. If any of the related TOC bookmarks was removed, false will be returned.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="1541" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements the TOC field. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a TOC, and populate it with entries based on heading styles. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldToc_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;StartBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>TOC<sp/>field,<sp/>which<sp/>will<sp/>compile<sp/>all<sp/>headings<sp/>into<sp/>a<sp/>table<sp/>of<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>heading,<sp/>this<sp/>field<sp/>will<sp/>create<sp/>a<sp/>line<sp/>with<sp/>the<sp/>text<sp/>in<sp/>that<sp/>heading<sp/>style<sp/>to<sp/>the<sp/>left,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>page<sp/>the<sp/>heading<sp/>appears<sp/>on<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>BookmarkName<sp/>property<sp/>to<sp/>only<sp/>list<sp/>headings</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>appear<sp/>within<sp/>the<sp/>bounds<sp/>of<sp/>a<sp/>bookmark<sp/>with<sp/>the<sp/>&quot;MyBookmark&quot;<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_BookmarkName(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Text<sp/>with<sp/>a<sp/>built-in<sp/>heading<sp/>style,<sp/>such<sp/>as<sp/>&quot;Heading<sp/>1&quot;,<sp/>applied<sp/>to<sp/>it<sp/>will<sp/>count<sp/>as<sp/>a<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>additional<sp/>styles<sp/>to<sp/>be<sp/>picked<sp/>up<sp/>as<sp/>headings<sp/>by<sp/>the<sp/>TOC<sp/>in<sp/>this<sp/>property<sp/>and<sp/>their<sp/>TOC<sp/>levels.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_CustomStyles(u</highlight><highlight class="stringliteral">&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>Styles/TOC<sp/>levels<sp/>are<sp/>separated<sp/>in<sp/>the<sp/>CustomStyles<sp/>property<sp/>by<sp/>a<sp/>comma,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>can<sp/>set<sp/>a<sp/>custom<sp/>delimiter<sp/>in<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FieldOptions()-&gt;set_CustomTocStyleSeparator(u</highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Configure<sp/>the<sp/>field<sp/>to<sp/>exclude<sp/>any<sp/>headings<sp/>that<sp/>have<sp/>TOC<sp/>levels<sp/>outside<sp/>of<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HeadingLevelRange(u</highlight><highlight class="stringliteral">&quot;1-3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>will<sp/>not<sp/>display<sp/>the<sp/>page<sp/>numbers<sp/>of<sp/>headings<sp/>whose<sp/>TOC<sp/>levels<sp/>are<sp/>within<sp/>this<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PageNumberOmittingLevelRange(u</highlight><highlight class="stringliteral">&quot;2-5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>custom<sp/>string<sp/>that<sp/>will<sp/>separate<sp/>every<sp/>heading<sp/>from<sp/>its<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_EntrySeparator(u</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_InsertHyperlinks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_HideInWebLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveLineBreaks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_PreserveTabs(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;set_UseParagraphOutlineLevel(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;First<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Second<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Third<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fourth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Intense<sp/>Quote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>headings<sp/>will<sp/>have<sp/>the<sp/>page<sp/>numbers<sp/>omitted<sp/>because<sp/>they<sp/>are<sp/>within<sp/>the<sp/>&quot;2-5&quot;<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Fifth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Sixth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>&quot;Heading<sp/>4&quot;<sp/>is<sp/>outside<sp/>of<sp/>the<sp/>&quot;1-3&quot;<sp/>range<sp/>that<sp/>we<sp/>have<sp/>set<sp/>earlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Seventh<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;EndBookmark(u</highlight><highlight class="stringliteral">&quot;MyBookmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Paragraph<sp/>text.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>does<sp/>not<sp/>appear<sp/>because<sp/>it<sp/>is<sp/>outside<sp/>the<sp/>bookmark<sp/>specified<sp/>by<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>InsertNewPageWithHeading(builder,<sp/>u</highlight><highlight class="stringliteral">&quot;Eighth<sp/>entry&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Heading<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\b<sp/>MyBookmark<sp/>\\t<sp/>\&quot;Quote;<sp/>6;<sp/>Intense<sp/>Quote;<sp/>7\&quot;<sp/>\\o<sp/>1-3<sp/>\\n<sp/>2-5<sp/>\\p<sp/>-<sp/>\\h<sp/>\\x<sp/>\\w&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field-&gt;UpdatePageNumbers();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertNewPageWithHeading(SharedPtr&lt;DocumentBuilder&gt;<sp/>builder,<sp/>String<sp/>captionText,<sp/>String<sp/>styleName)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>originalStyle<sp/>=<sp/>builder-&gt;get_ParagraphFormat()-&gt;get_StyleName();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(styleName));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;Writeln(captionText);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_ParagraphFormat()-&gt;set_Style(builder-&gt;get_Document()-&gt;get_Styles()-&gt;idx_get(originalStyle));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Shows how to populate a TOC field with entries using SEQ fields. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>TOC<sp/>field<sp/>can<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>its<sp/>table<sp/>of<sp/>contents<sp/>for<sp/>each<sp/>SEQ<sp/>field<sp/>found<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>entry<sp/>contains<sp/>the<sp/>paragraph<sp/>that<sp/>includes<sp/>the<sp/>SEQ<sp/>field<sp/>and<sp/>the<sp/>page&apos;s<sp/>number<sp/>that<sp/>the<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldToc<sp/>=<sp/>System::DynamicCast&lt;FieldToc&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca951e4a34dbade8f358c5f9881337a0a1" kindref="member" tooltip="Specifies the TOC field.">FieldType::FieldTOC</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>display<sp/>a<sp/>count<sp/>that<sp/>increments<sp/>at<sp/>each<sp/>SEQ<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>also<sp/>maintain<sp/>separate<sp/>counts<sp/>for<sp/>each<sp/>unique<sp/>named<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>identified<sp/>by<sp/>the<sp/>SEQ<sp/>field&apos;s<sp/>&quot;SequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>to<sp/>name<sp/>a<sp/>main<sp/>sequence<sp/>for<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now,<sp/>this<sp/>TOC<sp/>will<sp/>only<sp/>create<sp/>entries<sp/>out<sp/>of<sp/>SEQ<sp/>fields<sp/>with<sp/>their<sp/>&quot;SequenceIdentifier&quot;<sp/>set<sp/>to<sp/>&quot;MySequence&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_TableOfFiguresLabel(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>name<sp/>another<sp/>SEQ<sp/>field<sp/>sequence<sp/>in<sp/>the<sp/>&quot;PrefixedSequenceIdentifier&quot;<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SEQ<sp/>fields<sp/>from<sp/>this<sp/>prefix<sp/>sequence<sp/>will<sp/>not<sp/>create<sp/>TOC<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Every<sp/>TOC<sp/>entry<sp/>created<sp/>from<sp/>a<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>will<sp/>now<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>on<sp/>at<sp/>the<sp/>primary<sp/>sequence<sp/>SEQ<sp/>field<sp/>that<sp/>made<sp/>the<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_PrefixedSequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>the<sp/>prefix<sp/>sequence<sp/>count<sp/>immediately<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>page<sp/>number<sp/>that<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>specify<sp/>a<sp/>custom<sp/>separator<sp/>that<sp/>will<sp/>appear<sp/>between<sp/>these<sp/>two<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldToc-&gt;set_SequenceSeparator(u</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>TOC<sp/><sp/>\\c<sp/>MySequence<sp/>\\s<sp/>PrefixSequence<sp/>\\d<sp/>&gt;&quot;</highlight><highlight class="normal">,<sp/>fieldToc-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>using<sp/>SEQ<sp/>fields<sp/>to<sp/>populate<sp/>this<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>prefix<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>field<sp/>will<sp/>increment<sp/>the<sp/>SEQ<sp/>sequence<sp/>count<sp/>for<sp/>the<sp/>&quot;PrefixSequence&quot;<sp/>by<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>field<sp/>does<sp/>not<sp/>belong<sp/>to<sp/>the<sp/>main<sp/>sequence<sp/>identified</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>&quot;TableOfFiguresLabel&quot;<sp/>property<sp/>of<sp/>the<sp/>TOC,<sp/>it<sp/>will<sp/>not<sp/>appear<sp/>as<sp/>an<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>PrefixSequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Inserting<sp/>a<sp/>SEQ<sp/>field<sp/>that<sp/>belongs<sp/>to<sp/>the<sp/>TOC&apos;s<sp/>main<sp/>sequence:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>SEQ<sp/>field<sp/>will<sp/>create<sp/>an<sp/>entry<sp/>in<sp/>the<sp/>TOC.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TOC<sp/>entry<sp/>will<sp/>contain<sp/>the<sp/>paragraph<sp/>that<sp/>the<sp/>SEQ<sp/>field<sp/>is<sp/>in<sp/>and<sp/>the<sp/>number<sp/>of<sp/>the<sp/>page<sp/>that<sp/>it<sp/>appears<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>entry<sp/>will<sp/>also<sp/>display<sp/>the<sp/>count<sp/>that<sp/>the<sp/>prefix<sp/>sequence<sp/>is<sp/>currently<sp/>at,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>separated<sp/>from<sp/>the<sp/>page<sp/>number<sp/>by<sp/>the<sp/>value<sp/>in<sp/>the<sp/>TOC&apos;s<sp/>SeqenceSeparator<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;PrefixSequence&quot;<sp/>count<sp/>is<sp/>at<sp/>1,<sp/>this<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>2,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>separator<sp/>is<sp/>&quot;&gt;&quot;,<sp/>so<sp/>entry<sp/>will<sp/>display<sp/>&quot;1&gt;2&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;First<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>SEQ<sp/><sp/>MySequence&quot;</highlight><highlight class="normal">,<sp/>fieldSeq-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>page,<sp/>advance<sp/>the<sp/>prefix<sp/>sequence<sp/>by<sp/>2,<sp/>and<sp/>insert<sp/>a<sp/>SEQ<sp/>field<sp/>to<sp/>create<sp/>a<sp/>TOC<sp/>entry<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>prefix<sp/>sequence<sp/>is<sp/>now<sp/>at<sp/>2,<sp/>and<sp/>the<sp/>main<sp/>sequence<sp/>SEQ<sp/>field<sp/>is<sp/>on<sp/>page<sp/>3,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>TOC<sp/>entry<sp/>will<sp/>display<sp/>&quot;2&gt;3&quot;<sp/>at<sp/>its<sp/>page<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertBreak(<ref refid="namespace_aspose_1_1_words_1a7e027e6d9b3949cd64616f40db971a2ea63be6634e47079da3b4bf81bb9f8cf37" kindref="member" tooltip="Explicit page break.">BreakType::PageBreak</ref>);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;PrefixSequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">fieldSeq<sp/>=<sp/>System::DynamicCast&lt;FieldSeq&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edecaf6d4d71e57b0ad1249a8662bce8b0e99" kindref="member" tooltip="Specifies the SEQ field.">FieldType::FieldSequence</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;Second<sp/>TOC<sp/>entry,<sp/>MySequence<sp/>#&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fieldSeq-&gt;set_SequenceIdentifier(u</highlight><highlight class="stringliteral">&quot;MySequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.TOC.SEQ.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldToc</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="5">
        <label>Aspose::Words::Fields::ITocEntryExtractorOptions</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Fields::FieldToc</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::IFieldCodeTokenInfoProvider</label>
      </node>
      <node id="5">
        <label>Aspose::Words::Fields::ITocEntryExtractorOptions</label>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/FieldToc.h" line="217" column="1" bodyfile="Aspose.Words.Cpp/Fields/FieldToc.h" bodystart="218" bodyend="1576"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a45f95292400de8d71d27fb8e4bbf8771" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1acbfc6184b7df3f16758c7a4aa068256b" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>BaseType1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adb2e18779cdf398d918685d36ba4e7d0" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>BaseType2</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a8a6a2d4eae268a48d148e9ce4ddc5ac1" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>BeforeUnlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad620c52941a1bc45ac619accafcee0af" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>FieldToc</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a6392544bf1e314e3ce7c503dabd15503" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_AreCustomStylesSpecified</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3e5bd0a36b06a16bb8a5e5014842bd2c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_BookmarkName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a5945554a551d6032721001db9de4e403" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_CaptionlessTableOfFiguresLabel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ada686302112e553a98b6f1d46640d059" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_CustomStyles</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a5c2d01019c517ea8098f296903e37a34" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_DisplayResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aa4bfe541f4f2096d3115bfbb96a90a42" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_End</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" prot="public" virt="non-virtual" ambiguityscope="Aspose::Words::Fields::Field::"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_End</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aadfbf64b9be67659472bd92df8bddd80" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_EntryIdentifier</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a21b648994a094fb702498d112cbcde97" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_EntryLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a59cec17a4bb06d80f8349ffb72087750" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_EntrySeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a5f04451ba7a9b2b028636a14b9c75c76" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_EntryTypeCore</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a399c14463916724cac0015b430175589" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_FieldEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abc40cddc1325f7fec80d8530e5287448" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_FieldStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a090c5d09915e2ead6cc54fda736dd7c2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_Format</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3d00c48caccf86c124ffe7504f3d44e9" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_HeadingLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a77d3040d6cb4d9533610f1d6313dbb96" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_HeadingLevelRangeParsed</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab0cb1f3398fdf968b10fba2cab85279e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_HideInWebLayout</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad4c2781e38709dd8b690ee7dcb97816c" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IncludeRefDocFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a79b23512f8614adeaf0e3206ede8c3b8" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IncludeTocEntryFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a984778f060846191ce82d06c4a6ab52e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_InsertHyperlinks</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a85a00044ae197f433eac1c8e70261e46" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IsBookmarkRangeSpecified</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a46425f3a187899e14b7a28339983070c" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IsEntryLevelRangeSpecified</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a571d28b5aecabe1ef65843218e79665d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IsHeadingLevelRangeSpecified</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a48408763b447b736d4bfa2f118be5ea1" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_IsTableOfFigures</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adcc1bb79bc6ca532b83b09a03aa1c247" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_PageNumberOmittingLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a1dd00e44b79203f4ef6d0368759f46b9" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_PrefixedSequenceIdentifier</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ad24bea7f201aca340b4f6dbe4c42cfbf" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_PreserveLineBreaks</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a7c61e2bc5a1ca81cdc3d54794eb631a4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_PreserveTabs</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ae655ac7d8baa7808499cc8b21f5d8a10" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_SequenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1abcd04bcd67f00951db1500749952c8f6" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_SkipTables</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1af4dd510cbcba867dc8e2880085a1865b" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_Start</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" prot="public" virt="non-virtual" ambiguityscope="Aspose::Words::Fields::Field::"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_Start</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a1134a42062e3d37e6361ae847825fd2d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_TableOfFiguresLabel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a15ed39a275955b4fa46d4332614496f1" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_TocEntryLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad68196653db5cfca30c1ba18ed44c76e" prot="public" virt="virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9fbf76cc35d49379847985dd0609b534" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>get_UseParagraphOutlineLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a578378121cced134f079765f19f64498" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ae81561c740d4b335e66741aae1bdd686" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>GetLevelForCustomStyle</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a4e3d8e2cef42dff8102cd4d29a2f5219" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>GetRangeBookmark</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab0fdea8f1e54134247462f90e3b0e0b4" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>GetSwitchType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab1786daadfaf7a663924254cc8d208ad" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>GetUpdateStage</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a991f7b95d1a1079aa5f8b25a0b586c1f" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adc48a4498cf0cb6a7eadd5fc4ec31f78" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a8f1051a59437ef7ec72a18ac3594e79c" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad26a8021af3dbdc5bf0a1360a201222f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9d7d45412464f954d52351b86c5aba81" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1af8ce41f2fbf23beb28422191e5ce89d1" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_BookmarkName</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a68b8833c9328f9dc72e4592155aaf141" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_CaptionlessTableOfFiguresLabel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1adfcef5854fcf6f7d222574704353997b" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_CustomStyles</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a3fe821b0cc70a4fe9cdedd5dad8bbedb" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_EntryIdentifier</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9ac3ef89888ab188eed7a8d5a9948b21" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_EntryLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a2b2a309daeedcaf522cf9ff254d77349" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_EntrySeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a46dc763f98b71b886c875b4dd4f54e01" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_HeadingLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a71294d5de8aa99de92a4e63989117341" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_HideInWebLayout</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a36dd5bc9837356664f898be9a93b1ba6" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_InsertHyperlinks</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa637d825865724665fb8ed856e664d95" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ac70b125adbe7f0ba5b889280cd282c47" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a165f748dd5ba33844f1d765f6c710f88" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aa30e1e91ac68bbfd76542dce5ec4ff8e" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_PageNumberOmittingLevelRange</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a81715e0cfa35a125ba6a619eb189de83" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_PrefixedSequenceIdentifier</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ac95d7792de25d79ed23adfe9df7de566" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_PreserveLineBreaks</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a61e2268fbe6f21061de6bbeec3a0b0ad" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_PreserveTabs</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa6af1e900c84ae806f071098dfe8f087" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a920fa197f3edda3ca8bdb53c8fbbec1c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_SequenceSeparator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ac138cb18e3f955f32f52ef9cb89d4414" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_TableOfFiguresLabel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a2fcedf2b1ed89ad17aafa64b7267a2af" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>set_UseParagraphOutlineLevel</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a0f910517ab22a5c3a90ebb46feabbee6" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a6dc4e34a5823a0d091686fed7419f0fc" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9f908becb16b26bed76d58dbcee9929" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>Unlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a1298d7daa07c863bf97cb3f37a4d7a99" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9b585e6d641cefb6d611262c87aca65b" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>UpdateCore</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1aec96e3a205615a7b0373a9f223d23fa7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>UpdatePageNumbers</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a88b5f7da0dc54701fad498874f72fcb1" prot="private" virt="virtual"><scope>Aspose::Words::Fields::FieldToc</scope><name>~FieldToc</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
