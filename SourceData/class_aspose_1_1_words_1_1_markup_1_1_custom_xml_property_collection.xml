<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Markup::CustomXmlPropertyCollection</compoundname>
    <basecompoundref refid="class/system.collections.generic.i_enumerable/" prot="public" virt="non-virtual">System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; &gt;</basecompoundref>
    <includes refid="_custom_xml_property_collection_8h" local="no">Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a3b41c8ca57d98fdd537738b4c482875e" prot="private" static="no">
        <type><ref refid="class/system.collections.generic.i_enumerable/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Collections::Generic::IEnumerable</ref>&lt; <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property" kindref="compound">Aspose::Words::Markup::CustomXmlProperty</ref> &gt; &gt;</type>
        <definition>typedef System::Collections::Generic::IEnumerable&lt;System::SharedPtr&lt;Aspose::Words::Markup::CustomXmlProperty&gt; &gt; Aspose::Words::Markup::CustomXmlPropertyCollection::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="107" column="55" bodyfile="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a8de8f05d7079615cafec7f7aa5c7a53c" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection" kindref="compound">CustomXmlPropertyCollection</ref></type>
        <definition>typedef CustomXmlPropertyCollection Aspose::Words::Markup::CustomXmlPropertyCollection::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="106" column="41" bodyfile="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1ac1720459a9703a87ccb2730dbd97a864" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.collections.generic.i_enumerable/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Markup::CustomXmlPropertyCollection::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="109" column="37" bodyfile="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a86ced6a465e32f515e2f83ebed87cbd0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Markup::CustomXmlPropertyCollection::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="700" column="23" bodyfile="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" bodystart="700" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1add7c19a1f55d69833ea4b76e0833bea7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Markup::CustomXmlPropertyCollection::CustomXmlPropertyCollection</definition>
        <argsstring>()</argsstring>
        <name>CustomXmlPropertyCollection</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::CustomXmlPropertyCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="694" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a758fedfec0230fa259b92f6f2348703a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Markup::CustomXmlPropertyCollection::~CustomXmlPropertyCollection</definition>
        <argsstring>()</argsstring>
        <name>~CustomXmlPropertyCollection</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::~CustomXmlPropertyCollection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="696" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a2ca2fc0d747f67a4a5b8f09ed9cf6557" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Markup::CustomXmlPropertyCollection::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="110" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a2ba079bb2a5a49b2867dfa9ea83d0a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::CustomXmlPropertyCollection::Add</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; &amp;property)</argsstring>
        <name>Add</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::Add</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property" kindref="compound">Aspose::Words::Markup::CustomXmlProperty</ref> &gt; &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Adds a property to the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>The property to add.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="398" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a0b31240703d912076b1d91a0c092a62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::CustomXmlPropertyCollection::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::Clear</qualifiedname>
        <briefdescription>
<para>Removes all elements from the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="690" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1aa582cd5955bc5b5175271807cde878fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Markup::CustomXmlPropertyCollection::Contains</definition>
        <argsstring>(const System::String &amp;name)</argsstring>
        <name>Contains</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::Contains</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Determines whether the collection contains a property with the given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Case-sensitive name of the property to locate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the item is found in the collection; otherwise, false.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="458" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a7236355bd111cc230b8c5d2c92db2b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Markup::CustomXmlPropertyCollection::get_Count</definition>
        <argsstring>()</argsstring>
        <name>get_Count</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::get_Count</qualifiedname>
        <briefdescription>
<para>Gets the number of elements contained in the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="168" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1af6c7c0b0d644abe3b1b2d5a790c0b8ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.collections.generic.i_enumerator/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Collections::Generic::IEnumerator</ref>&lt; <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property" kindref="compound">Aspose::Words::Markup::CustomXmlProperty</ref> &gt; &gt; &gt;</type>
        <definition>System::SharedPtr&lt; System::Collections::Generic::IEnumerator&lt; System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; &gt; &gt; Aspose::Words::Markup::CustomXmlPropertyCollection::GetEnumerator</definition>
        <argsstring>() override</argsstring>
        <name>GetEnumerator</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::GetEnumerator</qualifiedname>
        <briefdescription>
<para>Returns an enumerator object that can be used to iterate over all items in the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="340" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a080074c1e30d5938ae9ebdecef8bee33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property" kindref="compound">Aspose::Words::Markup::CustomXmlProperty</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; Aspose::Words::Markup::CustomXmlPropertyCollection::idx_get</definition>
        <argsstring>(const System::String &amp;name)</argsstring>
        <name>idx_get</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::idx_get</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets a property with the specified name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Case-sensitive name of the property to locate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="226" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a31b7f9e88219b62dead5b16fdbf953b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property" kindref="compound">Aspose::Words::Markup::CustomXmlProperty</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; Aspose::Words::Markup::CustomXmlPropertyCollection::idx_get</definition>
        <argsstring>(int32_t index)</argsstring>
        <name>idx_get</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::idx_get</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets a property at the specified index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero-based index of the property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="284" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1af42a6d06b2808f82fac8fa4555dee7d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Markup::CustomXmlPropertyCollection::IndexOfKey</definition>
        <argsstring>(const System::String &amp;name)</argsstring>
        <name>IndexOfKey</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::IndexOfKey</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the zero-based index of the specified property in the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The case-sensitive name of the property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The zero based index. Negative value if not found.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="518" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a5d09d6382664732061332172d0da4f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::CustomXmlPropertyCollection::Remove</definition>
        <argsstring>(const System::String &amp;name)</argsstring>
        <name>Remove</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::Remove</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes a property with the specified name from the collection. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The case-sensitive name of the property.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="576" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a3615bd08363ae0a3eda0de9130553c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Markup::CustomXmlPropertyCollection::RemoveAt</definition>
        <argsstring>(int32_t index)</argsstring>
        <name>RemoveAt</name>
        <qualifiedname>Aspose::Words::Markup::CustomXmlPropertyCollection::RemoveAt</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a property at the specified index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="634" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a collection of custom XML attributes or smart tag properties. </para>
    </briefdescription>
    <detaileddescription>
<para>Items are <ref refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property" kindref="compound">CustomXmlProperty</ref> objects.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with smart tag properties to get in depth information about smart tags. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Smart<sp/>tags.doc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>smart<sp/>tag<sp/>appears<sp/>in<sp/>a<sp/>document<sp/>with<sp/>Microsoft<sp/>Word<sp/>recognizes<sp/>a<sp/>part<sp/>of<sp/>its<sp/>text<sp/>as<sp/>some<sp/>form<sp/>of<sp/>data,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>a<sp/>name,<sp/>date,<sp/>or<sp/>address,<sp/>and<sp/>converts<sp/>it<sp/>to<sp/>a<sp/>hyperlink<sp/>that<sp/>displays<sp/>a<sp/>purple<sp/>dotted<sp/>underline.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>Word<sp/>2003,<sp/>we<sp/>can<sp/>enable<sp/>smart<sp/>tags<sp/>via<sp/>&quot;Tools&quot;<sp/>-&gt;<sp/>&quot;AutoCorrect<sp/>options...&quot;<sp/>-&gt;<sp/>&quot;SmartTags&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>our<sp/>input<sp/>document,<sp/>there<sp/>are<sp/>three<sp/>objects<sp/>that<sp/>Microsoft<sp/>Word<sp/>registered<sp/>as<sp/>smart<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Smart<sp/>tags<sp/>may<sp/>be<sp/>nested,<sp/>so<sp/>this<sp/>collection<sp/>contains<sp/>more.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ArrayPtr&lt;SharedPtr&lt;SmartTag&gt;&gt;<sp/>smartTags<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a3445a82c788691505cbd9d0807f5e2c9" kindref="member" tooltip="A smart tag around one or more inline structures (runs, images, fields,etc.) within a paragraph.">NodeType::SmartTag</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;LINQ_OfType&lt;SharedPtr&lt;SmartTag&gt;&gt;()-&gt;LINQ_ToArray();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>smartTags-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;Properties&quot;<sp/>member<sp/>of<sp/>a<sp/>smart<sp/>tag<sp/>contains<sp/>its<sp/>metadata,<sp/>which<sp/>will<sp/>be<sp/>different<sp/>for<sp/>each<sp/>type<sp/>of<sp/>smart<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>properties<sp/>of<sp/>a<sp/>&quot;date&quot;-type<sp/>smart<sp/>tag<sp/>contain<sp/>its<sp/>year,<sp/>month,<sp/>and<sp/>day.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CustomXmlPropertyCollection&gt;<sp/>properties<sp/>=<sp/>smartTags[7]-&gt;get_Properties();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;CustomXmlProperty&gt;&gt;&gt;<sp/>enumerator<sp/>=<sp/>properties-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(enumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>enumerator-&gt;get_Current()-&gt;get_Value()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>enumerator-&gt;get_Current()-&gt;get_Uri());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>access<sp/>the<sp/>properties<sp/>in<sp/>various<sp/>ways,<sp/>such<sp/>as<sp/>a<sp/>key-value<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(properties-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;22&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(u</highlight><highlight class="stringliteral">&quot;Day&quot;</highlight><highlight class="normal">)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;2003&quot;</highlight><highlight class="normal">,<sp/>properties-&gt;idx_get(2)-&gt;get_Value());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>properties-&gt;IndexOfKey(u</highlight><highlight class="stringliteral">&quot;Month&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>ways<sp/>of<sp/>removing<sp/>elements<sp/>from<sp/>the<sp/>properties<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Remove<sp/>by<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;RemoveAt(3);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Remove<sp/>by<sp/>name:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Remove(u</highlight><highlight class="stringliteral">&quot;Year&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>properties-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Clear<sp/>the<sp/>entire<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">properties-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>properties-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Markup::CustomXmlPropertyCollection</label>
        <link refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; &gt;</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Markup::CustomXmlPropertyCollection</label>
        <link refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Collections::Generic::IEnumerable&lt; System::SharedPtr&lt; Aspose::Words::Markup::CustomXmlProperty &gt; &gt;</label>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" line="104" column="1" bodyfile="Aspose.Words.Cpp/Markup/CustomXmlPropertyCollection.h" bodystart="105" bodyend="702"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a2ba079bb2a5a49b2867dfa9ea83d0a17" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>Add</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a3b41c8ca57d98fdd537738b4c482875e" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a0b31240703d912076b1d91a0c092a62d" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>Clear</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1aa582cd5955bc5b5175271807cde878fe" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>Contains</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1add7c19a1f55d69833ea4b76e0833bea7" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>CustomXmlPropertyCollection</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a7236355bd111cc230b8c5d2c92db2b05" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>get_Count</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1af6c7c0b0d644abe3b1b2d5a790c0b8ef" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>GetEnumerator</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a080074c1e30d5938ae9ebdecef8bee33" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>idx_get</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a31b7f9e88219b62dead5b16fdbf953b0" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>idx_get</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1af42a6d06b2808f82fac8fa4555dee7d1" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>IndexOfKey</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a86ced6a465e32f515e2f83ebed87cbd0" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a5d09d6382664732061332172d0da4f10" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a3615bd08363ae0a3eda0de9130553c64" prot="public" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>RemoveAt</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a2ca2fc0d747f67a4a5b8f09ed9cf6557" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a8de8f05d7079615cafec7f7aa5c7a53c" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1ac1720459a9703a87ccb2730dbd97a864" prot="private" virt="non-virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_markup_1_1_custom_xml_property_collection_1a758fedfec0230fa259b92f6f2348703a" prot="private" virt="virtual"><scope>Aspose::Words::Markup::CustomXmlPropertyCollection</scope><name>~CustomXmlPropertyCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
