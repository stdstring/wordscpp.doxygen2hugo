<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_revision" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Revision</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_revision_8h" local="no">Aspose.Words.Cpp/Revision.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_revision_1a19b27cf2f969dbcdeb64bc99fc498552" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Revision::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Revision::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="121" column="28" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_revision_1a993f686a384df23df8c752fa28ca2fd7" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_revision" kindref="compound">Revision</ref></type>
        <definition>typedef Revision Aspose::Words::Revision::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Revision::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="120" column="22" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_revision_1a5659bf6f412d957bbc613b9951097478" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Revision::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Revision::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="123" column="37" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_revision_1a74b6a31e1b1ec0cede5489779c01ea01" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Revision::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Revision::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="748" column="23" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_revision_1a46ad79a861b716a33b0a8ba467812f86" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Revision::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Revision::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="749" column="23" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="749" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_revision_1a87df7c84d74cba1a11f58e4178108823" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Revision::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Revision::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="750" column="23" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_revision_1a3be953b735ab7ab5fc974f887eee4c11" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Revision::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Revision::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="751" column="23" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_revision_1acfc488399717445ff62fc621d63ec26c" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Revision::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Revision::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="752" column="23" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_revision_1a0af67efb5fcc5d048db3e82987fde748" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.weak_ptr/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::WeakPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::WeakPtr&lt;System::Object&gt; Aspose::Words::Revision::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Revision::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="753" column="21" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="753" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1aad6f858319e34b64e89eedb10ac05879" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Revision::~Revision</definition>
        <argsstring>()</argsstring>
        <name>~Revision</name>
        <qualifiedname>Aspose::Words::Revision::~Revision</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="744" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a6c058db53bfbe077ffacf80d70f859ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Revision::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Revision::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="124" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a7b7ab08e3ed29d366c720286b2f882f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Revision::Accept</definition>
        <argsstring>()</argsstring>
        <name>Accept</name>
        <qualifiedname>Aspose::Words::Revision::Accept</qualifiedname>
        <briefdescription>
<para>Accepts this revision. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="658" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a53541ef4d51571bea5e3c683ba94a05f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Revision::get_Author</definition>
        <argsstring>()</argsstring>
        <name>get_Author</name>
        <qualifiedname>Aspose::Words::Revision::get_Author</qualifiedname>
        <briefdescription>
<para>Gets or sets the author of this revision. Can not be empty string or null. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="208" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a442681d24314c2321f176688726c4ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.date_time/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
        <definition>System::DateTime Aspose::Words::Revision::get_DateTime</definition>
        <argsstring>()</argsstring>
        <name>get_DateTime</name>
        <qualifiedname>Aspose::Words::Revision::get_DateTime</qualifiedname>
        <briefdescription>
<para>Gets or sets the date/time of this revision. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="293" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a443f450527af41bd79cf79ce79f2d565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_revision_group" kindref="compound">Aspose::Words::RevisionGroup</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::RevisionGroup &gt; Aspose::Words::Revision::get_Group</definition>
        <argsstring>()</argsstring>
        <name>get_Group</name>
        <qualifiedname>Aspose::Words::Revision::get_Group</qualifiedname>
        <briefdescription>
<para>Gets the revision group. Returns null if the revision does not belong to any group. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="576" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a75f98556aac374d21bae0f603d8dac95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Node &gt; Aspose::Words::Revision::get_ParentNode</definition>
        <argsstring>()</argsstring>
        <name>get_ParentNode</name>
        <qualifiedname>Aspose::Words::Revision::get_ParentNode</qualifiedname>
        <briefdescription>
<para>Gets the immediate parent node (owner) of this revision. This property will work for any revision type other than <ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba9c443956e1fce4c1c19d216b6ef77260" kindref="member">StyleDefinitionChange</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to determine the revision type of an inline node. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Revision<sp/>runs.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>edit<sp/>the<sp/>document<sp/>while<sp/>the<sp/>&quot;Track<sp/>Changes&quot;<sp/>option,<sp/>found<sp/>in<sp/>via<sp/>Review<sp/>-&gt;<sp/>Tracking,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>turned<sp/>on<sp/>in<sp/>Microsoft<sp/>Word,<sp/>the<sp/>changes<sp/>we<sp/>apply<sp/>count<sp/>as<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>editing<sp/>a<sp/>document<sp/>using<sp/>Aspose.Words,<sp/>we<sp/>can<sp/>begin<sp/>tracking<sp/>revisions<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>invoking<sp/>the<sp/>document&apos;s<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>and<sp/>stop<sp/>tracking<sp/>by<sp/>using<sp/>the<sp/>&quot;StopTrackRevisions&quot;<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>either<sp/>accept<sp/>revisions<sp/>to<sp/>assimilate<sp/>them<sp/>into<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>reject<sp/>them<sp/>to<sp/>change<sp/>the<sp/>proposed<sp/>change<sp/>effectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>parent<sp/>node<sp/>of<sp/>a<sp/>revision<sp/>is<sp/>the<sp/>run<sp/>that<sp/>the<sp/>revision<sp/>concerns.<sp/>A<sp/>Run<sp/>is<sp/>an<sp/>Inline<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>run<sp/>=<sp/>System::DynamicCast&lt;Run&gt;(doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_ParentNode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Paragraph&gt;<sp/>firstParagraph<sp/>=<sp/>run-&gt;get_ParentParagraph();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;RunCollection&gt;<sp/>runs<sp/>=<sp/>firstParagraph-&gt;get_Runs();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>runs-&gt;ToArray()-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>five<sp/>types<sp/>of<sp/>revisions<sp/>that<sp/>can<sp/>flag<sp/>an<sp/>Inline<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>An<sp/>&quot;insert&quot;<sp/>revision:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>revision<sp/>occurs<sp/>when<sp/>we<sp/>insert<sp/>text<sp/>while<sp/>tracking<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(runs-&gt;idx_get(2)-&gt;get_IsInsertRevision());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>A<sp/>&quot;format&quot;<sp/>revision:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>revision<sp/>occurs<sp/>when<sp/>we<sp/>change<sp/>the<sp/>formatting<sp/>of<sp/>text<sp/>while<sp/>tracking<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(runs-&gt;idx_get(2)-&gt;get_IsFormatRevision());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>A<sp/>&quot;move<sp/>from&quot;<sp/>revision:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>highlight<sp/>text<sp/>in<sp/>Microsoft<sp/>Word,<sp/>and<sp/>then<sp/>drag<sp/>it<sp/>to<sp/>a<sp/>different<sp/>place<sp/>in<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>tracking<sp/>changes,<sp/>two<sp/>revisions<sp/>appear.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;move<sp/>from&quot;<sp/>revision<sp/>is<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>text<sp/>originally<sp/>before<sp/>we<sp/>moved<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(runs-&gt;idx_get(4)-&gt;get_IsMoveFromRevision());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>A<sp/>&quot;move<sp/>to&quot;<sp/>revision:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;move<sp/>to&quot;<sp/>revision<sp/>is<sp/>the<sp/>text<sp/>that<sp/>we<sp/>moved<sp/>in<sp/>its<sp/>new<sp/>position<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Move<sp/>from&quot;<sp/>and<sp/>&quot;move<sp/>to&quot;<sp/>revisions<sp/>appear<sp/>in<sp/>pairs<sp/>for<sp/>every<sp/>move<sp/>revision<sp/>we<sp/>carry<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>a<sp/>move<sp/>revision<sp/>deletes<sp/>the<sp/>&quot;move<sp/>from&quot;<sp/>revision<sp/>and<sp/>its<sp/>text,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>keeps<sp/>the<sp/>text<sp/>from<sp/>the<sp/>&quot;move<sp/>to&quot;<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>a<sp/>move<sp/>revision<sp/>conversely<sp/>keeps<sp/>the<sp/>&quot;move<sp/>from&quot;<sp/>revision<sp/>and<sp/>deletes<sp/>the<sp/>&quot;move<sp/>to&quot;<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(runs-&gt;idx_get(1)-&gt;get_IsMoveToRevision());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>5<sp/>-<sp/><sp/>A<sp/>&quot;delete&quot;<sp/>revision:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>revision<sp/>occurs<sp/>when<sp/>we<sp/>delete<sp/>text<sp/>while<sp/>tracking<sp/>changes.<sp/>When<sp/>we<sp/>delete<sp/>text<sp/>like<sp/>this,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>stay<sp/>in<sp/>the<sp/>document<sp/>as<sp/>a<sp/>revision<sp/>until<sp/>we<sp/>either<sp/>accept<sp/>the<sp/>revision,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>delete<sp/>the<sp/>text<sp/>for<sp/>good,<sp/>or<sp/>reject<sp/>the<sp/>revision,<sp/>which<sp/>will<sp/>keep<sp/>the<sp/>text<sp/>we<sp/>deleted<sp/>where<sp/>it<sp/>was.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(runs-&gt;idx_get(5)-&gt;get_IsDeleteRevision());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="434" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1afcbbb06f29655a8d86a983f8bac65d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_style" kindref="compound">Aspose::Words::Style</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Style &gt; Aspose::Words::Revision::get_ParentStyle</definition>
        <argsstring>()</argsstring>
        <name>get_ParentStyle</name>
        <qualifiedname>Aspose::Words::Revision::get_ParentStyle</qualifiedname>
        <briefdescription>
<para>Gets the immediate parent style (owner) of this revision. This property will work for only for the <ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba9c443956e1fce4c1c19d216b6ef77260" kindref="member">StyleDefinitionChange</ref> revision type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a document&apos;s collection of revisions. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Revisions.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;RevisionCollection&gt;<sp/>revisions<sp/>=<sp/>doc-&gt;get_Revisions();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>collection<sp/>itself<sp/>has<sp/>a<sp/>collection<sp/>of<sp/>revision<sp/>groups.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>group<sp/>is<sp/>a<sp/>sequence<sp/>of<sp/>adjacent<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>revisions-&gt;get_Groups()-&gt;get_Count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>revision<sp/>groups:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>collection<sp/>of<sp/>groups<sp/>and<sp/>print<sp/>the<sp/>text<sp/>that<sp/>the<sp/>revision<sp/>concerns.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;RevisionGroup&gt;&gt;&gt;<sp/>e<sp/>=<sp/>revisions-&gt;get_Groups()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(String::Format(u</highlight><highlight class="stringliteral">&quot;\tGroup<sp/>type<sp/>\&quot;{0}\&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>e-&gt;get_Current()-&gt;get_RevisionType())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;author:<sp/>{0},<sp/>contents:<sp/>[{1}]&quot;</highlight><highlight class="normal">,<sp/>e-&gt;get_Current()-&gt;get_Author(),<sp/>e-&gt;get_Current()-&gt;get_Text().Trim()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>Run<sp/>that<sp/>a<sp/>revision<sp/>affects<sp/>gets<sp/>a<sp/>corresponding<sp/>Revision<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>revisions&apos;<sp/>collection<sp/>is<sp/>considerably<sp/>larger<sp/>than<sp/>the<sp/>condensed<sp/>form<sp/>we<sp/>printed<sp/>above,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>how<sp/>many<sp/>Runs<sp/>we<sp/>have<sp/>segmented<sp/>the<sp/>document<sp/>into<sp/>during<sp/>Microsoft<sp/>Word<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>revisions-&gt;get_Count()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>revisions:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;Revision&gt;&gt;&gt;<sp/>e<sp/>=<sp/>revisions-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(e-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>StyleDefinitionChange<sp/>strictly<sp/>affects<sp/>styles<sp/>and<sp/>not<sp/>document<sp/>nodes.<sp/>This<sp/>means<sp/>the<sp/>&quot;ParentStyle&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>property<sp/>will<sp/>always<sp/>be<sp/>in<sp/>use,<sp/>while<sp/>the<sp/>ParentNode<sp/>will<sp/>always<sp/>be<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>all<sp/>other<sp/>changes<sp/>affect<sp/>nodes,<sp/>ParentNode<sp/>will<sp/>conversely<sp/>be<sp/>in<sp/>use,<sp/>and<sp/>ParentStyle<sp/>will<sp/>be<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e-&gt;get_Current()-&gt;get_RevisionType()<sp/>==<sp/><ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba9c443956e1fce4c1c19d216b6ef77260" kindref="member" tooltip="Change of formatting was applied to the parent style.">RevisionType::StyleDefinitionChange</ref>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(String::Format(u</highlight><highlight class="stringliteral">&quot;\tRevision<sp/>type<sp/>\&quot;{0}\&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>e-&gt;get_Current()-&gt;get_RevisionType())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;author:<sp/>{0},<sp/>style:<sp/>[{1}]&quot;</highlight><highlight class="normal">,<sp/>e-&gt;get_Current()-&gt;get_Author(),<sp/>e-&gt;get_Current()-&gt;get_ParentStyle()-&gt;get_Name()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>(String::Format(u</highlight><highlight class="stringliteral">&quot;\tRevision<sp/>type<sp/>\&quot;{0}\&quot;,<sp/>&quot;</highlight><highlight class="normal">,<sp/>e-&gt;get_Current()-&gt;get_RevisionType())<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;author:<sp/>{0},<sp/>contents:<sp/>[{1}]&quot;</highlight><highlight class="normal">,<sp/>e-&gt;get_Current()-&gt;get_Author(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e-&gt;get_Current()-&gt;get_ParentNode()-&gt;GetText().Trim()))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reject<sp/>all<sp/>revisions<sp/>via<sp/>the<sp/>collection,<sp/>reverting<sp/>the<sp/>document<sp/>to<sp/>its<sp/>original<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">revisions-&gt;RejectAll();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>revisions-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="494" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a49cfcafd9de25397cdfdcebd7558328f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2b" kindref="member">Aspose::Words::RevisionType</ref></type>
        <definition>Aspose::Words::RevisionType Aspose::Words::Revision::get_RevisionType</definition>
        <argsstring>() const</argsstring>
        <name>get_RevisionType</name>
        <qualifiedname>Aspose::Words::Revision::get_RevisionType</qualifiedname>
        <briefdescription>
<para>Gets the type of this revision. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="378" column="36"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a4ccb1d9e69a3fb2783da8f8d737151ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Revision::Reject</definition>
        <argsstring>()</argsstring>
        <name>Reject</name>
        <qualifiedname>Aspose::Words::Revision::Reject</qualifiedname>
        <briefdescription>
<para>Reject this revision. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="740" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1a4ee828c476c93d9f7bea4791a39d4ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Revision::set_Author</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Author</name>
        <qualifiedname>Aspose::Words::Revision::set_Author</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_revision_1a53541ef4d51571bea5e3c683ba94a05f" kindref="member">Aspose::Words::Revision::get_Author</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="211" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_revision_1aac6358fa292f81e144bfd2c702fb50ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Revision::set_DateTime</definition>
        <argsstring>(System::DateTime value)</argsstring>
        <name>set_DateTime</name>
        <qualifiedname>Aspose::Words::Revision::set_DateTime</qualifiedname>
        <param>
          <type><ref refid="class/system.date_time/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_revision_1a442681d24314c2321f176688726c4ba4" kindref="member">Aspose::Words::Revision::get_DateTime</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Revision.h" line="296" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a revision (tracked change) in a document node or style. Use <ref refid="class_aspose_1_1_words_1_1_revision_1a49cfcafd9de25397cdfdcebd7558328f" kindref="member">RevisionType</ref> to check the type of this revision. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with revisions in a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normal<sp/>editing<sp/>of<sp/>the<sp/>document<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>register<sp/>our<sp/>edits<sp/>as<sp/>revisions,<sp/>we<sp/>need<sp/>to<sp/>declare<sp/>an<sp/>author,<sp/>and<sp/>then<sp/>start<sp/>tracking<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;StartTrackRevisions(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_HasRevisions());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>flag<sp/>corresponds<sp/>to<sp/>the<sp/>&quot;Review&quot;<sp/>-&gt;<sp/>&quot;Tracking&quot;<sp/>-&gt;<sp/>&quot;Track<sp/>Changes&quot;<sp/>option<sp/>in<sp/>Microsoft<sp/>Word.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>&quot;StartTrackRevisions&quot;<sp/>method<sp/>does<sp/>not<sp/>affect<sp/>its<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>document<sp/>is<sp/>tracking<sp/>revisions<sp/>programmatically<sp/>despite<sp/>it<sp/>having<sp/>a<sp/>value<sp/>of<sp/>&quot;false&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>open<sp/>this<sp/>document<sp/>using<sp/>Microsoft<sp/>Word,<sp/>it<sp/>will<sp/>not<sp/>be<sp/>tracking<sp/>revisions.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(doc-&gt;get_TrackRevisions());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>added<sp/>text<sp/>using<sp/>the<sp/>document<sp/>builder,<sp/>so<sp/>the<sp/>first<sp/>revision<sp/>is<sp/>an<sp/>insertion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Revision&gt;<sp/>revision<sp/>=<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>&quot;</highlight><highlight class="normal">,<sp/>revision-&gt;get_ParentNode()-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2ba3e8592679127932ad5203da071625c5d" kindref="member" tooltip="New content was inserted in the document.">RevisionType::Insertion</ref>,<sp/>revision-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(revision-&gt;get_DateTime().get_Date(),<sp/><ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>().get_Date());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(doc-&gt;get_Revisions()-&gt;get_Groups()-&gt;idx_get(0),<sp/>revision-&gt;get_Group());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>a<sp/>run<sp/>to<sp/>create<sp/>a<sp/>deletion-type<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adding<sp/>a<sp/>new<sp/>revision<sp/>places<sp/>it<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>revision<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2baa1998652b01bdc9e7128734efb804780" kindref="member" tooltip="Content was removed from the document.">RevisionType::Deletion</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>revisions<sp/>show<sp/>up<sp/>in<sp/>the<sp/>document<sp/>body<sp/>even<sp/>before<sp/>we<sp/>accept/reject<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rejecting<sp/>the<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>nodes<sp/>from<sp/>the<sp/>body.<sp/>Conversely,<sp/>nodes<sp/>that<sp/>make<sp/>up<sp/>delete<sp/>revisions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>linger<sp/>in<sp/>the<sp/>document<sp/>until<sp/>we<sp/>accept<sp/>the<sp/>revision.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>does<sp/>not<sp/>count<sp/>as<sp/>a<sp/>revision.<sp/>This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accepting<sp/>the<sp/>delete<sp/>revision<sp/>will<sp/>remove<sp/>its<sp/>parent<sp/>node<sp/>from<sp/>the<sp/>paragraph<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>remove<sp/>the<sp/>collection&apos;s<sp/>revision<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;Accept();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>move<sp/>the<sp/>node<sp/>to<sp/>create<sp/>a<sp/>moving<sp/>revision<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>node<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1);</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>endNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(1)-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Node&gt;<sp/>referenceNode<sp/>=<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_Paragraphs()-&gt;idx_get(0);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node<sp/>!=<sp/>endNode)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Node&gt;<sp/>nextNode<sp/>=<sp/>node-&gt;get_NextSibling();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;InsertBefore(node,<sp/>referenceNode);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>nextNode;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a43309065c8be1f20fae8bd689084cc2badefe967ad0373b2274fc298f19125ca7" kindref="member" tooltip="Content was moved in the document.">RevisionType::Moving</ref>,<sp/>doc-&gt;get_Revisions()-&gt;idx_get(0)-&gt;get_RevisionType());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(8,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#2.\rThis<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>moving<sp/>revision<sp/>is<sp/>now<sp/>at<sp/>index<sp/>1.<sp/>Reject<sp/>the<sp/>revision<sp/>to<sp/>discard<sp/>its<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Revisions()-&gt;idx_get(1)-&gt;Reject();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>doc-&gt;get_Revisions()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>revision<sp/>#1.<sp/>\rThis<sp/>is<sp/>revision<sp/>#2.&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;GetText().Trim());</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Revision</label>
        <link refid="class_aspose_1_1_words_1_1_revision"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Revision</label>
        <link refid="class_aspose_1_1_words_1_1_revision"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Revision.h" line="118" column="1" bodyfile="Aspose.Words.Cpp/Revision.h" bodystart="119" bodyend="755"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_revision_1a7b7ab08e3ed29d366c720286b2f882f6" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>Accept</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a19b27cf2f969dbcdeb64bc99fc498552" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a53541ef4d51571bea5e3c683ba94a05f" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>get_Author</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a442681d24314c2321f176688726c4ba4" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>get_DateTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a443f450527af41bd79cf79ce79f2d565" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>get_Group</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a75f98556aac374d21bae0f603d8dac95" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>get_ParentNode</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1afcbbb06f29655a8d86a983f8bac65d6b" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>get_ParentStyle</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a49cfcafd9de25397cdfdcebd7558328f" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>get_RevisionType</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a74b6a31e1b1ec0cede5489779c01ea01" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a46ad79a861b716a33b0a8ba467812f86" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a87df7c84d74cba1a11f58e4178108823" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a3be953b735ab7ab5fc974f887eee4c11" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1acfc488399717445ff62fc621d63ec26c" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a0af67efb5fcc5d048db3e82987fde748" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a4ccb1d9e69a3fb2783da8f8d737151ca" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>Reject</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a6c058db53bfbe077ffacf80d70f859ac" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a4ee828c476c93d9f7bea4791a39d4ccc" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>set_Author</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1aac6358fa292f81e144bfd2c702fb50ce" prot="public" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>set_DateTime</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a993f686a384df23df8c752fa28ca2fd7" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1a5659bf6f412d957bbc613b9951097478" prot="private" virt="non-virtual"><scope>Aspose::Words::Revision</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_revision_1aad6f858319e34b64e89eedb10ac05879" prot="private" virt="virtual"><scope>Aspose::Words::Revision</scope><name>~Revision</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
