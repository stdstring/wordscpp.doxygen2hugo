<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fonts::FontSubstitutionSettings</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_font_substitution_settings_8h" local="no">Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1ab8accf1e865ea9fe0061c15975b13ad6" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Fonts::FontSubstitutionSettings::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="110" column="28" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1af1ea45d78395291af5becddfc911ada3" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings" kindref="compound">FontSubstitutionSettings</ref></type>
        <definition>typedef FontSubstitutionSettings Aspose::Words::Fonts::FontSubstitutionSettings::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="109" column="38" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a241dd415427b8c72784607ffa2938bd4" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Fonts::FontSubstitutionSettings::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="112" column="37" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1abff76e3d1acdb3263a2f0a00a0c8163e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fonts::FontSubstitutionSettings::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="313" column="23" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a78b5e6824892318861c538de4e28d30b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fonts::FontSubstitutionSettings::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="314" column="23" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a4c75beabff2c2bc63c0152e5c7f60337" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fonts::FontSubstitutionSettings::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="315" column="23" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a118d2037a8522dc73d50daf47efe25f7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fonts::FontSubstitutionSettings::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="316" column="23" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1aaa7d6803b57a34909c3db519f59e0a87" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fonts::FontSubstitutionSettings::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="317" column="23" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a19a1cb47bc30771419c7e96a6f3afed9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fonts::FontSubstitutionSettings::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="113" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1aae432ebf22faea543301009c65b7937d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_default_font_substitution_rule" kindref="compound">Aspose::Words::Fonts::DefaultFontSubstitutionRule</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fonts::DefaultFontSubstitutionRule &gt; Aspose::Words::Fonts::FontSubstitutionSettings::get_DefaultFontSubstitution</definition>
        <argsstring>() const</argsstring>
        <name>get_DefaultFontSubstitution</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::get_DefaultFontSubstitution</qualifiedname>
        <briefdescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_settings" kindref="compound">Settings</ref> related to default font substitution rule. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set the default font substitution rule. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;set_FontSettings(fontSettings);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>default<sp/>substitution<sp/>rule<sp/>within<sp/>FontSettings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>rule<sp/>will<sp/>substitute<sp/>all<sp/>missing<sp/>fonts<sp/>with<sp/>&quot;Times<sp/>New<sp/>Roman&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;DefaultFontSubstitutionRule&gt;<sp/>defaultFontSubstitutionRule<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_DefaultFontSubstitution();</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(defaultFontSubstitutionRule-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">,<sp/>defaultFontSubstitutionRule-&gt;get_DefaultFontName());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>default<sp/>font<sp/>substitute<sp/>to<sp/>&quot;Courier<sp/>New&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">defaultFontSubstitutionRule-&gt;set_DefaultFontName(u</highlight><highlight class="stringliteral">&quot;Courier<sp/>New&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Using<sp/>a<sp/>document<sp/>builder,<sp/>add<sp/>some<sp/>text<sp/>in<sp/>a<sp/>font<sp/>that<sp/>we<sp/>do<sp/>not<sp/>have<sp/>to<sp/>see<sp/>the<sp/>substitution<sp/>take<sp/>place,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>render<sp/>the<sp/>result<sp/>in<sp/>a<sp/>PDF.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Missing<sp/>Font&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Line<sp/>written<sp/>in<sp/>a<sp/>missing<sp/>font,<sp/>which<sp/>will<sp/>be<sp/>substituted<sp/>with<sp/>Courier<sp/>New.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FontSettings.DefaultFontSubstitutionRule.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="270" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a35680f5b2d72fc49f762e451a267db41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule" kindref="compound">Aspose::Words::Fonts::FontConfigSubstitutionRule</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fonts::FontConfigSubstitutionRule &gt; Aspose::Words::Fonts::FontSubstitutionSettings::get_FontConfigSubstitution</definition>
        <argsstring>() const</argsstring>
        <name>get_FontConfigSubstitution</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::get_FontConfigSubstitution</qualifiedname>
        <briefdescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_settings" kindref="compound">Settings</ref> related to font config substitution rule. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows operating system-dependent font config substitution. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FontConfigSubstitutionRule&gt;<sp/>fontConfigSubstitution<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_FontConfigSubstitution();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace/system/_1a9326d04561ea76c1b9ed2866512bce58" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::PlatformID</ref><sp/>pid<sp/>=<sp/><ref refid="struct/system.environment/_1a8e941e4180a8e017dc874d8bddd7f66a" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Environment::get_OSVersion</ref>().get_Platform();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWindows<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32NT)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32S)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32Windows)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pid<sp/>==<sp/>System::PlatformID::WinCE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>FontConfigSubstitutionRule<sp/>object<sp/>works<sp/>differently<sp/>on<sp/>Windows/non-Windows<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>it<sp/>is<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWindows)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinuxOrMac<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Unix)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::MacOSX);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Linux/Mac,<sp/>we<sp/>will<sp/>have<sp/>access<sp/>to<sp/>it,<sp/>and<sp/>will<sp/>be<sp/>able<sp/>to<sp/>perform<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinuxOrMac)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontConfigSubstitution-&gt;ResetCache();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="304" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1aa3ebcf55266bf4ed64cba418e113261d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_info_substitution_rule" kindref="compound">Aspose::Words::Fonts::FontInfoSubstitutionRule</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fonts::FontInfoSubstitutionRule &gt; Aspose::Words::Fonts::FontSubstitutionSettings::get_FontInfoSubstitution</definition>
        <argsstring>() const</argsstring>
        <name>get_FontInfoSubstitution</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::get_FontInfoSubstitution</qualifiedname>
        <briefdescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_settings" kindref="compound">Settings</ref> related to font info substitution rule. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set the property for finding the closest match for a missing font from the available font sources. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnableFontSubstitution()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>text<sp/>formatted<sp/>with<sp/>a<sp/>font<sp/>that<sp/>does<sp/>not<sp/>exist<sp/>in<sp/>any<sp/>of<sp/>our<sp/>font<sp/>sources.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Missing<sp/>font.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>callback<sp/>for<sp/>handling<sp/>font<sp/>substitution<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>substitutionWarningHandler<sp/>=<sp/>MakeObject&lt;ExFontSettings::HandleDocumentSubstitutionWarnings&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_WarningCallback(substitutionWarningHandler);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>default<sp/>font<sp/>name<sp/>and<sp/>enable<sp/>font<sp/>substitution.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_DefaultFontSubstitution()-&gt;set_DefaultFontName(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_FontInfoSubstitution()-&gt;set_Enabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>get<sp/>a<sp/>font<sp/>substitution<sp/>warning<sp/>if<sp/>we<sp/>save<sp/>a<sp/>document<sp/>with<sp/>a<sp/>missing<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;set_FontSettings(fontSettings);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FontSettings.EnableFontSubstitution.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;WarningInfo&gt;&gt;&gt;<sp/>warnings<sp/>=<sp/>substitutionWarningHandler-&gt;FontWarnings-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(warnings-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>warnings-&gt;get_Current()-&gt;get_Description()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>verify<sp/>warnings<sp/>in<sp/>the<sp/>collection<sp/>and<sp/>clear<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1ae78cf72acefc2cbe63016b04f8f44e7caebd9bec4d70abc789d439c1f136b0538" kindref="member" tooltip="Module that builds a document layout.">WarningSource::Layout</ref>,<sp/>substitutionWarningHandler-&gt;FontWarnings-&gt;idx_get(0)-&gt;get_Source());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Font<sp/>&apos;28<sp/>Days<sp/>Later&apos;<sp/>has<sp/>not<sp/>been<sp/>found.<sp/>Using<sp/>&apos;Calibri&apos;<sp/>font<sp/>instead.<sp/>Reason:<sp/>alternative<sp/>name<sp/>from<sp/>document.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>substitutionWarningHandler-&gt;FontWarnings-&gt;idx_get(0)-&gt;get_Description());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>substitutionWarningHandler-&gt;FontWarnings-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(0,<sp/>substitutionWarningHandler-&gt;FontWarnings-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HandleDocumentSubstitutionWarnings<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IWarningCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;WarningInfoCollection&gt;<sp/>FontWarnings;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Warning(SharedPtr&lt;WarningInfo&gt;<sp/>info)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;get_WarningType()<sp/>==<sp/>WarningType::FontSubstitution)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FontWarnings-&gt;Warning(info);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>HandleDocumentSubstitutionWarnings()<sp/>:<sp/>FontWarnings(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;WarningInfoCollection&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="240" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a8c96f04602a7b802bd38051f0dfe0223" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_name_substitution_rule" kindref="compound">Aspose::Words::Fonts::FontNameSubstitutionRule</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fonts::FontNameSubstitutionRule &gt; Aspose::Words::Fonts::FontSubstitutionSettings::get_FontNameSubstitution</definition>
        <argsstring>() const</argsstring>
        <name>get_FontNameSubstitution</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::get_FontNameSubstitution</qualifiedname>
        <briefdescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_settings" kindref="compound">Settings</ref> related to font name substitution rule. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="307" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a38146310ffe12571ff287c819cb420fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_table_substitution_rule" kindref="compound">Aspose::Words::Fonts::TableSubstitutionRule</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fonts::TableSubstitutionRule &gt; Aspose::Words::Fonts::FontSubstitutionSettings::get_TableSubstitution</definition>
        <argsstring>() const</argsstring>
        <name>get_TableSubstitution</name>
        <qualifiedname>Aspose::Words::Fonts::FontSubstitutionSettings::get_TableSubstitution</qualifiedname>
        <briefdescription>
<para><ref refid="namespace_aspose_1_1_words_1_1_settings" kindref="compound">Settings</ref> related to table substitution rule. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with custom font substitution tables. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;set_FontSettings(fontSettings);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>table<sp/>substitution<sp/>rule<sp/>and<sp/>load<sp/>the<sp/>default<sp/>Windows<sp/>font<sp/>substitution<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;TableSubstitutionRule&gt;<sp/>tableSubstitutionRule<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_TableSubstitution();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>select<sp/>fonts<sp/>exclusively<sp/>from<sp/>our<sp/>folder,<sp/>we<sp/>will<sp/>need<sp/>a<sp/>custom<sp/>substitution<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>no<sp/>longer<sp/>have<sp/>access<sp/>to<sp/>the<sp/>Microsoft<sp/>Windows<sp/>fonts,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>&quot;Arial&quot;<sp/>or<sp/>&quot;Times<sp/>New<sp/>Roman&quot;<sp/>since<sp/>they<sp/>do<sp/>not<sp/>exist<sp/>in<sp/>our<sp/>new<sp/>font<sp/>folder.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>folderFontSource<sp/>=<sp/>MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fontSettings-&gt;SetFontsSources(MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({folderFontSource}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>loading<sp/>a<sp/>substitution<sp/>table<sp/>from<sp/>a<sp/>file<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>From<sp/>a<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fileStream<sp/>=<sp/>MakeObject&lt;System::IO::FileStream&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Font<sp/>substitution<sp/>rules.xml&quot;</highlight><highlight class="normal">,<sp/>System::IO::FileMode::Open);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tableSubstitutionRule-&gt;Load(fileStream);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Directly<sp/>from<sp/>a<sp/>file:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tableSubstitutionRule-&gt;Load(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Font<sp/>substitution<sp/>rules.xml&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>no<sp/>longer<sp/>have<sp/>access<sp/>to<sp/>&quot;Arial&quot;,<sp/>our<sp/>font<sp/>table<sp/>will<sp/>first<sp/>try<sp/>substitute<sp/>it<sp/>with<sp/>&quot;Nonexistent<sp/>Font&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>have<sp/>this<sp/>font<sp/>so<sp/>that<sp/>it<sp/>will<sp/>move<sp/>onto<sp/>the<sp/>next<sp/>substitute,<sp/>&quot;Kreon&quot;,<sp/>found<sp/>in<sp/>the<sp/>&quot;MyFonts&quot;<sp/>folder.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Missing<sp/>Font&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;Kreon&quot;</highlight><highlight class="normal">}),<sp/>tableSubstitutionRule-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">)-&gt;LINQ_ToArray());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>expand<sp/>this<sp/>table<sp/>programmatically.<sp/>We<sp/>will<sp/>add<sp/>an<sp/>entry<sp/>that<sp/>substitutes<sp/>&quot;Times<sp/>New<sp/>Roman&quot;<sp/>with<sp/>&quot;Arvo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(tableSubstitutionRule-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">tableSubstitutionRule-&gt;AddSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Arvo&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Arvo&quot;</highlight><highlight class="normal">}),<sp/>tableSubstitutionRule-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">)-&gt;LINQ_ToArray());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>add<sp/>a<sp/>secondary<sp/>fallback<sp/>substitute<sp/>for<sp/>an<sp/>existing<sp/>font<sp/>entry<sp/>with<sp/>AddSubstitutes().</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>&quot;Arvo&quot;<sp/>is<sp/>unavailable,<sp/>our<sp/>table<sp/>will<sp/>look<sp/>for<sp/>&quot;M+<sp/>2m&quot;<sp/>as<sp/>a<sp/>second<sp/>substitute<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tableSubstitutionRule-&gt;AddSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;M+<sp/>2m&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Arvo&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;M+<sp/>2m&quot;</highlight><highlight class="normal">}),<sp/>tableSubstitutionRule-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">)-&gt;LINQ_ToArray());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>SetSubstitutes()<sp/>can<sp/>set<sp/>a<sp/>new<sp/>list<sp/>of<sp/>substitute<sp/>fonts<sp/>for<sp/>a<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">tableSubstitutionRule-&gt;SetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Squarish<sp/>Sans<sp/>CT&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;M+<sp/>2m&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Squarish<sp/>Sans<sp/>CT&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;M+<sp/>2m&quot;</highlight><highlight class="normal">}),<sp/>tableSubstitutionRule-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">)-&gt;LINQ_ToArray());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writing<sp/>text<sp/>in<sp/>fonts<sp/>that<sp/>we<sp/>do<sp/>not<sp/>have<sp/>access<sp/>to<sp/>will<sp/>invoke<sp/>our<sp/>substitution<sp/>rules.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Arial&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Text<sp/>written<sp/>in<sp/>Arial,<sp/>to<sp/>be<sp/>substituted<sp/>by<sp/>Kreon.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;get_Font()-&gt;set_Name(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Writeln(u</highlight><highlight class="stringliteral">&quot;Text<sp/>written<sp/>in<sp/>Times<sp/>New<sp/>Roman,<sp/>to<sp/>be<sp/>substituted<sp/>by<sp/>Squarish<sp/>Sans<sp/>CT.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FontSettings.TableSubstitutionRule.Custom.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="174" column="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specifies font substitution mechanism settings. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> substitution process consists of several rules which are checked one by one in specific order. If the first rule can&apos;t resolve the font then second rule is checked and so on.</para>
<para>The order of the rules is following:<orderedlist>
<listitem><para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> name substitution rule (enabled by default)</para>
</listitem><listitem><para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> config substitution rule (disabled by default)</para>
</listitem><listitem><para>Table substitution rule (enabled by default)</para>
</listitem><listitem><para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> info substitution rule (enabled by default)</para>
</listitem><listitem><para>Default font rule (enabled by default)</para>
</listitem></orderedlist>
</para>
<para>Note that font info substitution rule will always resolve the font if <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_info" kindref="compound">FontInfo</ref> is available and will override the default font rule. If you want to use the default font rule then you should disable the font info substitution rule.</para>
<para>Note that font config substitution rule will resolve the font in most cases and thus overrides all other rules.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to access a document&apos;s system font source and set font substitutes. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;set_FontSettings(MakeObject&lt;FontSettings&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>a<sp/>blank<sp/>document<sp/>always<sp/>contains<sp/>a<sp/>system<sp/>font<sp/>source.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_FontSettings()-&gt;GetFontsSources()-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>systemFontSource<sp/>=<sp/>System::DynamicCast&lt;SystemFontSource&gt;(doc-&gt;get_FontSettings()-&gt;GetFontsSources()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fonts_1a016f4701fd203aaadd93269438fa18a1a7e137df3895b9c46e2757cf73237c983" kindref="member" tooltip="A SystemFontSource object that represents all fonts installed to the system.">FontSourceType::SystemFonts</ref>,<sp/>systemFontSource-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>systemFontSource-&gt;get_Priority());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace/system/_1a9326d04561ea76c1b9ed2866512bce58" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::PlatformID</ref><sp/>pid<sp/>=<sp/><ref refid="struct/system.environment/_1a8e941e4180a8e017dc874d8bddd7f66a" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Environment::get_OSVersion</ref>().get_Platform();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWindows<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32NT)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32S)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32Windows)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pid<sp/>==<sp/>System::PlatformID::WinCE);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWindows)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fontsPath<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;C:\\WINDOWS\\Fonts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(fontsPath.ToLower(),<sp/><ref refid="class_aspose_1_1_words_1_1_fonts_1_1_system_font_source_1a96cc1c29e270b1131f266822be4b7742" kindref="member" tooltip="Returns system font folders or empty array if folders are not accessible.">SystemFontSource::GetSystemFontFolders</ref>()-&gt;LINQ_First().ToLower());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(String<sp/>systemFontFolder<sp/>:<sp/><ref refid="class_aspose_1_1_words_1_1_fonts_1_1_system_font_source_1a96cc1c29e270b1131f266822be4b7742" kindref="member" tooltip="Returns system font folders or empty array if folders are not accessible.">SystemFontSource::GetSystemFontFolders</ref>())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>systemFontFolder<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>font<sp/>that<sp/>exists<sp/>in<sp/>the<sp/>Windows<sp/>Fonts<sp/>directory<sp/>as<sp/>a<sp/>substitute<sp/>for<sp/>one<sp/>that<sp/>does<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FontSettings()-&gt;get_SubstitutionSettings()-&gt;get_FontInfoSubstitution()-&gt;set_Enabled(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FontSettings()-&gt;get_SubstitutionSettings()-&gt;get_TableSubstitution()-&gt;AddSubstitutes(u</highlight><highlight class="stringliteral">&quot;Kreon-Regular&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Calibri&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_FontSettings()-&gt;get_SubstitutionSettings()-&gt;get_TableSubstitution()-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Kreon-Regular&quot;</highlight><highlight class="normal">)-&gt;LINQ_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(doc-&gt;get_FontSettings()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;get_SubstitutionSettings()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;get_TableSubstitution()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Kreon-Regular&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;LINQ_ToArray()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;Contains(u</highlight><highlight class="stringliteral">&quot;Calibri&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Alternatively,<sp/>we<sp/>could<sp/>add<sp/>a<sp/>folder<sp/>font<sp/>source<sp/>in<sp/>which<sp/>the<sp/>corresponding<sp/>folder<sp/>contains<sp/>the<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>folderFontSource<sp/>=<sp/>MakeObject&lt;FolderFontSource&gt;(FontsDir,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FontSettings()-&gt;SetFontsSources(MakeArray&lt;SharedPtr&lt;FontSourceBase&gt;&gt;({systemFontSource,<sp/>folderFontSource}));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>doc-&gt;get_FontSettings()-&gt;GetFontsSources()-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resetting<sp/>the<sp/>font<sp/>sources<sp/>still<sp/>leaves<sp/>us<sp/>with<sp/>the<sp/>system<sp/>font<sp/>source<sp/>as<sp/>well<sp/>as<sp/>our<sp/>substitutes.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FontSettings()-&gt;ResetFontSources();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_FontSettings()-&gt;GetFontsSources()-&gt;get_Length());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fonts_1a016f4701fd203aaadd93269438fa18a1a7e137df3895b9c46e2757cf73237c983" kindref="member" tooltip="A SystemFontSource object that represents all fonts installed to the system.">FontSourceType::SystemFonts</ref>,<sp/>doc-&gt;get_FontSettings()-&gt;GetFontsSources()-&gt;idx_get(0)-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>doc-&gt;get_FontSettings()-&gt;get_SubstitutionSettings()-&gt;get_TableSubstitution()-&gt;GetSubstitutes(u</highlight><highlight class="stringliteral">&quot;Kreon-Regular&quot;</highlight><highlight class="normal">)-&gt;LINQ_Count());</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Fonts::FontSubstitutionSettings</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Fonts::FontSubstitutionSettings</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" line="107" column="1" bodyfile="Aspose.Words.Cpp/Fonts/FontSubstitutionSettings.h" bodystart="108" bodyend="319"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1ab8accf1e865ea9fe0061c15975b13ad6" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1aae432ebf22faea543301009c65b7937d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>get_DefaultFontSubstitution</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a35680f5b2d72fc49f762e451a267db41" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>get_FontConfigSubstitution</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1aa3ebcf55266bf4ed64cba418e113261d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>get_FontInfoSubstitution</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a8c96f04602a7b802bd38051f0dfe0223" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>get_FontNameSubstitution</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a38146310ffe12571ff287c819cb420fa" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>get_TableSubstitution</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1abff76e3d1acdb3263a2f0a00a0c8163e" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a78b5e6824892318861c538de4e28d30b" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a4c75beabff2c2bc63c0152e5c7f60337" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a118d2037a8522dc73d50daf47efe25f7" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1aaa7d6803b57a34909c3db519f59e0a87" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a19a1cb47bc30771419c7e96a6f3afed9" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1af1ea45d78395291af5becddfc911ada3" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_settings_1a241dd415427b8c72784607ffa2938bd4" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontSubstitutionSettings</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
