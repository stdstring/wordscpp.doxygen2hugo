<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_loading_1_1_load_options" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Loading::LoadOptions</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_loading_1_1_chm_load_options" prot="public" virt="non-virtual">Aspose::Words::Loading::ChmLoadOptions</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_loading_1_1_html_load_options" prot="public" virt="non-virtual">Aspose::Words::Loading::HtmlLoadOptions</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_loading_1_1_pdf_load_options" prot="public" virt="non-virtual">Aspose::Words::Loading::PdfLoadOptions</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_loading_1_1_rtf_load_options" prot="public" virt="non-virtual">Aspose::Words::Loading::RtfLoadOptions</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_loading_1_1_txt_load_options" prot="public" virt="non-virtual">Aspose::Words::Loading::TxtLoadOptions</derivedcompoundref>
    <includes refid="_load_options_8h" local="no">Aspose.Words.Cpp/Loading/LoadOptions.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1af5407131d6084848b661cbd0ac39c203" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Loading::LoadOptions::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="85" column="28" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1adae1c5d21919626a98568f4ece60e09e" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options" kindref="compound">LoadOptions</ref></type>
        <definition>typedef LoadOptions Aspose::Words::Loading::LoadOptions::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="84" column="25" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ae0d6eb6565822c1b46a58c456e63724a" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Loading::LoadOptions::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="87" column="37" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a9a5e49e5b2248b5518f3f125b276dea9" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="774" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1afbdb1f7160ab0cffcad85f56bd9c8b2e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="782" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a99950e36148d096473f31bc5a269f0c0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField10</definition>
        <argsstring></argsstring>
        <name>mField10</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="791" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a9fa1a379b54db7b3def59cb93c66cfc3" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Loading::LoadOptions::mField11</definition>
        <argsstring></argsstring>
        <name>mField11</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="792" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1aa7a4856c3e745b4d453d8342aa6ac5bf" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField12</definition>
        <argsstring></argsstring>
        <name>mField12</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="793" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a54b9a1f0e730acad8a4871de68fcac0b" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField13</definition>
        <argsstring></argsstring>
        <name>mField13</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="794" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a64850985d748bb3901d53b114b56d10b" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField14</definition>
        <argsstring></argsstring>
        <name>mField14</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="795" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ac10ad32ae8ce060ddb157ccd62fa4a1a" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Loading::LoadOptions::mField15</definition>
        <argsstring></argsstring>
        <name>mField15</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="796" column="20" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1aa54b8233946717ba25b7a0ade212d823" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField16</definition>
        <argsstring></argsstring>
        <name>mField16</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="797" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ace88352df2d3094d703d19480eaed329" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Loading::LoadOptions::mField17</definition>
        <argsstring></argsstring>
        <name>mField17</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField17</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="798" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a83910ba30be3544d57b7ebacb3c17034" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField18</definition>
        <argsstring></argsstring>
        <name>mField18</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField18</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="799" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="799" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a5ebb3bced1c1f3e08be8ffb31436005e" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField19</definition>
        <argsstring></argsstring>
        <name>mField19</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField19</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="800" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a2f1df65de3acb21a1eef42ed535ccb17" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::Loading::LoadOptions::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="783" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a6207245149b09ba3a029213f5a19d121" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField20</definition>
        <argsstring></argsstring>
        <name>mField20</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField20</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="801" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="801" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1abd1ff60cfe7f8270b092d88196b123d2" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Loading::LoadOptions::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="784" column="20" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ada570911b5ff156ecaf95777abc12e31" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Loading::LoadOptions::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="785" column="20" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a94ca817cc4ff49004e68f3be0cada7ff" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="786" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0450245edd8ad0e70745306ed4d2a52e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="787" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8018ebc0999543e4c354dfd063851f97" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Loading::LoadOptions::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="788" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a36a45456a092b64f0c9d3bc5bc2d9fc3" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField8</definition>
        <argsstring></argsstring>
        <name>mField8</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="789" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a7b520a502e4b1eed52d5da83c3358a08" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Loading::LoadOptions::mField9</definition>
        <argsstring></argsstring>
        <name>mField9</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::mField9</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="790" column="23" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="790" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8e71ed9b72e2c6cc8a1504748217953f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Loading::LoadOptions::~LoadOptions</definition>
        <argsstring>()</argsstring>
        <name>~LoadOptions</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::~LoadOptions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="778" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a609b68c3016b5a72bdcd4761689c0db6" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options" kindref="compound">Aspose::Words::Loading::LoadOptions</ref> &gt;</type>
        <definition>virtual System::SharedPtr&lt; Aspose::Words::Loading::LoadOptions &gt; Aspose::Words::Loading::LoadOptions::Clone</definition>
        <argsstring>()</argsstring>
        <name>Clone</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::Clone</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_loading_1_1_chm_load_options_1a8974b19c64eedaa5c1f82842cedbf629">Clone</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_loading_1_1_html_load_options_1a58c6fef216fdded9088917c55e0183ec">Clone</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_loading_1_1_rtf_load_options_1a8b285bacfd144451922ecb5672ce7c4f">Clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="776" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab292d00ea616e27b8a21bd1b423c7c0d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Loading::LoadOptions::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="88" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a91cce95575b98c82e8eea81af037508d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Loading::LoadOptions::LoadOptions</definition>
        <argsstring>()</argsstring>
        <name>LoadOptions</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::LoadOptions</qualifiedname>
        <briefdescription>
<para>Initializes a new instance of this class with default values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to open an HTML document with images from a stream using a base URI. <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>stream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>base<sp/>folder<sp/>while<sp/>loading<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>any<sp/>images<sp/>with<sp/>relative<sp/>URIs<sp/>in<sp/>the<sp/>HTML<sp/>document<sp/>can<sp/>be<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>loadOptions-&gt;set_BaseUri(ImageDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(stream,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>first<sp/>shape<sp/>of<sp/>the<sp/>document<sp/>contains<sp/>a<sp/>valid<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shape<sp/>=<sp/>System::DynamicCast&lt;Shape&gt;(doc-&gt;GetChild(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(shape-&gt;get_IsImage());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(shape-&gt;get_ImageData()-&gt;get_ImageBytes()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(32.0,<sp/><ref refid="class_aspose_1_1_words_1_1_convert_util_1ae154837d40adf7638fd63672041e856b" kindref="member" tooltip="Converts points to pixels at 96 dpi.">ConvertUtil::PointToPixel</ref>(shape-&gt;get_Width()),<sp/>0.01);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(32.0,<sp/><ref refid="class_aspose_1_1_words_1_1_convert_util_1ae154837d40adf7638fd63672041e856b" kindref="member" tooltip="Converts points to pixels at 96 dpi.">ConvertUtil::PointToPixel</ref>(shape-&gt;get_Height()),<sp/>0.01);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="693" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab21ac0bed2d8c794e2021c36cc0f266d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Loading::LoadOptions::LoadOptions</definition>
        <argsstring>(Aspose::Words::LoadFormat loadFormat, const System::String &amp;password, const System::String &amp;baseUri)</argsstring>
        <name>LoadOptions</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::LoadOptions</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
          <declname>loadFormat</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>password</declname>
        </param>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>baseUri</declname>
        </param>
        <briefdescription>
<para>A shortcut to initialize a new instance of this class with properties set to the specified values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loadFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the document to be loaded. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password to open an encrypted document. Can be null or empty string. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseUri</parametername>
</parameternamelist>
<parameterdescription>
<para>The string that will be used to resolve relative URIs to absolute. Can be null or empty string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how save a web page as a .docx file. <programlisting><codeline><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>url<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;https://www.aspose.com/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>client<sp/>=<sp/>MakeObject&lt;System::Net::WebClient&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stream<sp/>=<sp/>MakeObject&lt;System::IO::MemoryStream&gt;(client-&gt;DownloadData(url));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>URL<sp/>is<sp/>used<sp/>again<sp/>as<sp/>a<sp/>baseUri<sp/>to<sp/>ensure<sp/>that<sp/>any<sp/>relative<sp/>image<sp/>paths<sp/>are<sp/>retrieved<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>url);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>HTML<sp/>document<sp/>from<sp/>stream<sp/>and<sp/>pass<sp/>the<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(stream,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>stage,<sp/>we<sp/>can<sp/>read<sp/>and<sp/>edit<sp/>the<sp/>document&apos;s<sp/>contents<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.InsertHtmlFromWebPage.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Shows how to specify a base URI when opening an html document. <programlisting><codeline><highlight class="comment">//<sp/>Suppose<sp/>we<sp/>want<sp/>to<sp/>load<sp/>an<sp/>.html<sp/>document<sp/>that<sp/>contains<sp/>an<sp/>image<sp/>linked<sp/>by<sp/>a<sp/>relative<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>image<sp/>is<sp/>in<sp/>a<sp/>different<sp/>location.<sp/>In<sp/>that<sp/>case,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>resolve<sp/>the<sp/>relative<sp/>URI<sp/>into<sp/>an<sp/>absolute<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>provide<sp/>a<sp/>base<sp/>URI<sp/>using<sp/>an<sp/>HtmlLoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;HtmlLoadOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>ImageDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>loadOptions-&gt;get_LoadFormat());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Missing<sp/>image.html&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>While<sp/>the<sp/>image<sp/>was<sp/>broken<sp/>in<sp/>the<sp/>input<sp/>.html,<sp/>our<sp/>custom<sp/>base<sp/>URI<sp/>helped<sp/>us<sp/>repair<sp/>the<sp/>link.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>imageShape<sp/>=<sp/>System::DynamicCast&lt;Shape&gt;(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(imageShape-&gt;get_IsImage());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>output<sp/>document<sp/>will<sp/>display<sp/>the<sp/>image<sp/>that<sp/>was<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlLoadOptions.BaseUri.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="770" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a6d13f827b12c2b6048576119fe2f2814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Loading::LoadOptions::LoadOptions</definition>
        <argsstring>(const System::String &amp;password)</argsstring>
        <name>LoadOptions</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::LoadOptions</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>A shortcut to initialize a new instance of this class with the specified password to load an encrypted document. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>The password to open an encrypted document. Can be null or empty string.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to load an encrypted Microsoft Word document. <programlisting><codeline><highlight class="normal">SharedPtr&lt;Document&gt;<sp/>doc;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspose.Words<sp/>throw<sp/>an<sp/>exception<sp/>if<sp/>we<sp/>try<sp/>to<sp/>open<sp/>an<sp/>encrypted<sp/>document<sp/>without<sp/>its<sp/>password.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">),<sp/><ref refid="namespace_aspose_1_1_words_1a69d5ddc9f0a7b4c2dfd356817c3be538" kindref="member" tooltip="Thrown if a document is encrypted with a password and the password specified when opening the documen...">IncorrectPasswordException</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>loading<sp/>such<sp/>a<sp/>document,<sp/>the<sp/>password<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>document&apos;s<sp/>constructor<sp/>using<sp/>a<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;(u</highlight><highlight class="stringliteral">&quot;docPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>loading<sp/>an<sp/>encrypted<sp/>document<sp/>with<sp/>a<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Load<sp/>the<sp/>document<sp/>from<sp/>the<sp/>local<sp/>file<sp/>system<sp/>by<sp/>filename:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Load<sp/>the<sp/>document<sp/>from<sp/>a<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>stream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(stream,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="721" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0196af2dffdd53f6de6416c30f4cd89e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Loading::LoadOptions::get_BaseUri</definition>
        <argsstring>() const</argsstring>
        <name>get_BaseUri</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_BaseUri</qualifiedname>
        <briefdescription>
<para>Gets or sets the string that will be used to resolve relative URIs found in the document into absolute URIs when required. Can be null or empty string. Default is null. </para>
        </briefdescription>
        <detaileddescription>
<para>This property is used to resolve relative URIs into absolute in the following cases:</para>
<para><orderedlist>
<listitem><para>When loading an HTML document from a stream and the document contains images with relative URIs and does not have a base URI specified in the BASE HTML element.</para>
</listitem><listitem><para>When saving a document to PDF and other formats, to retrieve images linked using relative URIs so the images can be saved into the output document.</para>
</listitem></orderedlist>
</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to open an HTML document with images from a stream using a base URI. <programlisting><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>stream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>the<sp/>URI<sp/>of<sp/>the<sp/>base<sp/>folder<sp/>while<sp/>loading<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>any<sp/>images<sp/>with<sp/>relative<sp/>URIs<sp/>in<sp/>the<sp/>HTML<sp/>document<sp/>can<sp/>be<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>loadOptions-&gt;set_BaseUri(ImageDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(stream,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>the<sp/>first<sp/>shape<sp/>of<sp/>the<sp/>document<sp/>contains<sp/>a<sp/>valid<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shape<sp/>=<sp/>System::DynamicCast&lt;Shape&gt;(doc-&gt;GetChild(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(shape-&gt;get_IsImage());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(shape-&gt;get_ImageData()-&gt;get_ImageBytes()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(32.0,<sp/><ref refid="class_aspose_1_1_words_1_1_convert_util_1ae154837d40adf7638fd63672041e856b" kindref="member" tooltip="Converts points to pixels at 96 dpi.">ConvertUtil::PointToPixel</ref>(shape-&gt;get_Width()),<sp/>0.01);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_NEAR(32.0,<sp/><ref refid="class_aspose_1_1_words_1_1_convert_util_1ae154837d40adf7638fd63672041e856b" kindref="member" tooltip="Converts points to pixels at 96 dpi.">ConvertUtil::PointToPixel</ref>(shape-&gt;get_Height()),<sp/>0.01);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="187" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ad67318fd720912ba8460d0d8635be0d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Loading::LoadOptions::get_ConvertMetafilesToPng</definition>
        <argsstring>() const</argsstring>
        <name>get_ConvertMetafilesToPng</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_ConvertMetafilesToPng</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to convert metafile (<ref refid="" kindref="compound">Wmf</ref> or <ref refid="" kindref="compound">Emf</ref>) images to <ref refid="" kindref="compound">Png</ref> image format. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to convert WMF/EMF to PNG during loading document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shape<sp/>=<sp/>MakeObject&lt;Shape&gt;(doc,<sp/>ShapeType::Image);</highlight></codeline>
<codeline><highlight class="normal">shape-&gt;get_ImageData()-&gt;SetImage(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Windows<sp/>MetaFile.wmf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">shape-&gt;set_Width(100);</highlight></codeline>
<codeline><highlight class="normal">shape-&gt;set_Height(100);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;AppendChild(shape);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Image.CreateImageDirectly.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">shape<sp/>=<sp/>System::DynamicCast&lt;Shape&gt;(doc-&gt;GetChild(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">TestUtil::VerifyImageInShape(1600,<sp/>1600,<sp/>ImageType::Wmf,<sp/>shape);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_ConvertMetafilesToPng(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Image.CreateImageDirectly.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal">shape<sp/>=<sp/>System::DynamicCast&lt;Shape&gt;(doc-&gt;GetChild(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="553" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8a305c7ca7de0a900148187c3a1e6ad3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Loading::LoadOptions::get_ConvertShapeToOfficeMath</definition>
        <argsstring>() const</argsstring>
        <name>get_ConvertShapeToOfficeMath</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_ConvertShapeToOfficeMath</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to convert shapes with EquationXML to Office <ref refid="namespace_aspose_1_1_words_1_1_math" kindref="compound">Math</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to convert EquationXML shapes to Office <ref refid="namespace_aspose_1_1_words_1_1_math" kindref="compound">Math</ref> objects. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>flag<sp/>to<sp/>specify<sp/>whether<sp/>to<sp/>convert<sp/>the<sp/>shapes<sp/>with<sp/>EquationXML<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>Office<sp/>Math<sp/>objects<sp/>and<sp/>then<sp/>load<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_ConvertShapeToOfficeMath(isConvertShapeToOfficeMath);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Math<sp/>shapes.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isConvertShapeToOfficeMath)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(16,<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(34,<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a5312d72b7c20e87eb071997a30588a47" kindref="member" tooltip="An Office Math object. Can be equation, function, matrix or one of other mathematical objects....">NodeType::OfficeMath</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(24,<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(0,<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a5312d72b7c20e87eb071997a30588a47" kindref="member" tooltip="An Office Math object. Can be equation, function, matrix or one of other mathematical objects....">NodeType::OfficeMath</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="425" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a1f024832c893f116802c60059ce25b13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.text.encoding/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding</ref> &gt;</type>
        <definition>System::SharedPtr&lt; System::Text::Encoding &gt; Aspose::Words::Loading::LoadOptions::get_Encoding</definition>
        <argsstring>() const</argsstring>
        <name>get_Encoding</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_Encoding</qualifiedname>
        <briefdescription>
<para>Gets or sets the encoding that will be used to load an HTML, TXT, or CHM document if the encoding is not specified inside the document. Can be null. Default is null. </para>
        </briefdescription>
        <detaileddescription>
<para>This property is used only when loading HTML, TXT, or CHM documents.</para>
<para>If encoding is not specified inside the document and this property is <computeroutput>null</computeroutput>, then the system will try to automatically detect the encoding.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to set the encoding with which to open a document. <programlisting><codeline><highlight class="comment">//<sp/>A<sp/>FileFormatInfo<sp/>object<sp/>will<sp/>detect<sp/>this<sp/>file<sp/>as<sp/>being<sp/>encoded<sp/>in<sp/>something<sp/>other<sp/>than<sp/>UTF-7.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>fileFormatInfo<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encoded<sp/>in<sp/>UTF-7.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_NE(<ref refid="class/system.text.encoding/_1a423d321d3f050489973ce0fa32de9020" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF7</ref>(),<sp/>fileFormatInfo-&gt;get_Encoding());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>load<sp/>the<sp/>document<sp/>with<sp/>no<sp/>loading<sp/>configurations,<sp/>Aspose.Words<sp/>will<sp/>detect<sp/>its<sp/>encoding<sp/>as<sp/>UTF-8.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encoded<sp/>in<sp/>UTF-7.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>contents,<sp/>parsed<sp/>in<sp/>UTF-8,<sp/>create<sp/>a<sp/>valid<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>However,<sp/>knowing<sp/>that<sp/>the<sp/>file<sp/>is<sp/>in<sp/>UTF-7,<sp/>we<sp/>can<sp/>see<sp/>that<sp/>the<sp/>result<sp/>is<sp/>incorrect.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world+ACE-&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;ToString(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Saves the document in the plain text format.">SaveFormat::Text</ref>).Trim());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>cases<sp/>of<sp/>ambiguous<sp/>encoding<sp/>such<sp/>as<sp/>this<sp/>one,<sp/>we<sp/>can<sp/>set<sp/>a<sp/>specific<sp/>encoding<sp/>variant</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>parse<sp/>the<sp/>file<sp/>within<sp/>a<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_Encoding(<ref refid="class/system.text.encoding/_1a423d321d3f050489973ce0fa32de9020" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding::get_UTF7</ref>());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>document<sp/>while<sp/>passing<sp/>the<sp/>LoadOptions<sp/>object,<sp/>then<sp/>verify<sp/>the<sp/>document&apos;s<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encoded<sp/>in<sp/>UTF-7.txt&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Hello<sp/>world!&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;ToString(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Saves the document in the plain text format.">SaveFormat::Text</ref>).Trim());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="227" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ae4da81e82a1ca5a3231b72f746a7986f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Loading::LoadOptions::get_FlatOpcXmlMappingOnly</definition>
        <argsstring>() const</argsstring>
        <name>get_FlatOpcXmlMappingOnly</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_FlatOpcXmlMappingOnly</qualifiedname>
        <briefdescription>
<para>Gets value determining which document formats are allowed to be mapped by <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" kindref="member">XmlMapping</ref>. By default only <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a2b7085a73e76e581d28543a39fb2b981" kindref="member">FlatOpc</ref> document format is allowed to be mapped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="663" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a566b10007e64036a66710bf18d55a2a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_settings" kindref="compound">Aspose::Words::Fonts::FontSettings</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fonts::FontSettings &gt; Aspose::Words::Loading::LoadOptions::get_FontSettings</definition>
        <argsstring>() const</argsstring>
        <name>get_FontSettings</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_FontSettings</qualifiedname>
        <briefdescription>
<para>Allows to specify document font settings. </para>
        </briefdescription>
        <detaileddescription>
<para>When loading some formats, Aspose.Words may require to resolve the fonts. For example, when loading HTML documents <ref refid="namespace_aspose_1_1_words" kindref="compound">Aspose.Words</ref> may resolve the fonts to perform font fallback.</para>
<para>If set to null, default static font settings <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_settings_1a90e0da0bb7e1ce1654777aaf3cc5f757" kindref="member">DefaultInstance</ref> will be used.</para>
<para>The default value is null.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to designate font substitutes during loading. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_FontSettings(MakeObject&lt;FontSettings&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>font<sp/>substitution<sp/>rule<sp/>for<sp/>a<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>document<sp/>we<sp/>are<sp/>loading<sp/>uses<sp/>a<sp/>font<sp/>which<sp/>we<sp/>do<sp/>not<sp/>have,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>rule<sp/>will<sp/>substitute<sp/>the<sp/>unavailable<sp/>font<sp/>with<sp/>one<sp/>that<sp/>does<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>this<sp/>case,<sp/>all<sp/>uses<sp/>of<sp/>the<sp/>&quot;MissingFont&quot;<sp/>will<sp/>convert<sp/>to<sp/>&quot;Comic<sp/>Sans<sp/>MS&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;TableSubstitutionRule&gt;<sp/>substitutionRule<sp/>=<sp/>loadOptions-&gt;get_FontSettings()-&gt;get_SubstitutionSettings()-&gt;get_TableSubstitution();</highlight></codeline>
<codeline><highlight class="normal">substitutionRule-&gt;AddSubstitutes(u</highlight><highlight class="stringliteral">&quot;MissingFont&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Comic<sp/>Sans<sp/>MS&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Missing<sp/>font.html&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point<sp/>such<sp/>text<sp/>will<sp/>still<sp/>be<sp/>in<sp/>&quot;MissingFont&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Font<sp/>substitution<sp/>will<sp/>take<sp/>place<sp/>when<sp/>we<sp/>render<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;MissingFont&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_FirstSection()-&gt;get_Body()-&gt;get_FirstParagraph()-&gt;get_Runs()-&gt;idx_get(0)-&gt;get_Font()-&gt;get_Name());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;FontSettings.ResolveFontsBeforeLoadingDocument.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para>Shows how to apply font substitution settings while loading a document. <programlisting><codeline><highlight class="comment">//<sp/>Create<sp/>a<sp/>FontSettings<sp/>object<sp/>that<sp/>will<sp/>substitute<sp/>the<sp/>&quot;Times<sp/>New<sp/>Roman&quot;<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>font<sp/>&quot;Arvo&quot;<sp/>from<sp/>our<sp/>&quot;MyFonts&quot;<sp/>folder.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">fontSettings-&gt;SetFontsFolder(FontsDir,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">fontSettings-&gt;get_SubstitutionSettings()-&gt;get_TableSubstitution()-&gt;AddSubstitutes(u</highlight><highlight class="stringliteral">&quot;Times<sp/>New<sp/>Roman&quot;</highlight><highlight class="normal">,<sp/>MakeArray&lt;String&gt;({u</highlight><highlight class="stringliteral">&quot;Arvo&quot;</highlight><highlight class="normal">}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>that<sp/>FontSettings<sp/>object<sp/>as<sp/>a<sp/>property<sp/>of<sp/>a<sp/>newly<sp/>created<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_FontSettings(fontSettings);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>document,<sp/>then<sp/>render<sp/>it<sp/>as<sp/>a<sp/>PDF<sp/>with<sp/>the<sp/>font<sp/>substitution.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;LoadOptions.FontSettings.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="479" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1adb7ec99702984a8b14a0364593447d5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_loading_1_1_language_preferences" kindref="compound">Aspose::Words::Loading::LanguagePreferences</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Loading::LanguagePreferences &gt; Aspose::Words::Loading::LoadOptions::get_LanguagePreferences</definition>
        <argsstring>() const</argsstring>
        <name>get_LanguagePreferences</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_LanguagePreferences</qualifiedname>
        <briefdescription>
<para>Gets language preferences that will be used when document is loading. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to apply language preferences when loading a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;get_LanguagePreferences()-&gt;AddEditingLanguage(<ref refid="namespace_aspose_1_1_words_1_1_loading_1a3e1953ce01da5cb69cd0a5d858ba0bd4af32ced6a9ba164c4b3c047fd1d7c882e" kindref="member">EditingLanguage::Japanese</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;No<sp/>default<sp/>editing<sp/>language.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localeIdFarEast<sp/>=<sp/>doc-&gt;get_Styles()-&gt;get_DefaultFont()-&gt;get_LocaleIdFarEast();</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>(localeIdFarEast<sp/>==<sp/>(int)<ref refid="namespace_aspose_1_1_words_1_1_loading_1a3e1953ce01da5cb69cd0a5d858ba0bd4af32ced6a9ba164c4b3c047fd1d7c882e" kindref="member">EditingLanguage::Japanese</ref></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;The<sp/>document<sp/>either<sp/>has<sp/>no<sp/>any<sp/>FarEast<sp/>language<sp/>set<sp/>in<sp/>defaults<sp/>or<sp/>it<sp/>was<sp/>set<sp/>to<sp/>Japanese<sp/>originally.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;The<sp/>document<sp/>default<sp/>FarEast<sp/>language<sp/>was<sp/>set<sp/>to<sp/>another<sp/>than<sp/>Japanese<sp/>language<sp/>originally,<sp/>so<sp/>it<sp/>is<sp/>not<sp/>overridden.&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="659" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1af9522ca2c1dd6eb41ce67d2e83640b16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
        <definition>Aspose::Words::LoadFormat Aspose::Words::Loading::LoadOptions::get_LoadFormat</definition>
        <argsstring>() const</argsstring>
        <name>get_LoadFormat</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_LoadFormat</qualifiedname>
        <briefdescription>
<para>Specifies the format of the document to be loaded. Default is <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a06b9281e396db002010bde1de57262eb" kindref="member">Auto</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>It is recommended that you specify the <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a06b9281e396db002010bde1de57262eb" kindref="member">Auto</ref> value and let Aspose.Words detect the file format automatically. If you know the format of the document you are about to load, you can specify the format explicitly and this will slightly reduce the loading time by the overhead associated with auto detecting the format. If you specify an explicit load format and it will turn out to be wrong, the auto detection will be invoked and a second attempt to load the file will be made.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to specify a base URI when opening an html document. <programlisting><codeline><highlight class="comment">//<sp/>Suppose<sp/>we<sp/>want<sp/>to<sp/>load<sp/>an<sp/>.html<sp/>document<sp/>that<sp/>contains<sp/>an<sp/>image<sp/>linked<sp/>by<sp/>a<sp/>relative<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>the<sp/>image<sp/>is<sp/>in<sp/>a<sp/>different<sp/>location.<sp/>In<sp/>that<sp/>case,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>resolve<sp/>the<sp/>relative<sp/>URI<sp/>into<sp/>an<sp/>absolute<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>provide<sp/>a<sp/>base<sp/>URI<sp/>using<sp/>an<sp/>HtmlLoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;HtmlLoadOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>u</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>ImageDir);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>loadOptions-&gt;get_LoadFormat());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Missing<sp/>image.html&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>While<sp/>the<sp/>image<sp/>was<sp/>broken<sp/>in<sp/>the<sp/>input<sp/>.html,<sp/>our<sp/>custom<sp/>base<sp/>URI<sp/>helped<sp/>us<sp/>repair<sp/>the<sp/>link.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>imageShape<sp/>=<sp/>System::DynamicCast&lt;Shape&gt;(doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(imageShape-&gt;get_IsImage());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>output<sp/>document<sp/>will<sp/>display<sp/>the<sp/>image<sp/>that<sp/>was<sp/>missing.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;HtmlLoadOptions.BaseUri.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="121" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a4a35a3b868f2b012e17397b0e2f7727b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_settings_1a1408d4dfce0c45481036f9c1f8842d00" kindref="member">Aspose::Words::Settings::MsWordVersion</ref></type>
        <definition>Aspose::Words::Settings::MsWordVersion Aspose::Words::Loading::LoadOptions::get_MswVersion</definition>
        <argsstring>() const</argsstring>
        <name>get_MswVersion</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_MswVersion</qualifiedname>
        <briefdescription>
<para>Allows to specify that the document loading process should match a specific MS Word version. Default value is <ref refid="namespace_aspose_1_1_words_1_1_settings_1a1408d4dfce0c45481036f9c1f8842d00a2c447d438f24cbb73099baf86c3d2996" kindref="member">Word2019</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to emulate the loading procedure of a specific Microsoft Word version during document loading. <programlisting><codeline><highlight class="comment">//<sp/>By<sp/>default,<sp/>Aspose.Words<sp/>load<sp/>documents<sp/>according<sp/>to<sp/>Microsoft<sp/>Word<sp/>2019<sp/>specification.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(MsWordVersion::Word2019,<sp/>loadOptions-&gt;get_MswVersion());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>document<sp/>is<sp/>missing<sp/>the<sp/>default<sp/>paragraph<sp/>formatting<sp/>style.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>default<sp/>style<sp/>will<sp/>be<sp/>regenerated<sp/>when<sp/>we<sp/>load<sp/>the<sp/>document<sp/>either<sp/>with<sp/>Microsoft<sp/>Word<sp/>or<sp/>Aspose.Words.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_MswVersion(MsWordVersion::Word2007);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>style&apos;s<sp/>line<sp/>spacing<sp/>will<sp/>have<sp/>this<sp/>value<sp/>when<sp/>loaded<sp/>by<sp/>Microsoft<sp/>Word<sp/>2007<sp/>specification.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_NEAR(12.95,<sp/>doc-&gt;get_Styles()-&gt;get_DefaultParagraphFormat()-&gt;get_LineSpacing(),<sp/>0.01);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="578" column="47"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a1a45522476e3ce872d60c1adfc59fffd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Loading::LoadOptions::get_Password</definition>
        <argsstring>() const</argsstring>
        <name>get_Password</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_Password</qualifiedname>
        <briefdescription>
<para>Gets or sets the password for opening an encrypted document. Can be null or empty string. Default is null. </para>
        </briefdescription>
        <detaileddescription>
<para>You need to know the password to open an encrypted document. If the document is not encrypted, set this to null or empty string.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to sign encrypted document file. <programlisting><codeline><highlight class="comment">//<sp/>Create<sp/>an<sp/>X.509<sp/>certificate<sp/>from<sp/>a<sp/>PKCS#12<sp/>store,<sp/>which<sp/>should<sp/>contain<sp/>a<sp/>private<sp/>key.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/>CertificateHolder::Create(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>comment,<sp/>date,<sp/>and<sp/>decryption<sp/>password<sp/>which<sp/>will<sp/>be<sp/>applied<sp/>with<sp/>our<sp/>new<sp/>digital<sp/>signature.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_Comments(u</highlight><highlight class="stringliteral">&quot;Comment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_DecryptionPassword(u</highlight><highlight class="stringliteral">&quot;docPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>local<sp/>system<sp/>filename<sp/>for<sp/>the<sp/>unsigned<sp/>input<sp/>document,<sp/>and<sp/>an<sp/>output<sp/>filename<sp/>for<sp/>its<sp/>new<sp/>digitally<sp/>signed<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>inputFileName<sp/>=<sp/>MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>outputFileName<sp/>=<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;DigitalSignatureUtil.DecryptionPassword.docx&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">DigitalSignatureUtil::Sign(inputFileName,<sp/>outputFileName,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="150" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a506351eadee7e43bb85df5f2d79addb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Loading::LoadOptions::get_PreserveIncludePictureField</definition>
        <argsstring>() const</argsstring>
        <name>get_PreserveIncludePictureField</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_PreserveIncludePictureField</qualifiedname>
        <briefdescription>
<para>Gets or sets whether to preserve the INCLUDEPICTURE field when reading Microsoft Word formats. The default value is false. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, the INCLUDEPICTURE field is converted into a shape object. You can override that if you need the field to be preserved, for example, if you wish to update it programmatically. Note however that this approach is not common for Aspose.Words. Use it on your own risk.</para>
<para>One of the possible use cases may be using a MERGEFIELD as a child field to dynamically change the source path of the picture. In this case you need the INCLUDEPICTURE to be preserved in the model.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to preserve or discard INCLUDEPICTURE fields when loading a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>includePicture<sp/>=<sp/>System::DynamicCast&lt;FieldIncludePicture&gt;(builder-&gt;InsertField(FieldType::FieldIncludePicture,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">includePicture-&gt;set_SourceFullName(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Transparent<sp/>background<sp/>logo.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">includePicture-&gt;Update(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>docStream<sp/>=<sp/>MakeObject&lt;System::IO::MemoryStream&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(docStream,<sp/>MakeObject&lt;OoxmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Saves the document as an Office Open XML WordprocessingML Document (macro-free).">SaveFormat::Docx</ref>));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>a<sp/>flag<sp/>in<sp/>a<sp/>LoadOptions<sp/>object<sp/>to<sp/>decide<sp/>whether<sp/>to<sp/>convert<sp/>all<sp/>INCLUDEPICTURE<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>image<sp/>shapes<sp/>when<sp/>loading<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;Loading::LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>loadOptions-&gt;set_PreserveIncludePictureField(preserveIncludePictureField);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preserveIncludePictureField)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(doc-&gt;get_Range()-&gt;get_Fields()-&gt;LINQ_Any([](SharedPtr&lt;Field&gt;<sp/>f)<sp/>{<sp/>return<sp/>f-&gt;get_Type()<sp/>==<sp/>FieldType::FieldIncludePicture;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.PreserveIncludePicture.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(doc-&gt;get_Range()-&gt;get_Fields()-&gt;LINQ_Any([](SharedPtr&lt;Field&gt;<sp/>f)<sp/>{<sp/>return<sp/>f-&gt;get_Type()<sp/>==<sp/>FieldType::FieldIncludePicture;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="395" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1acf271e71b7f8b3bf99c6b954a2930d4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_loading_1_1_i_document_loading_callback" kindref="compound">Aspose::Words::Loading::IDocumentLoadingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Loading::IDocumentLoadingCallback &gt; Aspose::Words::Loading::LoadOptions::get_ProgressCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_ProgressCallback</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_ProgressCallback</qualifiedname>
        <briefdescription>
<para>Called during loading a document and accepts data about loading progress. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member">Docx</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a2b7085a73e76e581d28543a39fb2b981" kindref="member">FlatOpc</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52ae4a760f39d051de12fe119230787cf31" kindref="member">Docm</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9ade78f4046d6517a2b17884c1307845" kindref="member">Dotm</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52af677eacaea0757778d5ae6a5c7b6b33f" kindref="member">Dotx</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a2182a74bab7188d959e795d9301e87ff" kindref="member">Markdown</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aca9a0e8f64d43d81dd7b0225ea1b19c5" kindref="member">Rtf</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52ad3fc933a3ff97915dd1fa4b6c524230e" kindref="member">WordML</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member">Doc</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aaf6c6cf7a454b4ef4a850ac4d960a2cc" kindref="member">Dot</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a62830bddfb361d1fe469dd20145f9e8b" kindref="member">Odt</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52af70f04f40f6b423ddfc11b1d8c6829d9" kindref="member">Ott</ref> formats supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="343" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab965badd27ded5b5bfd2507e93fbcbb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_loading_1_1_i_resource_loading_callback" kindref="compound">Aspose::Words::Loading::IResourceLoadingCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Loading::IResourceLoadingCallback &gt; Aspose::Words::Loading::LoadOptions::get_ResourceLoadingCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_ResourceLoadingCallback</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_ResourceLoadingCallback</qualifiedname>
        <briefdescription>
<para>Allows to control how external resources (images, style sheets) are loaded when a document is imported from HTML, MHTML. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to handle external resources when loading Html documents. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadOptionsCallback()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>loadOptions-&gt;set_ResourceLoadingCallback(MakeObject&lt;ExLoadOptions::HtmlLinkedResourceLoadingCallback&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>we<sp/>load<sp/>the<sp/>document,<sp/>our<sp/>callback<sp/>will<sp/>handle<sp/>linked<sp/>resources<sp/>such<sp/>as<sp/>CSS<sp/>stylesheets<sp/>and<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images.html&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;LoadOptions.LoadOptionsCallback.pdf&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">HtmlLinkedResourceLoadingCallback<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IResourceLoadingCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_loading_1a0148f1f69fe70035e9a93fed1f2e612b" kindref="member" tooltip="Specifies the mode of resource loading.">ResourceLoadingAction</ref><sp/>ResourceLoading(SharedPtr&lt;ResourceLoadingArgs&gt;<sp/>args)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(args-&gt;get_ResourceType())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ResourceType::CssStyleSheet:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;External<sp/>CSS<sp/>Stylesheet<sp/>found<sp/>upon<sp/>loading:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_OriginalUri()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResourceLoadingAction::Default;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ResourceType::Image:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;External<sp/>Image<sp/>found<sp/>upon<sp/>loading:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>args-&gt;get_OriginalUri()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>newImageFilename<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;Logo.jpg&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tImage<sp/>will<sp/>be<sp/>substituted<sp/>with:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>newImageFilename<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Drawing::Image&gt;<sp/>newImage<sp/>=<sp/><ref refid="class/system.drawing.image/_1a744ad35e2fcb00393fb7ce4e24e59263" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::Image::FromFile</ref>(ImageDir<sp/>+<sp/>newImageFilename);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>converter<sp/>=<sp/>MakeObject&lt;System::Drawing::ImageConverter&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayPtr&lt;uint8_t&gt;<sp/>imageBytes<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>System::DynamicCast&lt;System::Array&lt;uint8_t&gt;&gt;(converter-&gt;ConvertTo(newImage,<sp/><ref refid="class/system.object_ext/_1a8f1bf7e3abe1fa9d15316478dae26b94" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::GetType</ref>&lt;<ref refid="class/system.array/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Array&lt;uint8_t&gt;</ref>&gt;()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args-&gt;SetData(imageBytes);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResourceLoadingAction::UserProvided;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ResourceLoadingAction::Default;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="282" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ad04bb42d6713c0eabe62f28861b7c255" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Loading::LoadOptions::get_TempFolder</definition>
        <argsstring>() const</argsstring>
        <name>get_TempFolder</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_TempFolder</qualifiedname>
        <briefdescription>
<para>Allows to use temporary files when reading document. By default this property is <computeroutput>null</computeroutput> and no temporary files are used. </para>
        </briefdescription>
        <detaileddescription>
<para>The folder must exist and be writable, otherwise an exception will be thrown.</para>
<para>Aspose.Words automatically deletes all temporary files when reading is complete.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to load a document using temporary files. <programlisting><codeline><highlight class="comment">//<sp/>Note<sp/>that<sp/>such<sp/>an<sp/>approach<sp/>can<sp/>reduce<sp/>memory<sp/>usage<sp/>but<sp/>degrades<sp/>speed</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">loadOptions-&gt;set_TempFolder(u</highlight><highlight class="stringliteral">&quot;C:\\TempFolder\\&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ensure<sp/>that<sp/>the<sp/>directory<sp/>exists<sp/>and<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.i_o.directory/_1a2fdf34c13286610724abbd6207d618d7" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::CreateDirectory_</ref>(loadOptions-&gt;get_TempFolder());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
</programlisting></para>
<para>Shows how to use the hard drive instead of memory when loading a document. <programlisting><codeline><highlight class="comment">//<sp/>When<sp/>we<sp/>load<sp/>a<sp/>document,<sp/>various<sp/>elements<sp/>are<sp/>temporarily<sp/>stored<sp/>in<sp/>memory<sp/>as<sp/>the<sp/>save<sp/>operation<sp/>occurs.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>this<sp/>option<sp/>to<sp/>use<sp/>a<sp/>temporary<sp/>folder<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system<sp/>instead,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>will<sp/>reduce<sp/>our<sp/>application&apos;s<sp/>memory<sp/>overhead.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">options-&gt;set_TempFolder(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;TempFiles&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>specified<sp/>temporary<sp/>folder<sp/>must<sp/>exist<sp/>in<sp/>the<sp/>local<sp/>file<sp/>system<sp/>before<sp/>the<sp/>load<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="class/system.i_o.directory/_1a2fdf34c13286610724abbd6207d618d7" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::CreateDirectory_</ref>(options-&gt;get_TempFolder());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>folder<sp/>will<sp/>persist<sp/>with<sp/>no<sp/>residual<sp/>contents<sp/>from<sp/>the<sp/>load<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/><ref refid="class/system.i_o.directory/_1a175e3c7c67d67de4fc93cd54b8fb6f2d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::Directory::GetFiles</ref>(options-&gt;get_TempFolder())-&gt;get_Length());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="521" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1abdf376bce2596056c843228b3b430d8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Loading::LoadOptions::get_UpdateDirtyFields</definition>
        <argsstring>() const</argsstring>
        <name>get_UpdateDirtyFields</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_UpdateDirtyFields</qualifiedname>
        <briefdescription>
<para>Specifies whether to update the fields with the <computeroutput>dirty</computeroutput> attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use special property for updating field result. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Give<sp/>the<sp/>document&apos;s<sp/>built-in<sp/>&quot;Author&quot;<sp/>property<sp/>value,<sp/>and<sp/>then<sp/>display<sp/>it<sp/>with<sp/>a<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldAuthor&gt;(builder-&gt;InsertField(FieldType::FieldAuthor,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(field-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>property.<sp/>The<sp/>field<sp/>still<sp/>displays<sp/>the<sp/>old<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>&amp;<sp/>Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>field&apos;s<sp/>value<sp/>is<sp/>out<sp/>of<sp/>date,<sp/>we<sp/>can<sp/>mark<sp/>it<sp/>as<sp/>&quot;dirty&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>will<sp/>stay<sp/>out<sp/>of<sp/>date<sp/>until<sp/>we<sp/>update<sp/>the<sp/>field<sp/>manually<sp/>with<sp/>the<sp/>Field.Update()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_IsDirty(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>docStream<sp/>=<sp/>MakeObject&lt;System::IO::MemoryStream&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>save<sp/>without<sp/>calling<sp/>an<sp/>update<sp/>method,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>field<sp/>will<sp/>keep<sp/>displaying<sp/>the<sp/>out<sp/>of<sp/>date<sp/>value<sp/>in<sp/>the<sp/>output<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(docStream,<sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Saves the document as an Office Open XML WordprocessingML Document (macro-free).">SaveFormat::Docx</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>LoadOptions<sp/>object<sp/>has<sp/>an<sp/>option<sp/>to<sp/>update<sp/>all<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>marked<sp/>as<sp/>&quot;dirty&quot;<sp/>when<sp/>loading<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;Loading::LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_UpdateDirtyFields(updateDirtyFields);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>&amp;<sp/>Jane<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldAuthor&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updating<sp/>dirty<sp/>fields<sp/>like<sp/>this<sp/>automatically<sp/>set<sp/>their<sp/>&quot;IsDirty&quot;<sp/>flag<sp/>to<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateDirtyFields)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>&amp;<sp/>Jane<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(field-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(field-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="637" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a32191464471263de4bbd417d9ab8a1fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_i_warning_callback" kindref="compound">Aspose::Words::IWarningCallback</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::IWarningCallback &gt; Aspose::Words::Loading::LoadOptions::get_WarningCallback</definition>
        <argsstring>() const</argsstring>
        <name>get_WarningCallback</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::get_WarningCallback</qualifiedname>
        <briefdescription>
<para>Called during a load operation, when an issue is detected that might result in data or formatting fidelity loss. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to print and store warnings that occur during document loading. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadOptionsWarningCallback()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>LoadOptions<sp/>object<sp/>and<sp/>set<sp/>its<sp/>WarningCallback<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>an<sp/>instance<sp/>of<sp/>our<sp/>IWarningCallback<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>loadOptions-&gt;set_WarningCallback(MakeObject&lt;ExLoadOptions::DocumentLoadingWarningCallback&gt;());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>callback<sp/>will<sp/>print<sp/>all<sp/>warnings<sp/>that<sp/>come<sp/>up<sp/>during<sp/>the<sp/>load<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;WarningInfo&gt;&gt;&gt;<sp/>warnings<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(System::StaticCast&lt;ApiExamples::ExLoadOptions::DocumentLoadingWarningCallback&gt;(loadOptions-&gt;get_WarningCallback()))-&gt;GetWarnings();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(3,<sp/>warnings-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">DocumentLoadingWarningCallback<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IWarningCallback</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Warning(SharedPtr&lt;WarningInfo&gt;<sp/>info)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;Warning:<sp/>{0}&quot;</highlight><highlight class="normal">,<sp/>info-&gt;get_WarningType())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;\tSource:<sp/>{0}&quot;</highlight><highlight class="normal">,<sp/>info-&gt;get_Source())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tDescription:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>info-&gt;get_Description()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWarnings-&gt;Add(info);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;WarningInfo&gt;&gt;&gt;<sp/>GetWarnings()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mWarnings;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DocumentLoadingWarningCallback()<sp/>:<sp/>mWarnings(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">SharedPtr</ref>&lt;WarningInfo&gt;&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;SharedPtr&lt;WarningInfo&gt;&gt;&gt;<sp/>mWarnings;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="335" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0355c11ce2a280ee61e1c0ce0ded1c46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_BaseUri</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_BaseUri</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_BaseUri</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0196af2dffdd53f6de6416c30f4cd89e" kindref="member">Aspose::Words::Loading::LoadOptions::get_BaseUri</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="190" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a4a49308e39ac82aa0644d0a19659f19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_ConvertMetafilesToPng</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ConvertMetafilesToPng</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_ConvertMetafilesToPng</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ad67318fd720912ba8460d0d8635be0d7" kindref="member">Aspose::Words::Loading::LoadOptions::get_ConvertMetafilesToPng</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="556" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1afd53c076e3abecee44064e9e070ebc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_ConvertShapeToOfficeMath</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_ConvertShapeToOfficeMath</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_ConvertShapeToOfficeMath</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8a305c7ca7de0a900148187c3a1e6ad3" kindref="member">Aspose::Words::Loading::LoadOptions::get_ConvertShapeToOfficeMath</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="428" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1aeb49b43099f8965bd5b9871bbf3eca0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_Encoding</definition>
        <argsstring>(const System::SharedPtr&lt; System::Text::Encoding &gt; &amp;value)</argsstring>
        <name>set_Encoding</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_Encoding</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.text.encoding/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a1f024832c893f116802c60059ce25b13" kindref="member">Aspose::Words::Loading::LoadOptions::get_Encoding</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="230" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a53348e0de0f1d6aa102973c694b0485a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_FlatOpcXmlMappingOnly</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_FlatOpcXmlMappingOnly</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_FlatOpcXmlMappingOnly</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets value determining which document formats are allowed to be mapped by <ref refid="class_aspose_1_1_words_1_1_markup_1_1_structured_document_tag_1a4203e8372241c9b5c1d915b2a224c194" kindref="member">XmlMapping</ref>. By default only <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a2b7085a73e76e581d28543a39fb2b981" kindref="member">FlatOpc</ref> document format is allowed to be mapped. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="667" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a30f0211cd9e716036863efa5ce804de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_FontSettings</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Fonts::FontSettings &gt; &amp;value)</argsstring>
        <name>set_FontSettings</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_FontSettings</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_settings" kindref="compound">Aspose::Words::Fonts::FontSettings</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a566b10007e64036a66710bf18d55a2a6" kindref="member">Aspose::Words::Loading::LoadOptions::get_FontSettings</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="482" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a90d031c6751e7b2706001bf11a1629cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_LoadFormat</definition>
        <argsstring>(Aspose::Words::LoadFormat value)</argsstring>
        <name>set_LoadFormat</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_LoadFormat</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1af9522ca2c1dd6eb41ce67d2e83640b16" kindref="member">Aspose::Words::Loading::LoadOptions::get_LoadFormat</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="124" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a816c70f5ed2d94a32504abda898f303e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_MswVersion</definition>
        <argsstring>(Aspose::Words::Settings::MsWordVersion value)</argsstring>
        <name>set_MswVersion</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_MswVersion</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_settings_1a1408d4dfce0c45481036f9c1f8842d00" kindref="member">Aspose::Words::Settings::MsWordVersion</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a4a35a3b868f2b012e17397b0e2f7727b" kindref="member">Aspose::Words::Loading::LoadOptions::get_MswVersion</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="581" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1afaba9f3eae741e632396a777dcb1ef6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_Password</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Password</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_Password</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a1a45522476e3ce872d60c1adfc59fffd" kindref="member">Aspose::Words::Loading::LoadOptions::get_Password</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="153" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a65ccb68d9d17a3acfdf0092b3af58d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_PreserveIncludePictureField</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_PreserveIncludePictureField</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_PreserveIncludePictureField</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a506351eadee7e43bb85df5f2d79addb4" kindref="member">Aspose::Words::Loading::LoadOptions::get_PreserveIncludePictureField</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="398" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a130e26077aab2b3865dbeca9e0b34a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_ProgressCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Loading::IDocumentLoadingCallback &gt; &amp;value)</argsstring>
        <name>set_ProgressCallback</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_ProgressCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_loading_1_1_i_document_loading_callback" kindref="compound">Aspose::Words::Loading::IDocumentLoadingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Called during loading a document and accepts data about loading progress. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member">Docx</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a2b7085a73e76e581d28543a39fb2b981" kindref="member">FlatOpc</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52ae4a760f39d051de12fe119230787cf31" kindref="member">Docm</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9ade78f4046d6517a2b17884c1307845" kindref="member">Dotm</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52af677eacaea0757778d5ae6a5c7b6b33f" kindref="member">Dotx</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a2182a74bab7188d959e795d9301e87ff" kindref="member">Markdown</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aca9a0e8f64d43d81dd7b0225ea1b19c5" kindref="member">Rtf</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52ad3fc933a3ff97915dd1fa4b6c524230e" kindref="member">WordML</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member">Doc</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aaf6c6cf7a454b4ef4a850ac4d960a2cc" kindref="member">Dot</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a62830bddfb361d1fe469dd20145f9e8b" kindref="member">Odt</ref>, <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52af70f04f40f6b423ddfc11b1d8c6829d9" kindref="member">Ott</ref> formats supported. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="348" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a7df189ed6d4c201066c5e1732d558dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_ResourceLoadingCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::Loading::IResourceLoadingCallback &gt; &amp;value)</argsstring>
        <name>set_ResourceLoadingCallback</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_ResourceLoadingCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_loading_1_1_i_resource_loading_callback" kindref="compound">Aspose::Words::Loading::IResourceLoadingCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab965badd27ded5b5bfd2507e93fbcbb8" kindref="member">Aspose::Words::Loading::LoadOptions::get_ResourceLoadingCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="285" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a5396b6b04fe87ecfb44db45c5f11934a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_TempFolder</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_TempFolder</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_TempFolder</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ad04bb42d6713c0eabe62f28861b7c255" kindref="member">Aspose::Words::Loading::LoadOptions::get_TempFolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="524" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a02643bf16d0e82a06d3cedab3f49ad65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_UpdateDirtyFields</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_UpdateDirtyFields</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_UpdateDirtyFields</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1abdf376bce2596056c843228b3b430d8b" kindref="member">Aspose::Words::Loading::LoadOptions::get_UpdateDirtyFields</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="640" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a3651e35cc9b2ceb5e88f4eaaae8ed397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Loading::LoadOptions::set_WarningCallback</definition>
        <argsstring>(const System::SharedPtr&lt; Aspose::Words::IWarningCallback &gt; &amp;value)</argsstring>
        <name>set_WarningCallback</name>
        <qualifiedname>Aspose::Words::Loading::LoadOptions::set_WarningCallback</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_i_warning_callback" kindref="compound">Aspose::Words::IWarningCallback</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a32191464471263de4bbd417d9ab8a1fb" kindref="member">Aspose::Words::Loading::LoadOptions::get_WarningCallback</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="338" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows to specify additional options (such as password or base URI) when loading a document into a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> object. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to load an encrypted Microsoft Word document. <programlisting><codeline><highlight class="normal">SharedPtr&lt;Document&gt;<sp/>doc;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Aspose.Words<sp/>throw<sp/>an<sp/>exception<sp/>if<sp/>we<sp/>try<sp/>to<sp/>open<sp/>an<sp/>encrypted<sp/>document<sp/>without<sp/>its<sp/>password.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">),<sp/><ref refid="namespace_aspose_1_1_words_1a69d5ddc9f0a7b4c2dfd356817c3be538" kindref="member" tooltip="Thrown if a document is encrypted with a password and the password specified when opening the documen...">IncorrectPasswordException</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>loading<sp/>such<sp/>a<sp/>document,<sp/>the<sp/>password<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>document&apos;s<sp/>constructor<sp/>using<sp/>a<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;LoadOptions&gt;(u</highlight><highlight class="stringliteral">&quot;docPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>loading<sp/>an<sp/>encrypted<sp/>document<sp/>with<sp/>a<sp/>LoadOptions<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Load<sp/>the<sp/>document<sp/>from<sp/>the<sp/>local<sp/>file<sp/>system<sp/>by<sp/>filename:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Load<sp/>the<sp/>document<sp/>from<sp/>a<sp/>stream:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::Stream&gt;<sp/>stream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Encrypted.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(stream,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Aspose::Words::Loading::ChmLoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_chm_load_options"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Loading::HtmlLoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_html_load_options"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Aspose::Words::Loading::LoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_load_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Aspose::Words::Loading::PdfLoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_pdf_load_options"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Aspose::Words::Loading::RtfLoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_rtf_load_options"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Aspose::Words::Loading::TxtLoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_txt_load_options"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Loading::LoadOptions</label>
        <link refid="class_aspose_1_1_words_1_1_loading_1_1_load_options"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Loading/LoadOptions.h" line="82" column="1" bodyfile="Aspose.Words.Cpp/Loading/LoadOptions.h" bodystart="83" bodyend="803"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1af5407131d6084848b661cbd0ac39c203" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a609b68c3016b5a72bdcd4761689c0db6" prot="private" virt="virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>Clone</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0196af2dffdd53f6de6416c30f4cd89e" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_BaseUri</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ad67318fd720912ba8460d0d8635be0d7" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_ConvertMetafilesToPng</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8a305c7ca7de0a900148187c3a1e6ad3" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_ConvertShapeToOfficeMath</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a1f024832c893f116802c60059ce25b13" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_Encoding</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ae4da81e82a1ca5a3231b72f746a7986f" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_FlatOpcXmlMappingOnly</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a566b10007e64036a66710bf18d55a2a6" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_FontSettings</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1adb7ec99702984a8b14a0364593447d5f" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_LanguagePreferences</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1af9522ca2c1dd6eb41ce67d2e83640b16" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_LoadFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a4a35a3b868f2b012e17397b0e2f7727b" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_MswVersion</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a1a45522476e3ce872d60c1adfc59fffd" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_Password</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a506351eadee7e43bb85df5f2d79addb4" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_PreserveIncludePictureField</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1acf271e71b7f8b3bf99c6b954a2930d4d" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_ProgressCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab965badd27ded5b5bfd2507e93fbcbb8" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_ResourceLoadingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ad04bb42d6713c0eabe62f28861b7c255" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_TempFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1abdf376bce2596056c843228b3b430d8b" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_UpdateDirtyFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a32191464471263de4bbd417d9ab8a1fb" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>get_WarningCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a91cce95575b98c82e8eea81af037508d" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>LoadOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a6d13f827b12c2b6048576119fe2f2814" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>LoadOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab21ac0bed2d8c794e2021c36cc0f266d" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>LoadOptions</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a9a5e49e5b2248b5518f3f125b276dea9" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1afbdb1f7160ab0cffcad85f56bd9c8b2e" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a99950e36148d096473f31bc5a269f0c0" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField10</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a9fa1a379b54db7b3def59cb93c66cfc3" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField11</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1aa7a4856c3e745b4d453d8342aa6ac5bf" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField12</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a54b9a1f0e730acad8a4871de68fcac0b" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField13</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a64850985d748bb3901d53b114b56d10b" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField14</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ac10ad32ae8ce060ddb157ccd62fa4a1a" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField15</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1aa54b8233946717ba25b7a0ade212d823" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField16</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ace88352df2d3094d703d19480eaed329" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField17</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a83910ba30be3544d57b7ebacb3c17034" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField18</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a5ebb3bced1c1f3e08be8ffb31436005e" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField19</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a2f1df65de3acb21a1eef42ed535ccb17" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a6207245149b09ba3a029213f5a19d121" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField20</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1abd1ff60cfe7f8270b092d88196b123d2" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ada570911b5ff156ecaf95777abc12e31" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a94ca817cc4ff49004e68f3be0cada7ff" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0450245edd8ad0e70745306ed4d2a52e" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8018ebc0999543e4c354dfd063851f97" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a36a45456a092b64f0c9d3bc5bc2d9fc3" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField8</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a7b520a502e4b1eed52d5da83c3358a08" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>mField9</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ab292d00ea616e27b8a21bd1b423c7c0d" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a0355c11ce2a280ee61e1c0ce0ded1c46" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_BaseUri</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a4a49308e39ac82aa0644d0a19659f19e" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_ConvertMetafilesToPng</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1afd53c076e3abecee44064e9e070ebc42" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_ConvertShapeToOfficeMath</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1aeb49b43099f8965bd5b9871bbf3eca0e" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_Encoding</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a53348e0de0f1d6aa102973c694b0485a" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_FlatOpcXmlMappingOnly</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a30f0211cd9e716036863efa5ce804de0" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_FontSettings</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a90d031c6751e7b2706001bf11a1629cd" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_LoadFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a816c70f5ed2d94a32504abda898f303e" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_MswVersion</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1afaba9f3eae741e632396a777dcb1ef6c" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_Password</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a65ccb68d9d17a3acfdf0092b3af58d8b" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_PreserveIncludePictureField</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a130e26077aab2b3865dbeca9e0b34a5c" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_ProgressCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a7df189ed6d4c201066c5e1732d558dae" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_ResourceLoadingCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a5396b6b04fe87ecfb44db45c5f11934a" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_TempFolder</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a02643bf16d0e82a06d3cedab3f49ad65" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_UpdateDirtyFields</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a3651e35cc9b2ceb5e88f4eaaae8ed397" prot="public" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>set_WarningCallback</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1adae1c5d21919626a98568f4ece60e09e" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1ae0d6eb6565822c1b46a58c456e63724a" prot="private" virt="non-virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_loading_1_1_load_options_1a8e71ed9b72e2c6cc8a1504748217953f" prot="private" virt="virtual"><scope>Aspose::Words::Loading::LoadOptions</scope><name>~LoadOptions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
