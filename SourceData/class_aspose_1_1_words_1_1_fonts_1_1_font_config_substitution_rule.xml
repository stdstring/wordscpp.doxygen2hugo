<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fonts::FontConfigSubstitutionRule</compoundname>
    <basecompoundref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule" prot="public" virt="non-virtual">Aspose::Words::Fonts::FontSubstitutionRule</basecompoundref>
    <includes refid="_font_config_substitution_rule_8h" local="no">Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a2caa7b1d751447fdfc2a8fdcbed5f468" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule" kindref="compound">Aspose::Words::Fonts::FontSubstitutionRule</ref></type>
        <definition>typedef Aspose::Words::Fonts::FontSubstitutionRule Aspose::Words::Fonts::FontConfigSubstitutionRule::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="92" column="56" bodyfile="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a8b37f6fe48747fb812bb5c8ede06ca82" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule" kindref="compound">FontConfigSubstitutionRule</ref></type>
        <definition>typedef FontConfigSubstitutionRule Aspose::Words::Fonts::FontConfigSubstitutionRule::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="91" column="40" bodyfile="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1ab67e55d02e1428af92faa1e040338c05" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule" kindref="compound">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Fonts::FontConfigSubstitutionRule::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="94" column="37" bodyfile="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a4a0a44cb1c7aa54b842a88c9d02ab4d4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fonts::FontConfigSubstitutionRule::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="207" column="23" bodyfile="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a19670ea18b42b3ba6003a6a9aa2b89c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Fonts::TrueType::TTFont &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Fonts::TrueType::TTFont &gt; Aspose::Words::Fonts::FontConfigSubstitutionRule::PerformSubstitutionCore</definition>
        <argsstring>(System::String, System::Drawing::FontStyle, System::SharedPtr&lt; Aspose::Words::Fonts::FontInfo &gt;, System::SharedPtr&lt; Aspose::Fonts::ExternalFontCache &gt;) override</argsstring>
        <name>PerformSubstitutionCore</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::PerformSubstitutionCore</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule_1a1860414de7d12eb748717230738b1472">PerformSubstitutionCore</reimplements>
        <param>
          <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        </param>
        <param>
          <type><ref refid="namespace/system.drawing/_1a6c1fe3c1830d158116f3729801cd7b49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Drawing::FontStyle</ref></type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fonts_1_1_font_info" kindref="compound">Aspose::Words::Fonts::FontInfo</ref> &gt;</type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Fonts::ExternalFontCache &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="203" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a1c3b77c7fd5f12ffd2774b2461ca8026" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fonts::FontConfigSubstitutionRule::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="95" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a1b31d6f5b8445cdb27cd0d98b8a927e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fonts::FontConfigSubstitutionRule::IsFontConfigAvailable</definition>
        <argsstring>()</argsstring>
        <name>IsFontConfigAvailable</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::IsFontConfigAvailable</qualifiedname>
        <briefdescription>
<para>Check if fontconfig utility is available or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows operating system-dependent font config substitution. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FontConfigSubstitutionRule&gt;<sp/>fontConfigSubstitution<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_FontConfigSubstitution();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace/system/_1a9326d04561ea76c1b9ed2866512bce58" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::PlatformID</ref><sp/>pid<sp/>=<sp/><ref refid="struct/system.environment/_1a8e941e4180a8e017dc874d8bddd7f66a" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Environment::get_OSVersion</ref>().get_Platform();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWindows<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32NT)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32S)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32Windows)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pid<sp/>==<sp/>System::PlatformID::WinCE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>FontConfigSubstitutionRule<sp/>object<sp/>works<sp/>differently<sp/>on<sp/>Windows/non-Windows<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>it<sp/>is<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWindows)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinuxOrMac<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Unix)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::MacOSX);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Linux/Mac,<sp/>we<sp/>will<sp/>have<sp/>access<sp/>to<sp/>it,<sp/>and<sp/>will<sp/>be<sp/>able<sp/>to<sp/>perform<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinuxOrMac)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontConfigSubstitution-&gt;ResetCache();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="165" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a336c688c629ccb8f71dc0d70bea03318" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fonts::FontConfigSubstitutionRule::ResetCache</definition>
        <argsstring>()</argsstring>
        <name>ResetCache</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::ResetCache</qualifiedname>
        <briefdescription>
<para>Resets the cache of fontconfig calling results. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows operating system-dependent font config substitution. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FontConfigSubstitutionRule&gt;<sp/>fontConfigSubstitution<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_FontConfigSubstitution();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace/system/_1a9326d04561ea76c1b9ed2866512bce58" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::PlatformID</ref><sp/>pid<sp/>=<sp/><ref refid="struct/system.environment/_1a8e941e4180a8e017dc874d8bddd7f66a" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Environment::get_OSVersion</ref>().get_Platform();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWindows<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32NT)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32S)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32Windows)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pid<sp/>==<sp/>System::PlatformID::WinCE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>FontConfigSubstitutionRule<sp/>object<sp/>works<sp/>differently<sp/>on<sp/>Windows/non-Windows<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>it<sp/>is<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWindows)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinuxOrMac<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Unix)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::MacOSX);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Linux/Mac,<sp/>we<sp/>will<sp/>have<sp/>access<sp/>to<sp/>it,<sp/>and<sp/>will<sp/>be<sp/>able<sp/>to<sp/>perform<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinuxOrMac)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontConfigSubstitution-&gt;ResetCache();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="199" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1acec2b742fba9d3e088ca43b7eb9c4f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fonts::FontConfigSubstitutionRule::set_Enabled</definition>
        <argsstring>(bool value) override</argsstring>
        <name>set_Enabled</name>
        <qualifiedname>Aspose::Words::Fonts::FontConfigSubstitutionRule::set_Enabled</qualifiedname>
        <reimplements refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule_1a6122d5e51e1de88d2430c9db1262105f">set_Enabled</reimplements>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Specifies whether the rule is enabled or not. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows operating system-dependent font config substitution. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FontConfigSubstitutionRule&gt;<sp/>fontConfigSubstitution<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_FontConfigSubstitution();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace/system/_1a9326d04561ea76c1b9ed2866512bce58" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::PlatformID</ref><sp/>pid<sp/>=<sp/><ref refid="struct/system.environment/_1a8e941e4180a8e017dc874d8bddd7f66a" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Environment::get_OSVersion</ref>().get_Platform();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWindows<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32NT)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32S)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32Windows)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pid<sp/>==<sp/>System::PlatformID::WinCE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>FontConfigSubstitutionRule<sp/>object<sp/>works<sp/>differently<sp/>on<sp/>Windows/non-Windows<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>it<sp/>is<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWindows)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinuxOrMac<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Unix)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::MacOSX);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Linux/Mac,<sp/>we<sp/>will<sp/>have<sp/>access<sp/>to<sp/>it,<sp/>and<sp/>will<sp/>be<sp/>able<sp/>to<sp/>perform<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinuxOrMac)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontConfigSubstitution-&gt;ResetCache();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="131" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_aspose_1_1_words_1_1_font" kindref="compound">Font</ref> config substitution rule. </para>
    </briefdescription>
    <detaileddescription>
<para>This rule uses fontconfig utility on Linux (and other Unix-like) platforms to get the substitution if the original font is not available.</para>
<para>If fontconfig utility is not available then this rule will be ignored.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows operating system-dependent font config substitution. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fontSettings<sp/>=<sp/>MakeObject&lt;FontSettings&gt;();</highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FontConfigSubstitutionRule&gt;<sp/>fontConfigSubstitution<sp/>=<sp/>fontSettings-&gt;get_SubstitutionSettings()-&gt;get_FontConfigSubstitution();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace/system/_1a9326d04561ea76c1b9ed2866512bce58" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::PlatformID</ref><sp/>pid<sp/>=<sp/><ref refid="struct/system.environment/_1a8e941e4180a8e017dc874d8bddd7f66a" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Environment::get_OSVersion</ref>().get_Platform();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isWindows<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32NT)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32S)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::Win32Windows)<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pid<sp/>==<sp/>System::PlatformID::WinCE);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>FontConfigSubstitutionRule<sp/>object<sp/>works<sp/>differently<sp/>on<sp/>Windows/non-Windows<sp/>platforms.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Windows,<sp/>it<sp/>is<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isWindows)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_FALSE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isLinuxOrMac<sp/>=<sp/>(pid<sp/>==<sp/>System::PlatformID::Unix)<sp/>||<sp/>(pid<sp/>==<sp/>System::PlatformID::MacOSX);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>Linux/Mac,<sp/>we<sp/>will<sp/>have<sp/>access<sp/>to<sp/>it,<sp/>and<sp/>will<sp/>be<sp/>able<sp/>to<sp/>perform<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isLinuxOrMac)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;get_Enabled());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_TRUE(fontConfigSubstitution-&gt;IsFontConfigAvailable());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fontConfigSubstitution-&gt;ResetCache();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Fonts::FontConfigSubstitutionRule</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Fonts::FontSubstitutionRule</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Fonts::FontConfigSubstitutionRule</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Aspose::Words::Fonts::FontSubstitutionRule</label>
        <link refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" line="89" column="1" bodyfile="Aspose.Words.Cpp/Fonts/FontConfigSubstitutionRule.h" bodystart="90" bodyend="209"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a2caa7b1d751447fdfc2a8fdcbed5f468" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_substitution_rule_1ac19c2d1d1cde9e95cb6ed666bbf5366c" prot="public" virt="virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>get_Enabled</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a1b31d6f5b8445cdb27cd0d98b8a927e6" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>IsFontConfigAvailable</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a4a0a44cb1c7aa54b842a88c9d02ab4d4" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a19670ea18b42b3ba6003a6a9aa2b89c7" prot="private" virt="virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>PerformSubstitutionCore</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a336c688c629ccb8f71dc0d70bea03318" prot="public" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>ResetCache</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a1c3b77c7fd5f12ffd2774b2461ca8026" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1acec2b742fba9d3e088ca43b7eb9c4f5f" prot="public" virt="virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>set_Enabled</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1a8b37f6fe48747fb812bb5c8ede06ca82" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fonts_1_1_font_config_substitution_rule_1ab67e55d02e1428af92faa1e040338c05" prot="private" virt="non-virtual"><scope>Aspose::Words::Fonts::FontConfigSubstitutionRule</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
