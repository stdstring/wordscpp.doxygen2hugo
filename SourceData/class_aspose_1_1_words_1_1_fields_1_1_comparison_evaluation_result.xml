<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Aspose::Words::Fields::ComparisonEvaluationResult</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_comparison_evaluation_result_8h" local="no">Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0cb1530b785c06bbe2e1cc0df4310d02" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Fields::ComparisonEvaluationResult::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="104" column="28" bodyfile="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1aa8409473ac6c304d48bce0b267d5c7a8" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result" kindref="compound">ComparisonEvaluationResult</ref></type>
        <definition>typedef ComparisonEvaluationResult Aspose::Words::Fields::ComparisonEvaluationResult::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="103" column="40" bodyfile="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0a067e822d623df096e60b02542c0dde" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Fields::ComparisonEvaluationResult::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="106" column="37" bodyfile="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a9ee143df400d1ea6138edb474567f8d6" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::Fields::ComparisonEvaluationResult::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="283" column="23" bodyfile="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1aa16e51f4c912df4cfc880e0a2dcc505d" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::ComparisonEvaluationResult::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="284" column="20" bodyfile="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d639a4660efdc295075c7441ec56e3f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::ComparisonEvaluationResult::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="107" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d22c567b39cff30cc73ad4f48047f6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::ComparisonEvaluationResult::ComparisonEvaluationResult</definition>
        <argsstring>(bool result)</argsstring>
        <name>ComparisonEvaluationResult</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::ComparisonEvaluationResult</qualifiedname>
        <param>
          <type>bool</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Creates a comparison evaluation result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to implement custom evaluation for the IF and COMPARE fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConditionEvaluationExtensionPoint(String<sp/>fieldCode,<sp/>int8_t<sp/>comparisonResult,<sp/>String<sp/>comparisonError,<sp/>String<sp/>expectedResult)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>left<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;left<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>operator_<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>right<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;right<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Field<sp/>codes<sp/>that<sp/>we<sp/>use<sp/>in<sp/>this<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/><sp/><sp/>&quot;<sp/>IF<sp/>{0}<sp/>{1}<sp/>{2}<sp/>\&quot;true<sp/>argument\&quot;<sp/>\&quot;false<sp/>argument\&quot;<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/><sp/><sp/>&quot;<sp/>COMPARE<sp/>{0}<sp/>{1}<sp/>{2}<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(String::Format(fieldCode,<sp/>left,<sp/>operator_,<sp/>right),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>&quot;comparisonResult&quot;<sp/>is<sp/>undefined,<sp/>we<sp/>create<sp/>&quot;ComparisonEvaluationResult&quot;<sp/>with<sp/>string,<sp/>instead<sp/>of<sp/>bool.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result<sp/>=<sp/>comparisonResult<sp/>!=<sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>MakeObject&lt;ComparisonEvaluationResult&gt;(comparisonResult<sp/>==<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comparisonError<sp/>!=<sp/>nullptr<sp/>?<sp/><ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;<ref refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d22c567b39cff30cc73ad4f48047f6b" kindref="member" tooltip="Creates a comparison evaluation result.">ComparisonEvaluationResult</ref>&gt;(comparisonError)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluator<sp/>=<sp/>MakeObject&lt;ExField::ComparisonExpressionEvaluator&gt;(result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;get_FieldOptions()-&gt;set_ComparisonExpressionEvaluator(evaluator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(expectedResult,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>evaluator-&gt;AssertInvocationsCount(1)-&gt;AssertInvocationArguments(0,<sp/>left,<sp/>operator_,<sp/>right);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">ComparisonExpressionEvaluator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IComparisonExpressionEvaluator</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ComparisonExpressionEvaluator(SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mInvocations(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">ArrayPtr</ref>&lt;<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>&gt;&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mResult<sp/>=<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>Evaluate(SharedPtr&lt;Field&gt;<sp/>field,<sp/>SharedPtr&lt;ComparisonExpression&gt;<sp/>expression)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInvocations-&gt;Add(MakeArray&lt;String&gt;({expression-&gt;get_LeftExpression(),<sp/>expression-&gt;get_ComparisonOperator(),<sp/>expression-&gt;get_RightExpression()}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationsCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expected,<sp/>mInvocations-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationArguments(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invocationIndex,<sp/>String<sp/>expectedLeftExpression,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>expectedComparisonOperator,<sp/>String<sp/>expectedRightExpression)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayPtr&lt;String&gt;<sp/>arguments<sp/>=<sp/>mInvocations-&gt;idx_get(invocationIndex);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedLeftExpression,<sp/>arguments[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedComparisonOperator,<sp/>arguments[1]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedRightExpression,<sp/>arguments[2]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~ComparisonExpressionEvaluator()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;ArrayPtr&lt;String&gt;&gt;&gt;<sp/>mInvocations;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="197" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a96553a7a3159b911741b8390338b3597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::ComparisonEvaluationResult::ComparisonEvaluationResult</definition>
        <argsstring>(const System::String &amp;errorMessage)</argsstring>
        <name>ComparisonEvaluationResult</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::ComparisonEvaluationResult</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>errorMessage</declname>
        </param>
        <briefdescription>
<para>Creates a failed comparison evaluation result with the corresponding error message. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to implement custom evaluation for the IF and COMPARE fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConditionEvaluationExtensionPoint(String<sp/>fieldCode,<sp/>int8_t<sp/>comparisonResult,<sp/>String<sp/>comparisonError,<sp/>String<sp/>expectedResult)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>left<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;left<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>operator_<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>right<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;right<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Field<sp/>codes<sp/>that<sp/>we<sp/>use<sp/>in<sp/>this<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/><sp/><sp/>&quot;<sp/>IF<sp/>{0}<sp/>{1}<sp/>{2}<sp/>\&quot;true<sp/>argument\&quot;<sp/>\&quot;false<sp/>argument\&quot;<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/><sp/><sp/>&quot;<sp/>COMPARE<sp/>{0}<sp/>{1}<sp/>{2}<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(String::Format(fieldCode,<sp/>left,<sp/>operator_,<sp/>right),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>&quot;comparisonResult&quot;<sp/>is<sp/>undefined,<sp/>we<sp/>create<sp/>&quot;ComparisonEvaluationResult&quot;<sp/>with<sp/>string,<sp/>instead<sp/>of<sp/>bool.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result<sp/>=<sp/>comparisonResult<sp/>!=<sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>MakeObject&lt;ComparisonEvaluationResult&gt;(comparisonResult<sp/>==<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comparisonError<sp/>!=<sp/>nullptr<sp/>?<sp/><ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;<ref refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d22c567b39cff30cc73ad4f48047f6b" kindref="member" tooltip="Creates a comparison evaluation result.">ComparisonEvaluationResult</ref>&gt;(comparisonError)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluator<sp/>=<sp/>MakeObject&lt;ExField::ComparisonExpressionEvaluator&gt;(result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;get_FieldOptions()-&gt;set_ComparisonExpressionEvaluator(evaluator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(expectedResult,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>evaluator-&gt;AssertInvocationsCount(1)-&gt;AssertInvocationArguments(0,<sp/>left,<sp/>operator_,<sp/>right);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">ComparisonExpressionEvaluator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IComparisonExpressionEvaluator</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ComparisonExpressionEvaluator(SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mInvocations(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">ArrayPtr</ref>&lt;<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>&gt;&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mResult<sp/>=<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>Evaluate(SharedPtr&lt;Field&gt;<sp/>field,<sp/>SharedPtr&lt;ComparisonExpression&gt;<sp/>expression)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInvocations-&gt;Add(MakeArray&lt;String&gt;({expression-&gt;get_LeftExpression(),<sp/>expression-&gt;get_ComparisonOperator(),<sp/>expression-&gt;get_RightExpression()}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationsCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expected,<sp/>mInvocations-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationArguments(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invocationIndex,<sp/>String<sp/>expectedLeftExpression,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>expectedComparisonOperator,<sp/>String<sp/>expectedRightExpression)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayPtr&lt;String&gt;<sp/>arguments<sp/>=<sp/>mInvocations-&gt;idx_get(invocationIndex);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedLeftExpression,<sp/>arguments[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedComparisonOperator,<sp/>arguments[1]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedRightExpression,<sp/>arguments[2]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~ComparisonExpressionEvaluator()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;ArrayPtr&lt;String&gt;&gt;&gt;<sp/>mInvocations;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="279" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1ae9185f83d0613d915f50a8662507ed7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::ComparisonEvaluationResult::get_ErrorMessage</definition>
        <argsstring>() const</argsstring>
        <name>get_ErrorMessage</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::get_ErrorMessage</qualifiedname>
        <briefdescription>
<para>Gets the failed comparison evaluation result&apos;s error message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="115" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1af40547ffa25042c07a7ebf39aea0474d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::ComparisonEvaluationResult::get_Result</definition>
        <argsstring>() const</argsstring>
        <name>get_Result</name>
        <qualifiedname>Aspose::Words::Fields::ComparisonEvaluationResult::get_Result</qualifiedname>
        <briefdescription>
<para>Gets the comparison evaluation result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="112" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The comparison evaluation result. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to implement custom evaluation for the IF and COMPARE fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ConditionEvaluationExtensionPoint(String<sp/>fieldCode,<sp/>int8_t<sp/>comparisonResult,<sp/>String<sp/>comparisonError,<sp/>String<sp/>expectedResult)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>left<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;left<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>operator_<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>right<sp/>=<sp/>u</highlight><highlight class="stringliteral">&quot;\&quot;right<sp/>expression\&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Field<sp/>codes<sp/>that<sp/>we<sp/>use<sp/>in<sp/>this<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1.<sp/><sp/><sp/>&quot;<sp/>IF<sp/>{0}<sp/>{1}<sp/>{2}<sp/>\&quot;true<sp/>argument\&quot;<sp/>\&quot;false<sp/>argument\&quot;<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.<sp/><sp/><sp/>&quot;<sp/>COMPARE<sp/>{0}<sp/>{1}<sp/>{2}<sp/>&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(String::Format(fieldCode,<sp/>left,<sp/>operator_,<sp/>right),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>&quot;comparisonResult&quot;<sp/>is<sp/>undefined,<sp/>we<sp/>create<sp/>&quot;ComparisonEvaluationResult&quot;<sp/>with<sp/>string,<sp/>instead<sp/>of<sp/>bool.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result<sp/>=<sp/>comparisonResult<sp/>!=<sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>MakeObject&lt;ComparisonEvaluationResult&gt;(comparisonResult<sp/>==<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comparisonError<sp/>!=<sp/>nullptr<sp/>?<sp/><ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;<ref refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d22c567b39cff30cc73ad4f48047f6b" kindref="member" tooltip="Creates a comparison evaluation result.">ComparisonEvaluationResult</ref>&gt;(comparisonError)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evaluator<sp/>=<sp/>MakeObject&lt;ExField::ComparisonExpressionEvaluator&gt;(result);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;get_FieldOptions()-&gt;set_ComparisonExpressionEvaluator(evaluator);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;get_Document()-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(expectedResult,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>evaluator-&gt;AssertInvocationsCount(1)-&gt;AssertInvocationArguments(0,<sp/>left,<sp/>operator_,<sp/>right);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">ComparisonExpressionEvaluator<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>IComparisonExpressionEvaluator</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ComparisonExpressionEvaluator(SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>result)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mInvocations(<ref refid="namespace/system/_1a5847b0709cd1220134e32db545a670f3" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">MakeObject</ref>&lt;System::Collections::Generic::<ref refid="namespace/system.collections.generic/_1a7ec398a591f371359828b1eb724b34d4" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">List</ref>&lt;<ref refid="namespace/system/_1a64e8d7c8f13f967748bdd283b4062425" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">ArrayPtr</ref>&lt;<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>&gt;&gt;&gt;())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mResult<sp/>=<sp/>result;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>Evaluate(SharedPtr&lt;Field&gt;<sp/>field,<sp/>SharedPtr&lt;ComparisonExpression&gt;<sp/>expression)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInvocations-&gt;Add(MakeArray&lt;String&gt;({expression-&gt;get_LeftExpression(),<sp/>expression-&gt;get_ComparisonOperator(),<sp/>expression-&gt;get_RightExpression()}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationsCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expected)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expected,<sp/>mInvocations-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ExField::ComparisonExpressionEvaluator&gt;<sp/>AssertInvocationArguments(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>invocationIndex,<sp/>String<sp/>expectedLeftExpression,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>expectedComparisonOperator,<sp/>String<sp/>expectedRightExpression)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArrayPtr&lt;String&gt;<sp/>arguments<sp/>=<sp/>mInvocations-&gt;idx_get(invocationIndex);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedLeftExpression,<sp/>arguments[0]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedComparisonOperator,<sp/>arguments[1]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPECT_EQ(expectedRightExpression,<sp/>arguments[2]);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>System::MakeSharedPtr(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~ComparisonExpressionEvaluator()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;ComparisonEvaluationResult&gt;<sp/>mResult;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::List&lt;ArrayPtr&lt;String&gt;&gt;&gt;<sp/>mInvocations;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Fields::ComparisonEvaluationResult</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Fields::ComparisonEvaluationResult</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" line="101" column="1" bodyfile="Aspose.Words.Cpp/Fields/ComparisonEvaluationResult.h" bodystart="102" bodyend="286"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0cb1530b785c06bbe2e1cc0df4310d02" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d22c567b39cff30cc73ad4f48047f6b" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>ComparisonEvaluationResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a96553a7a3159b911741b8390338b3597" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>ComparisonEvaluationResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1ae9185f83d0613d915f50a8662507ed7c" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>get_ErrorMessage</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1af40547ffa25042c07a7ebf39aea0474d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>get_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a9ee143df400d1ea6138edb474567f8d6" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1aa16e51f4c912df4cfc880e0a2dcc505d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0d639a4660efdc295075c7441ec56e3f" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1aa8409473ac6c304d48bce0b267d5c7a8" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_comparison_evaluation_result_1a0a067e822d623df096e60b02542c0dde" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::ComparisonEvaluationResult</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
