<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_file_format_util" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::FileFormatUtil</compoundname>
    <includes refid="_file_format_util_8h" local="no">Aspose.Words.Cpp/FileFormatUtil.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_file_format_util_1a165908ebd3672b7ecca400d207919727" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref></type>
        <definition>typedef FileFormatUtil Aspose::Words::FileFormatUtil::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="65" column="28" bodyfile="Aspose.Words.Cpp/FileFormatUtil.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
        <definition>static Aspose::Words::LoadFormat Aspose::Words::FileFormatUtil::ContentTypeToLoadFormat</definition>
        <argsstring>(const System::String &amp;contentType)</argsstring>
        <name>ContentTypeToLoadFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::ContentTypeToLoadFormat</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>contentType</declname>
        </param>
        <briefdescription>
<para>Converts IANA content type into a load format enumerated value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to find the corresponding <ref refid="namespace_aspose" kindref="compound">Aspose</ref> load/save format from each media type string. <programlisting><codeline><highlight class="comment">//<sp/>The<sp/>ContentTypeToSaveFormat/ContentTypeToLoadFormat<sp/>methods<sp/>only<sp/>accept<sp/>official<sp/>IANA<sp/>media<sp/>type<sp/>names,<sp/>also<sp/>known<sp/>as<sp/>MIME<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>valid<sp/>media<sp/>types<sp/>are<sp/>listed<sp/>here:<sp/>https://www.iana.org/assignments/media-types/media-types.xhtml.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trying<sp/>to<sp/>associate<sp/>a<sp/>SaveFormat<sp/>with<sp/>a<sp/>partial<sp/>media<sp/>type<sp/>string<sp/>will<sp/>not<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;jpeg&quot;</highlight><highlight class="normal">),<sp/>System::ArgumentException);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>Aspose.Words<sp/>does<sp/>not<sp/>have<sp/>a<sp/>corresponding<sp/>save/load<sp/>format<sp/>for<sp/>a<sp/>content<sp/>type,<sp/>an<sp/>exception<sp/>will<sp/>also<sp/>be<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/zip&quot;</highlight><highlight class="normal">),<sp/>System::ArgumentException);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Files<sp/>of<sp/>the<sp/>types<sp/>listed<sp/>below<sp/>can<sp/>be<sp/>saved,<sp/>but<sp/>not<sp/>loaded<sp/>using<sp/>Aspose.Words.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/jpeg&quot;</highlight><highlight class="normal">),<sp/>System::ArgumentException);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5023eac1d7fffa77b37c0e6797c97773" kindref="member" tooltip="Renders a page of the document and saves it as a JPEG file.">SaveFormat::Jpeg</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/jpeg&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847af8fd4f1b5b05c6b1cc6a661141fd4f54" kindref="member" tooltip="Renders a page of the document and saves it as a PNG file.">SaveFormat::Png</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/png&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a72ab34b91787bd01f445189e04fef4ce" kindref="member" tooltip="Renders a page or pages of the document and saves them into a single or multipage TIFF file.">SaveFormat::Tiff</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/tiff&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847ab28f315fa877ea6a840b6a4ea5401256" kindref="member" tooltip="Renders a page of the document and saves it as a GIF file.">SaveFormat::Gif</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/gif&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a335e6de92c6443abe56fbd7eebd79f26" kindref="member" tooltip="Renders a page of the document and saves it as a vector EMF (Enhanced Meta File) file.">SaveFormat::Emf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/x-emf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5b036e2f7ccf88d75c6b643f9a660d24" kindref="member" tooltip="Saves the document in the XPS (XML Paper Specification) format.">SaveFormat::Xps</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/vnd.ms-xpsdocument&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847ae4204641574e4827600356b4dcacd276" kindref="member" tooltip="Saves the document as PDF (Adobe Portable Document) format.">SaveFormat::Pdf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/pdf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a1a9a612a14f347adfbf122cc7c0e985b" kindref="member" tooltip="Saves the document in the Svg (Scalable Vector Graphics) format.">SaveFormat::Svg</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/svg+xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/epub+zip&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>file<sp/>types<sp/>that<sp/>can<sp/>be<sp/>saved<sp/>and<sp/>loaded,<sp/>we<sp/>can<sp/>match<sp/>a<sp/>media<sp/>type<sp/>to<sp/>both<sp/>a<sp/>load<sp/>format<sp/>and<sp/>a<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/msword&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Saves the document in the Microsoft Word 97 - 2007 Document format.">SaveFormat::Doc</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/msword&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Office Open XML WordprocessingML Document (macro-free).">LoadFormat::Docx</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Saves the document as an Office Open XML WordprocessingML Document (macro-free).">SaveFormat::Docx</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Plain Text.">LoadFormat::Text</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Saves the document in the plain text format.">SaveFormat::Text</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aca9a0e8f64d43d81dd7b0225ea1b19c5" kindref="member" tooltip="RTF format.">LoadFormat::Rtf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/rtf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aca9a0e8f64d43d81dd7b0225ea1b19c5" kindref="member" tooltip="Saves the document in the RTF format. All characters above 7-bits are escaped as hexadecimal or Unico...">SaveFormat::Rtf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/rtf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aaaed78da0c543c16df8f74dfec8ba388" kindref="member" tooltip="MHTML (Web archive) format.">LoadFormat::Mhtml</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;multipart/related&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member" tooltip="Saves the document in the MHTML (Web archive) format.">SaveFormat::Mhtml</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;multipart/related&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="223" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
        <definition>static Aspose::Words::SaveFormat Aspose::Words::FileFormatUtil::ContentTypeToSaveFormat</definition>
        <argsstring>(const System::String &amp;contentType)</argsstring>
        <name>ContentTypeToSaveFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::ContentTypeToSaveFormat</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>contentType</declname>
        </param>
        <briefdescription>
<para>Converts IANA content type into a save format enumerated value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to find the corresponding <ref refid="namespace_aspose" kindref="compound">Aspose</ref> load/save format from each media type string. <programlisting><codeline><highlight class="comment">//<sp/>The<sp/>ContentTypeToSaveFormat/ContentTypeToLoadFormat<sp/>methods<sp/>only<sp/>accept<sp/>official<sp/>IANA<sp/>media<sp/>type<sp/>names,<sp/>also<sp/>known<sp/>as<sp/>MIME<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>valid<sp/>media<sp/>types<sp/>are<sp/>listed<sp/>here:<sp/>https://www.iana.org/assignments/media-types/media-types.xhtml.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Trying<sp/>to<sp/>associate<sp/>a<sp/>SaveFormat<sp/>with<sp/>a<sp/>partial<sp/>media<sp/>type<sp/>string<sp/>will<sp/>not<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;jpeg&quot;</highlight><highlight class="normal">),<sp/>System::ArgumentException);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>Aspose.Words<sp/>does<sp/>not<sp/>have<sp/>a<sp/>corresponding<sp/>save/load<sp/>format<sp/>for<sp/>a<sp/>content<sp/>type,<sp/>an<sp/>exception<sp/>will<sp/>also<sp/>be<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/zip&quot;</highlight><highlight class="normal">),<sp/>System::ArgumentException);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Files<sp/>of<sp/>the<sp/>types<sp/>listed<sp/>below<sp/>can<sp/>be<sp/>saved,<sp/>but<sp/>not<sp/>loaded<sp/>using<sp/>Aspose.Words.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/jpeg&quot;</highlight><highlight class="normal">),<sp/>System::ArgumentException);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5023eac1d7fffa77b37c0e6797c97773" kindref="member" tooltip="Renders a page of the document and saves it as a JPEG file.">SaveFormat::Jpeg</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/jpeg&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847af8fd4f1b5b05c6b1cc6a661141fd4f54" kindref="member" tooltip="Renders a page of the document and saves it as a PNG file.">SaveFormat::Png</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/png&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a72ab34b91787bd01f445189e04fef4ce" kindref="member" tooltip="Renders a page or pages of the document and saves them into a single or multipage TIFF file.">SaveFormat::Tiff</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/tiff&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847ab28f315fa877ea6a840b6a4ea5401256" kindref="member" tooltip="Renders a page of the document and saves it as a GIF file.">SaveFormat::Gif</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/gif&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a335e6de92c6443abe56fbd7eebd79f26" kindref="member" tooltip="Renders a page of the document and saves it as a vector EMF (Enhanced Meta File) file.">SaveFormat::Emf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/x-emf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5b036e2f7ccf88d75c6b643f9a660d24" kindref="member" tooltip="Saves the document in the XPS (XML Paper Specification) format.">SaveFormat::Xps</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/vnd.ms-xpsdocument&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847ae4204641574e4827600356b4dcacd276" kindref="member" tooltip="Saves the document as PDF (Adobe Portable Document) format.">SaveFormat::Pdf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/pdf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a1a9a612a14f347adfbf122cc7c0e985b" kindref="member" tooltip="Saves the document in the Svg (Scalable Vector Graphics) format.">SaveFormat::Svg</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;image/svg+xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a0e478fd5e6d71926b253851dd9fcbda1" kindref="member" tooltip="Saves the document in the EPUB format.">SaveFormat::Epub</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/epub+zip&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>file<sp/>types<sp/>that<sp/>can<sp/>be<sp/>saved<sp/>and<sp/>loaded,<sp/>we<sp/>can<sp/>match<sp/>a<sp/>media<sp/>type<sp/>to<sp/>both<sp/>a<sp/>load<sp/>format<sp/>and<sp/>a<sp/>save<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/msword&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Saves the document in the Microsoft Word 97 - 2007 Document format.">SaveFormat::Doc</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/msword&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Office Open XML WordprocessingML Document (macro-free).">LoadFormat::Docx</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Saves the document as an Office Open XML WordprocessingML Document (macro-free).">SaveFormat::Docx</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Plain Text.">LoadFormat::Text</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a9dffbf69ffba8bc38bc4e01abf4b1675" kindref="member" tooltip="Saves the document in the plain text format.">SaveFormat::Text</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/plain&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aca9a0e8f64d43d81dd7b0225ea1b19c5" kindref="member" tooltip="RTF format.">LoadFormat::Rtf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/rtf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aca9a0e8f64d43d81dd7b0225ea1b19c5" kindref="member" tooltip="Saves the document in the RTF format. All characters above 7-bits are escaped as hexadecimal or Unico...">SaveFormat::Rtf</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;application/rtf&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;text/html&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52aaaed78da0c543c16df8f74dfec8ba388" kindref="member" tooltip="MHTML (Web archive) format.">LoadFormat::Mhtml</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" kindref="member" tooltip="Converts IANA content type into a load format enumerated value.">FileFormatUtil::ContentTypeToLoadFormat</ref>(u</highlight><highlight class="stringliteral">&quot;multipart/related&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847aaaed78da0c543c16df8f74dfec8ba388" kindref="member" tooltip="Saves the document in the MHTML (Web archive) format.">SaveFormat::Mhtml</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" kindref="member" tooltip="Converts IANA content type into a save format enumerated value.">FileFormatUtil::ContentTypeToSaveFormat</ref>(u</highlight><highlight class="stringliteral">&quot;multipart/related&quot;</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="274" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a50891e234a7f1b869e6715d1e1892fcc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_file_format_info" kindref="compound">Aspose::Words::FileFormatInfo</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::FileFormatInfo &gt; Aspose::Words::FileFormatUtil::DetectFileFormat</definition>
        <argsstring>(const System::SharedPtr&lt; System::IO::Stream &gt; &amp;stream)</argsstring>
        <name>DetectFileFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::DetectFileFormat</qualifiedname>
        <param>
          <type>const <ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.i_o.stream/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::Stream</ref> &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Detects and returns the information about a format of a document stored in a stream. </para>
        </briefdescription>
        <detaileddescription>
<para>The stream must be positioned at the beginning of the document.</para>
<para>When this method returns, the position in the stream is restored to the original position.</para>
<para>Even if this method detects the document format, it does not guarantee that the specified document is valid. This method only detects the document format by reading data that is sufficient for detection. To fully verify that a document is valid you need to load the document into a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> object.</para>
<para>This method throws <ref refid="namespace_aspose_1_1_words_1a7049037a1789fffea26a5c985c45c880" kindref="member">FileCorruptedException</ref> when the format is recognized, but the detection cannot complete because of corruption.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>The stream.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_aspose_1_1_words_1_1_file_format_info" kindref="compound">FileFormatInfo</ref> object that contains the detected information.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> methods to detect the format of a document. <programlisting><codeline><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>a<sp/>file<sp/>that<sp/>is<sp/>missing<sp/>a<sp/>file<sp/>extension,<sp/>and<sp/>then<sp/>detect<sp/>its<sp/>file<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::FileStream&gt;<sp/>docStream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Word<sp/>document<sp/>with<sp/>missing<sp/>file<sp/>extension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(docStream);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member" tooltip="Indicates the format of the document that is to be loaded.">LoadFormat</ref><sp/>loadFormat<sp/>=<sp/>info-&gt;get_LoadFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/>loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>methods<sp/>of<sp/>converting<sp/>a<sp/>LoadFormat<sp/>to<sp/>its<sp/>corresponding<sp/>SaveFormat.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>the<sp/>file<sp/>extension<sp/>string<sp/>for<sp/>the<sp/>LoadFormat,<sp/>then<sp/>get<sp/>the<sp/>corresponding<sp/>SaveFormat<sp/>from<sp/>that<sp/>string:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fileExtension<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member" tooltip="Indicates the format in which the document is saved.">SaveFormat</ref><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" kindref="member" tooltip="Converts a file name extension into a SaveFormat value.">FileFormatUtil::ExtensionToSaveFormat</ref>(fileExtension);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Convert<sp/>the<sp/>LoadFormat<sp/>directly<sp/>to<sp/>its<sp/>SaveFormat:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" kindref="member" tooltip="Converts a LoadFormat value to a SaveFormat value if possible.">FileFormatUtil::LoadFormatToSaveFormat</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>automatically<sp/>detected<sp/>file<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.SaveToDetectedFileFormat&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="172" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_file_format_info" kindref="compound">Aspose::Words::FileFormatInfo</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::FileFormatInfo &gt; Aspose::Words::FileFormatUtil::DetectFileFormat</definition>
        <argsstring>(const System::String &amp;fileName)</argsstring>
        <name>DetectFileFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::DetectFileFormat</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Detects and returns the information about a format of a document stored in a disk file. </para>
        </briefdescription>
        <detaileddescription>
<para>Even if this method detects the document format, it does not guarantee that the specified document is valid. This method only detects the document format by reading data that is sufficient for detection. To fully verify that a document is valid you need to load the document into a <ref refid="class_aspose_1_1_words_1_1_document" kindref="compound">Document</ref> object.</para>
<para>This method throws <ref refid="namespace_aspose_1_1_words_1a7049037a1789fffea26a5c985c45c880" kindref="member">FileCorruptedException</ref> when the format is recognized, but the detection cannot complete because of corruption.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The file name.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="class_aspose_1_1_words_1_1_file_format_info" kindref="compound">FileFormatInfo</ref> object that contains the detected information.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and encryption. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>encrypt<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>password<sp/>when<sp/>we<sp/>save<sp/>it,<sp/>and<sp/>then<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;OdtSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a62830bddfb361d1fe469dd20145f9e8b" kindref="member" tooltip="Saves the document as an ODF Text Document.">SaveFormat::Odt</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Password(u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>file<sp/>type<sp/>of<sp/>our<sp/>document,<sp/>and<sp/>its<sp/>encryption<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.odt&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_IsEncrypted());</highlight></codeline>
</programlisting></para>
<para>Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and presence of digital signatures. <programlisting><codeline><highlight class="comment">//<sp/>Use<sp/>a<sp/>FileFormatInfo<sp/>instance<sp/>to<sp/>verify<sp/>that<sp/>a<sp/>document<sp/>is<sp/>not<sp/>digitally<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.docx&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/>CertificateHolder::Create(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">DigitalSignatureUtil::Sign(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>new<sp/>FileFormatInstance<sp/>to<sp/>confirm<sp/>that<sp/>it<sp/>is<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>load<sp/>and<sp/>access<sp/>the<sp/>signatures<sp/>of<sp/>a<sp/>signed<sp/>document<sp/>in<sp/>a<sp/>collection<sp/>like<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>DigitalSignatureUtil::LoadSignatures(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="124" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1aebb5f8bf46ace3c37021f953dd40a045" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CharType</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_file_format_info" kindref="compound">Aspose::Words::FileFormatInfo</ref> &gt;</type>
        <definition>static System::SharedPtr&lt; Aspose::Words::FileFormatInfo &gt; Aspose::Words::FileFormatUtil::DetectFileFormat</definition>
        <argsstring>(std::basic_istream&lt; CharType, Traits &gt; &amp;stream)</argsstring>
        <name>DetectFileFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::DetectFileFormat</qualifiedname>
        <param>
          <type>std::basic_istream&lt; CharType, Traits &gt; &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="473" column="30" bodyfile="Aspose.Words.Cpp/FileFormatUtil.h" bodystart="473" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
        <definition>static Aspose::Words::SaveFormat Aspose::Words::FileFormatUtil::ExtensionToSaveFormat</definition>
        <argsstring>(const System::String &amp;extension)</argsstring>
        <name>ExtensionToSaveFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::ExtensionToSaveFormat</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>extension</declname>
        </param>
        <briefdescription>
<para>Converts a file name extension into a <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">SaveFormat</ref> value. </para>
        </briefdescription>
        <detaileddescription>
<para>If the extension cannot be recognized, returns <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a88183b946cc5f0e8c96b2e66e1c74a7e" kindref="member">Unknown</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>extension</parametername>
</parameternamelist>
<parameterdescription>
<para>The file extension. Can be with or without a leading dot. Case-insensitive.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws if the parameter is null.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> methods to detect the format of a document. <programlisting><codeline><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>a<sp/>file<sp/>that<sp/>is<sp/>missing<sp/>a<sp/>file<sp/>extension,<sp/>and<sp/>then<sp/>detect<sp/>its<sp/>file<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::FileStream&gt;<sp/>docStream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Word<sp/>document<sp/>with<sp/>missing<sp/>file<sp/>extension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(docStream);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member" tooltip="Indicates the format of the document that is to be loaded.">LoadFormat</ref><sp/>loadFormat<sp/>=<sp/>info-&gt;get_LoadFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/>loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>methods<sp/>of<sp/>converting<sp/>a<sp/>LoadFormat<sp/>to<sp/>its<sp/>corresponding<sp/>SaveFormat.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>the<sp/>file<sp/>extension<sp/>string<sp/>for<sp/>the<sp/>LoadFormat,<sp/>then<sp/>get<sp/>the<sp/>corresponding<sp/>SaveFormat<sp/>from<sp/>that<sp/>string:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fileExtension<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member" tooltip="Indicates the format in which the document is saved.">SaveFormat</ref><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" kindref="member" tooltip="Converts a file name extension into a SaveFormat value.">FileFormatUtil::ExtensionToSaveFormat</ref>(fileExtension);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Convert<sp/>the<sp/>LoadFormat<sp/>directly<sp/>to<sp/>its<sp/>SaveFormat:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" kindref="member" tooltip="Converts a LoadFormat value to a SaveFormat value if possible.">FileFormatUtil::LoadFormatToSaveFormat</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>automatically<sp/>detected<sp/>file<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.SaveToDetectedFileFormat&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="436" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a21e427265e23db717e528d7f901e570e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>static System::String Aspose::Words::FileFormatUtil::ImageTypeToExtension</definition>
        <argsstring>(Aspose::Words::Drawing::ImageType imageType)</argsstring>
        <name>ImageTypeToExtension</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::ImageTypeToExtension</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1_1_drawing_1a439114bf0dc077ee793dd7871b2501c3" kindref="member">Aspose::Words::Drawing::ImageType</ref></type>
          <declname>imageType</declname>
        </param>
        <briefdescription>
<para>Converts an Aspose.Words image type enumerated value into a file extension. The returned extension is a lower-case string with a leading dot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to extract images from a document, and save them to the local file system as individual files. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Images.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>collection<sp/>of<sp/>shapes<sp/>from<sp/>the<sp/>document,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>save<sp/>the<sp/>image<sp/>data<sp/>of<sp/>every<sp/>shape<sp/>with<sp/>an<sp/>image<sp/>as<sp/>a<sp/>file<sp/>to<sp/>the<sp/>local<sp/>file<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;NodeCollection&gt;<sp/>shapes<sp/>=<sp/>doc-&gt;GetChildNodes(<ref refid="namespace_aspose_1_1_words_1a344de11ed54cf046eea1f8954a396379a880c1273b27d27cfc82004c3a4b205c9" kindref="member" tooltip="A drawing object, such as an OfficeArt shape, image or an OLE object. A Shape node can contain Paragr...">NodeType::Shape</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(9,<sp/>shapes-&gt;LINQ_Count([](SharedPtr&lt;Node&gt;<sp/>s)<sp/>{<sp/>return<sp/>(System::DynamicCast&lt;Shape&gt;(s))-&gt;get_HasImage();<sp/>}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>imageIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>shape<sp/>:<sp/>System::IterateOver(shapes-&gt;LINQ_OfType&lt;SharedPtr&lt;Shape&gt;&gt;()))</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape-&gt;get_HasImage())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>image<sp/>data<sp/>of<sp/>shapes<sp/>may<sp/>contain<sp/>images<sp/>of<sp/>many<sp/>possible<sp/>image<sp/>formats.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>determine<sp/>a<sp/>file<sp/>extension<sp/>for<sp/>each<sp/>image<sp/>automatically,<sp/>based<sp/>on<sp/>its<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>imageFileName<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;File.ExtractImages.{0}{1}&quot;</highlight><highlight class="normal">,<sp/>imageIndex,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a21e427265e23db717e528d7f901e570e" kindref="member" tooltip="Converts an Aspose.Words image type enumerated value into a file extension. The returned extension is...">FileFormatUtil::ImageTypeToExtension</ref>(shape-&gt;get_ImageData()-&gt;get_ImageType()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape-&gt;get_ImageData()-&gt;Save(ArtifactsDir<sp/>+<sp/>imageFileName);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imageIndex++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="468" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>static System::String Aspose::Words::FileFormatUtil::LoadFormatToExtension</definition>
        <argsstring>(Aspose::Words::LoadFormat loadFormat)</argsstring>
        <name>LoadFormatToExtension</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::LoadFormatToExtension</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
          <declname>loadFormat</declname>
        </param>
        <briefdescription>
<para>Converts a load format enumerated value into a file extension. The returned extension is a lower-case string with a leading dot. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847ad3fc933a3ff97915dd1fa4b6c524230e" kindref="member">WordML</ref> value is converted to &quot;.wml&quot;.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> methods to detect the format of a document. <programlisting><codeline><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>a<sp/>file<sp/>that<sp/>is<sp/>missing<sp/>a<sp/>file<sp/>extension,<sp/>and<sp/>then<sp/>detect<sp/>its<sp/>file<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::FileStream&gt;<sp/>docStream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Word<sp/>document<sp/>with<sp/>missing<sp/>file<sp/>extension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(docStream);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member" tooltip="Indicates the format of the document that is to be loaded.">LoadFormat</ref><sp/>loadFormat<sp/>=<sp/>info-&gt;get_LoadFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/>loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>methods<sp/>of<sp/>converting<sp/>a<sp/>LoadFormat<sp/>to<sp/>its<sp/>corresponding<sp/>SaveFormat.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>the<sp/>file<sp/>extension<sp/>string<sp/>for<sp/>the<sp/>LoadFormat,<sp/>then<sp/>get<sp/>the<sp/>corresponding<sp/>SaveFormat<sp/>from<sp/>that<sp/>string:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fileExtension<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member" tooltip="Indicates the format in which the document is saved.">SaveFormat</ref><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" kindref="member" tooltip="Converts a file name extension into a SaveFormat value.">FileFormatUtil::ExtensionToSaveFormat</ref>(fileExtension);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Convert<sp/>the<sp/>LoadFormat<sp/>directly<sp/>to<sp/>its<sp/>SaveFormat:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" kindref="member" tooltip="Converts a LoadFormat value to a SaveFormat value if possible.">FileFormatUtil::LoadFormatToSaveFormat</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>automatically<sp/>detected<sp/>file<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.SaveToDetectedFileFormat&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="310" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
        <definition>static Aspose::Words::SaveFormat Aspose::Words::FileFormatUtil::LoadFormatToSaveFormat</definition>
        <argsstring>(Aspose::Words::LoadFormat loadFormat)</argsstring>
        <name>LoadFormatToSaveFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::LoadFormatToSaveFormat</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
          <declname>loadFormat</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">LoadFormat</ref> value to a <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">SaveFormat</ref> value if possible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> methods to detect the format of a document. <programlisting><codeline><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>a<sp/>file<sp/>that<sp/>is<sp/>missing<sp/>a<sp/>file<sp/>extension,<sp/>and<sp/>then<sp/>detect<sp/>its<sp/>file<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::FileStream&gt;<sp/>docStream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Word<sp/>document<sp/>with<sp/>missing<sp/>file<sp/>extension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(docStream);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member" tooltip="Indicates the format of the document that is to be loaded.">LoadFormat</ref><sp/>loadFormat<sp/>=<sp/>info-&gt;get_LoadFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/>loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>methods<sp/>of<sp/>converting<sp/>a<sp/>LoadFormat<sp/>to<sp/>its<sp/>corresponding<sp/>SaveFormat.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>the<sp/>file<sp/>extension<sp/>string<sp/>for<sp/>the<sp/>LoadFormat,<sp/>then<sp/>get<sp/>the<sp/>corresponding<sp/>SaveFormat<sp/>from<sp/>that<sp/>string:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fileExtension<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member" tooltip="Indicates the format in which the document is saved.">SaveFormat</ref><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" kindref="member" tooltip="Converts a file name extension into a SaveFormat value.">FileFormatUtil::ExtensionToSaveFormat</ref>(fileExtension);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Convert<sp/>the<sp/>LoadFormat<sp/>directly<sp/>to<sp/>its<sp/>SaveFormat:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" kindref="member" tooltip="Converts a LoadFormat value to a SaveFormat value if possible.">FileFormatUtil::LoadFormatToSaveFormat</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>automatically<sp/>detected<sp/>file<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.SaveToDetectedFileFormat&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="360" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>static System::String Aspose::Words::FileFormatUtil::SaveFormatToExtension</definition>
        <argsstring>(Aspose::Words::SaveFormat saveFormat)</argsstring>
        <name>SaveFormatToExtension</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::SaveFormatToExtension</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
          <declname>saveFormat</declname>
        </param>
        <briefdescription>
<para>Converts a save format enumerated value into a file extension. The returned extension is a lower-case string with a leading dot. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847ad3fc933a3ff97915dd1fa4b6c524230e" kindref="member">WordML</ref> value is converted to &quot;.wml&quot;.</para>
<para>The <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a2b7085a73e76e581d28543a39fb2b981" kindref="member">FlatOpc</ref> value is converted to &quot;.fopc&quot;.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> methods to detect the format of a document. <programlisting><codeline><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>a<sp/>file<sp/>that<sp/>is<sp/>missing<sp/>a<sp/>file<sp/>extension,<sp/>and<sp/>then<sp/>detect<sp/>its<sp/>file<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::FileStream&gt;<sp/>docStream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Word<sp/>document<sp/>with<sp/>missing<sp/>file<sp/>extension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(docStream);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member" tooltip="Indicates the format of the document that is to be loaded.">LoadFormat</ref><sp/>loadFormat<sp/>=<sp/>info-&gt;get_LoadFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/>loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>methods<sp/>of<sp/>converting<sp/>a<sp/>LoadFormat<sp/>to<sp/>its<sp/>corresponding<sp/>SaveFormat.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>the<sp/>file<sp/>extension<sp/>string<sp/>for<sp/>the<sp/>LoadFormat,<sp/>then<sp/>get<sp/>the<sp/>corresponding<sp/>SaveFormat<sp/>from<sp/>that<sp/>string:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fileExtension<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member" tooltip="Indicates the format in which the document is saved.">SaveFormat</ref><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" kindref="member" tooltip="Converts a file name extension into a SaveFormat value.">FileFormatUtil::ExtensionToSaveFormat</ref>(fileExtension);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Convert<sp/>the<sp/>LoadFormat<sp/>directly<sp/>to<sp/>its<sp/>SaveFormat:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" kindref="member" tooltip="Converts a LoadFormat value to a SaveFormat value if possible.">FileFormatUtil::LoadFormatToSaveFormat</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>automatically<sp/>detected<sp/>file<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.SaveToDetectedFileFormat&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="398" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1a62a29b3c3149bc3069dc924e29601559" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
        <definition>static Aspose::Words::LoadFormat Aspose::Words::FileFormatUtil::SaveFormatToLoadFormat</definition>
        <argsstring>(Aspose::Words::SaveFormat saveFormat)</argsstring>
        <name>SaveFormatToLoadFormat</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::SaveFormatToLoadFormat</qualifiedname>
        <param>
          <type><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">Aspose::Words::SaveFormat</ref></type>
          <declname>saveFormat</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member">SaveFormat</ref> value to a <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">LoadFormat</ref> value if possible. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>System::ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Throws when cannot convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to convert a save format to its corresponding load format. <programlisting><codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a62a29b3c3149bc3069dc924e29601559" kindref="member" tooltip="Converts a SaveFormat value to a LoadFormat value if possible.">FileFormatUtil::SaveFormatToLoadFormat</ref>(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="Saves the document in the HTML format.">SaveFormat::Html</ref>));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>file<sp/>types<sp/>can<sp/>have<sp/>documents<sp/>saved<sp/>to,<sp/>but<sp/>not<sp/>loaded<sp/>from<sp/>using<sp/>Aspose.Words.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>attempt<sp/>to<sp/>convert<sp/>a<sp/>save<sp/>format<sp/>of<sp/>such<sp/>a<sp/>type<sp/>to<sp/>a<sp/>load<sp/>format,<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_THROW(<ref refid="class_aspose_1_1_words_1_1_file_format_util_1a62a29b3c3149bc3069dc924e29601559" kindref="member" tooltip="Converts a SaveFormat value to a LoadFormat value if possible.">FileFormatUtil::SaveFormatToLoadFormat</ref>(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a5023eac1d7fffa77b37c0e6797c97773" kindref="member" tooltip="Renders a page of the document and saves it as a JPEG file.">SaveFormat::Jpeg</ref>),<sp/>System::ArgumentException);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="326" column="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_util_1acd686fc1454bb0da2a0c9ff8728e763b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::FileFormatUtil::FileFormatUtil</definition>
        <argsstring>()</argsstring>
        <name>FileFormatUtil</name>
        <qualifiedname>Aspose::Words::FileFormatUtil::FileFormatUtil</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="470" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides utility methods for working with file formats, such as detecting file format or converting file extensions to/from file format enums. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to detect encoding in an html file. <programlisting><codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>info-&gt;get_LoadFormat());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Encoding<sp/>property<sp/>is<sp/>used<sp/>only<sp/>when<sp/>we<sp/>create<sp/>a<sp/>FileFormatInfo<sp/>object<sp/>for<sp/>an<sp/>html<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Windows-1252&quot;</highlight><highlight class="normal">,<sp/>info-&gt;get_Encoding()-&gt;get_WebName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1252,<sp/>info-&gt;get_Encoding()-&gt;get_CodePage());</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="Aspose.Words.Cpp/FileFormatUtil.h" line="63" column="1" bodyfile="Aspose.Words.Cpp/FileFormatUtil.h" bodystart="64" bodyend="483"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a4d2c4341c5e040e125e958b583102801" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>ContentTypeToLoadFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a0b853595de969cb24c0bdec3e8a0cae8" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>ContentTypeToSaveFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>DetectFileFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a50891e234a7f1b869e6715d1e1892fcc" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>DetectFileFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1aebb5f8bf46ace3c37021f953dd40a045" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>DetectFileFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>ExtensionToSaveFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1acd686fc1454bb0da2a0c9ff8728e763b" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>FileFormatUtil</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a21e427265e23db717e528d7f901e570e" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>ImageTypeToExtension</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>LoadFormatToExtension</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>LoadFormatToSaveFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>SaveFormatToExtension</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a62a29b3c3149bc3069dc924e29601559" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>SaveFormatToLoadFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_util_1a165908ebd3672b7ecca400d207919727" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatUtil</scope><name>ThisType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
