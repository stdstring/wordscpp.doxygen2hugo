<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_file_format_info" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::FileFormatInfo</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="non-virtual">System::Object</basecompoundref>
    <includes refid="_file_format_info_8h" local="no">Aspose.Words.Cpp/FileFormatInfo.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_file_format_info_1a80375aef15c9e43ccbe93e2bc5504743" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::FileFormatInfo::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="77" column="28" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_file_format_info_1a3d45f0c82ba193956066c54d3c86b231" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_file_format_info" kindref="compound">FileFormatInfo</ref></type>
        <definition>typedef FileFormatInfo Aspose::Words::FileFormatInfo::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="76" column="28" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_file_format_info_1ac8444715781827803359d848e7119042" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::FileFormatInfo::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="79" column="37" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1a35ccd3ff613dae1eed6b08326f0490dc" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::FileFormatInfo::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="250" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1aeba1487b8f1ecd46178573d0e6367a9b" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::FileFormatInfo::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="251" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1a13d67044e6ae462232ca751b6862acc4" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::FileFormatInfo::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="252" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1afcf0bf61ad19c93907bf2944df6632ee" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::FileFormatInfo::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="253" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1a1ba711da92d66e8a8b999b1f89c77fc0" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 1, 1, 1, 1 &gt;::type</type>
        <definition>__TypeStub&lt;1,1,1,1&gt;::type Aspose::Words::FileFormatInfo::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="254" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1aa359101a91ba8238f5d6b40c0e3724cd" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::FileFormatInfo::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="255" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1ab9b94dceb89b6047d14e0dd487aa5f5d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::FileFormatInfo::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="256" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_file_format_info_1a849d09c071af525b9662ca91c5ad69ba" prot="private" static="no" mutable="no">
        <type>__TypeStub&lt; 4, 4, 4, 4 &gt;::type</type>
        <definition>__TypeStub&lt;4,4,4,4&gt;::type Aspose::Words::FileFormatInfo::mField7</definition>
        <argsstring></argsstring>
        <name>mField7</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::mField7</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="257" column="23" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_info_1ac022a7ed5b709a6c8ddbc890ba21b48d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::FileFormatInfo::FileFormatInfo</definition>
        <argsstring>()</argsstring>
        <name>FileFormatInfo</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::FileFormatInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="246" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_info_1ae5c80c6df13b60482fd35b04eb5927ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::FileFormatInfo::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="80" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_info_1a74fb0ec2d7029ae8da9386121f226ece" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.text.encoding/" kindref="compound" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::Text::Encoding</ref> &gt;</type>
        <definition>System::SharedPtr&lt; System::Text::Encoding &gt; Aspose::Words::FileFormatInfo::get_Encoding</definition>
        <argsstring>() const</argsstring>
        <name>get_Encoding</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::get_Encoding</qualifiedname>
        <briefdescription>
<para>Gets the detected encoding if applicable to the current document format. At the moment detects encoding only for HTML documents. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to detect encoding in an html file. <programlisting><codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.html&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a3135f4019bee015e2d1ae7f77f9f3f64" kindref="member" tooltip="HTML format.">LoadFormat::Html</ref>,<sp/>info-&gt;get_LoadFormat());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Encoding<sp/>property<sp/>is<sp/>used<sp/>only<sp/>when<sp/>we<sp/>create<sp/>a<sp/>FileFormatInfo<sp/>object<sp/>for<sp/>an<sp/>html<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;Windows-1252&quot;</highlight><highlight class="normal">,<sp/>info-&gt;get_Encoding()-&gt;get_WebName());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1252,<sp/>info-&gt;get_Encoding()-&gt;get_CodePage());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="242" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_info_1abb1a4f2b76f47560ca8da3cca1c769e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::FileFormatInfo::get_HasDigitalSignature</definition>
        <argsstring>() const</argsstring>
        <name>get_HasDigitalSignature</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::get_HasDigitalSignature</qualifiedname>
        <briefdescription>
<para>Returns true if this document contains a digital signature. This property merely informs that a digital signature is present on a document, but it does not specify whether the signature is valid or not. </para>
        </briefdescription>
        <detaileddescription>
<para>This property exists to help you sort documents that are digitally signed from those that are not. If you use Aspose.Words to modify and save a document that is digitally signed, then the digital signature will be lost. This is by design because a digital signature exists to guard the authenticity of a document. Using this property you can detect digitally signed documents before processing them in the same way as normal documents and take some action to avoid losing the digital signature, for example notify the user.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and presence of digital signatures. <programlisting><codeline><highlight class="comment">//<sp/>Use<sp/>a<sp/>FileFormatInfo<sp/>instance<sp/>to<sp/>verify<sp/>that<sp/>a<sp/>document<sp/>is<sp/>not<sp/>digitally<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.docx&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/>CertificateHolder::Create(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">DigitalSignatureUtil::Sign(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>new<sp/>FileFormatInstance<sp/>to<sp/>confirm<sp/>that<sp/>it<sp/>is<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>load<sp/>and<sp/>access<sp/>the<sp/>signatures<sp/>of<sp/>a<sp/>signed<sp/>document<sp/>in<sp/>a<sp/>collection<sp/>like<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>DigitalSignatureUtil::LoadSignatures(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="225" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_info_1ae4ce3fb624ea0d996763ba2dd69b1788" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::FileFormatInfo::get_IsEncrypted</definition>
        <argsstring>() const</argsstring>
        <name>get_IsEncrypted</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::get_IsEncrypted</qualifiedname>
        <briefdescription>
<para>Returns true if the document is encrypted and requires a password to open. </para>
        </briefdescription>
        <detaileddescription>
<para>This property exists to help you sort documents that are encrypted from those that are not. If you attempt to load an encrypted document using Aspose.Words without supplying a password an exception will be thrown. You can use this property to detect whether a document requires a password and take some action before loading a document, for example, prompt the user for a password.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_file_format_info_1a39a5ef9219c34d15314afbd9b308432a" kindref="member">Aspose::Words::FileFormatInfo::get_LoadFormat</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and encryption. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>encrypt<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>password<sp/>when<sp/>we<sp/>save<sp/>it,<sp/>and<sp/>then<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;OdtSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a62830bddfb361d1fe469dd20145f9e8b" kindref="member" tooltip="Saves the document as an ODF Text Document.">SaveFormat::Odt</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Password(u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>file<sp/>type<sp/>of<sp/>our<sp/>document,<sp/>and<sp/>its<sp/>encryption<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.odt&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_IsEncrypted());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="190" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_file_format_info_1a39a5ef9219c34d15314afbd9b308432a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member">Aspose::Words::LoadFormat</ref></type>
        <definition>Aspose::Words::LoadFormat Aspose::Words::FileFormatInfo::get_LoadFormat</definition>
        <argsstring>() const</argsstring>
        <name>get_LoadFormat</name>
        <qualifiedname>Aspose::Words::FileFormatInfo::get_LoadFormat</qualifiedname>
        <briefdescription>
<para>Gets the detected document format. </para>
        </briefdescription>
        <detaileddescription>
<para>When an OOXML document is encrypted, it is not possible to ascertained whether it is an Excel, Word or PowerPoint document without decrypting it first so for an encrypted OOXML document this property will always return <ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member">Docx</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_aspose_1_1_words_1_1_file_format_info_1ae4ce3fb624ea0d996763ba2dd69b1788" kindref="member">Aspose::Words::FileFormatInfo::get_IsEncrypted</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and encryption. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>encrypt<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>password<sp/>when<sp/>we<sp/>save<sp/>it,<sp/>and<sp/>then<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;OdtSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a62830bddfb361d1fe469dd20145f9e8b" kindref="member" tooltip="Saves the document as an ODF Text Document.">SaveFormat::Odt</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Password(u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>file<sp/>type<sp/>of<sp/>our<sp/>document,<sp/>and<sp/>its<sp/>encryption<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.odt&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_IsEncrypted());</highlight></codeline>
</programlisting></para>
<para>Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and presence of digital signatures. <programlisting><codeline><highlight class="comment">//<sp/>Use<sp/>a<sp/>FileFormatInfo<sp/>instance<sp/>to<sp/>verify<sp/>that<sp/>a<sp/>document<sp/>is<sp/>not<sp/>digitally<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.docx&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/>CertificateHolder::Create(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">DigitalSignatureUtil::Sign(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>new<sp/>FileFormatInstance<sp/>to<sp/>confirm<sp/>that<sp/>it<sp/>is<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>load<sp/>and<sp/>access<sp/>the<sp/>signatures<sp/>of<sp/>a<sp/>signed<sp/>document<sp/>in<sp/>a<sp/>collection<sp/>like<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>DigitalSignatureUtil::LoadSignatures(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
</programlisting></para>
<para>Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> methods to detect the format of a document. <programlisting><codeline><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>a<sp/>file<sp/>that<sp/>is<sp/>missing<sp/>a<sp/>file<sp/>extension,<sp/>and<sp/>then<sp/>detect<sp/>its<sp/>file<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::IO::FileStream&gt;<sp/>docStream<sp/>=<sp/><ref refid="class/system.i_o.file/_1acf0c889be242fb4723b33e96e9377423" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::IO::File::OpenRead</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Word<sp/>document<sp/>with<sp/>missing<sp/>file<sp/>extension&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(docStream);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52" kindref="member" tooltip="Indicates the format of the document that is to be loaded.">LoadFormat</ref><sp/>loadFormat<sp/>=<sp/>info-&gt;get_LoadFormat();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1a5fddddb463c824cf3fe353ce1bcd8f52a7a48ae1b7387f8a8159c488fbd850021" kindref="member" tooltip="Microsoft Word 95 or Word 97 - 2003 Document.">LoadFormat::Doc</ref>,<sp/>loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>two<sp/>methods<sp/>of<sp/>converting<sp/>a<sp/>LoadFormat<sp/>to<sp/>its<sp/>corresponding<sp/>SaveFormat.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>the<sp/>file<sp/>extension<sp/>string<sp/>for<sp/>the<sp/>LoadFormat,<sp/>then<sp/>get<sp/>the<sp/>corresponding<sp/>SaveFormat<sp/>from<sp/>that<sp/>string:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>fileExtension<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847" kindref="member" tooltip="Indicates the format in which the document is saved.">SaveFormat</ref><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0a0bd3abea01c42528bf00caa65b646d" kindref="member" tooltip="Converts a file name extension into a SaveFormat value.">FileFormatUtil::ExtensionToSaveFormat</ref>(fileExtension);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Convert<sp/>the<sp/>LoadFormat<sp/>directly<sp/>to<sp/>its<sp/>SaveFormat:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>saveFormat<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a7bd69632eb62cc7f3622fc434041d2ae" kindref="member" tooltip="Converts a LoadFormat value to a SaveFormat value if possible.">FileFormatUtil::LoadFormatToSaveFormat</ref>(loadFormat);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>document<sp/>from<sp/>the<sp/>stream,<sp/>and<sp/>then<sp/>save<sp/>it<sp/>to<sp/>the<sp/>automatically<sp/>detected<sp/>file<sp/>extension.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.doc&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.SaveToDetectedFileFormat&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a25fa8cb83c9d031cc931d95b101df2da" kindref="member" tooltip="Converts a save format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::SaveFormatToExtension</ref>(saveFormat));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="160" column="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains data returned by <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> document format detection methods. </para>
    </briefdescription>
    <detaileddescription>
<para>You do not create instances of this class directly. Objects of this class are returned by <ref refid="" kindref="compound">DetectFileFormat()</ref> methods.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and encryption. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Configure<sp/>a<sp/>SaveOptions<sp/>object<sp/>to<sp/>encrypt<sp/>the<sp/>document</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>password<sp/>when<sp/>we<sp/>save<sp/>it,<sp/>and<sp/>then<sp/>save<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>saveOptions<sp/>=<sp/>MakeObject&lt;OdtSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a62830bddfb361d1fe469dd20145f9e8b" kindref="member" tooltip="Saves the document as an ODF Text Document.">SaveFormat::Odt</ref>);</highlight></codeline>
<codeline><highlight class="normal">saveOptions-&gt;set_Password(u</highlight><highlight class="stringliteral">&quot;MyPassword&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">,<sp/>saveOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Verify<sp/>the<sp/>file<sp/>type<sp/>of<sp/>our<sp/>document,<sp/>and<sp/>its<sp/>encryption<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDocumentEncryption.odt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.odt&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_IsEncrypted());</highlight></codeline>
</programlisting></para>
<para>Shows how to use the <ref refid="class_aspose_1_1_words_1_1_file_format_util" kindref="compound">FileFormatUtil</ref> class to detect the document format and presence of digital signatures. <programlisting><codeline><highlight class="comment">//<sp/>Use<sp/>a<sp/>FileFormatInfo<sp/>instance<sp/>to<sp/>verify<sp/>that<sp/>a<sp/>document<sp/>is<sp/>not<sp/>digitally<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FileFormatInfo&gt;<sp/>info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;.docx&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1aba6da22af8fec18907850767caff988c" kindref="member" tooltip="Converts a load format enumerated value into a file extension. The returned extension is a lower-case...">FileFormatUtil::LoadFormatToExtension</ref>(info-&gt;get_LoadFormat()));</highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;CertificateHolder&gt;<sp/>certificateHolder<sp/>=<sp/>CertificateHolder::Create(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;morzal.pfx&quot;</highlight><highlight class="normal">,<sp/>u</highlight><highlight class="stringliteral">&quot;aw&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>signOptions<sp/>=<sp/>MakeObject&lt;SignOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal">signOptions-&gt;set_SignTime(<ref refid="class/system.date_time/_1aa3b77946fdc1a915b5108d572eb6866d" kindref="member" external="X:/words-cpp-release/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Now</ref>());</highlight></codeline>
<codeline><highlight class="normal">DigitalSignatureUtil::Sign(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Document.docx&quot;</highlight><highlight class="normal">,<sp/>ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">,<sp/>certificateHolder,<sp/>signOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>new<sp/>FileFormatInstance<sp/>to<sp/>confirm<sp/>that<sp/>it<sp/>is<sp/>signed.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">info<sp/>=<sp/><ref refid="class_aspose_1_1_words_1_1_file_format_util_1a0f7aae337dbe4dee5b3c025faf1ced64" kindref="member" tooltip="Detects and returns the information about a format of a document stored in a disk file.">FileFormatUtil::DetectFileFormat</ref>(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_TRUE(info-&gt;get_HasDigitalSignature());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>load<sp/>and<sp/>access<sp/>the<sp/>signatures<sp/>of<sp/>a<sp/>signed<sp/>document<sp/>in<sp/>a<sp/>collection<sp/>like<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1,<sp/>DigitalSignatureUtil::LoadSignatures(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;File.DetectDigitalSignatures.docx&quot;</highlight><highlight class="normal">)-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::FileFormatInfo</label>
        <link refid="class_aspose_1_1_words_1_1_file_format_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::FileFormatInfo</label>
        <link refid="class_aspose_1_1_words_1_1_file_format_info"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/FileFormatInfo.h" line="74" column="1" bodyfile="Aspose.Words.Cpp/FileFormatInfo.h" bodystart="75" bodyend="259"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a80375aef15c9e43ccbe93e2bc5504743" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1ac022a7ed5b709a6c8ddbc890ba21b48d" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>FileFormatInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a74fb0ec2d7029ae8da9386121f226ece" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>get_Encoding</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1abb1a4f2b76f47560ca8da3cca1c769e0" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>get_HasDigitalSignature</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1ae4ce3fb624ea0d996763ba2dd69b1788" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>get_IsEncrypted</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a39a5ef9219c34d15314afbd9b308432a" prot="public" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>get_LoadFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a35ccd3ff613dae1eed6b08326f0490dc" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1aeba1487b8f1ecd46178573d0e6367a9b" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a13d67044e6ae462232ca751b6862acc4" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1afcf0bf61ad19c93907bf2944df6632ee" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a1ba711da92d66e8a8b999b1f89c77fc0" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1aa359101a91ba8238f5d6b40c0e3724cd" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1ab9b94dceb89b6047d14e0dd487aa5f5d" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a849d09c071af525b9662ca91c5ad69ba" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>mField7</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1ae5c80c6df13b60482fd35b04eb5927ef" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1a3d45f0c82ba193956066c54d3c86b231" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_file_format_info_1ac8444715781827803359d848e7119042" prot="private" virt="non-virtual"><scope>Aspose::Words::FileFormatInfo</scope><name>ThisTypeBaseTypesInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
