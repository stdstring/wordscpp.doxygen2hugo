<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="class_aspose_1_1_words_1_1_fields_1_1_field" kind="class" language="C++" prot="public">
    <compoundname>Aspose::Words::Fields::Field</compoundname>
    <basecompoundref refid="class/system.object/" prot="public" virt="virtual">System::Object</basecompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_add_in" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAddIn</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_address_block" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAddressBlock</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_advance" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAdvance</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_ask" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAsk</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_author" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAuthor</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAutoNum</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_lgl" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAutoNumLgl</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_out" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAutoNumOut</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_text" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAutoText</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_text_list" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldAutoTextList</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_barcode" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldBarcode</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_bibliography" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldBibliography</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_bidi_outline" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldBidiOutline</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_citation" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldCitation</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_comments" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldComments</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_compare" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldCompare</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_create_date" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldCreateDate</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_data" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldData</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_database" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDatabase</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_date" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDate</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_dde" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDde</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_dde_auto" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDdeAuto</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_display_barcode" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDisplayBarcode</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_property" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDocProperty</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_variable" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldDocVariable</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_e_q" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldEQ</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_edit_time" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldEditTime</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_embed" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldEmbed</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_name" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFileName</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_size" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFileSize</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_fill_in" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFillIn</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_footnote_ref" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFootnoteRef</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_check_box" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFormCheckBox</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_drop_down" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFormDropDown</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_text" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFormText</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_formula" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldFormula</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_glossary" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldGlossary</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_go_to_button" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldGoToButton</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_greeting_line" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldGreetingLine</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_hyperlink" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldHyperlink</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_if" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldIf</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_import" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldImport</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_include" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldInclude</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_picture" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldIncludePicture</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_text" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldIncludeText</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_index" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldIndex</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_info" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldInfo</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_keywords" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldKeywords</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_last_saved_by" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldLastSavedBy</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_link" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldLink</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldListNum</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_macro_button" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldMacroButton</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_barcode" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldMergeBarcode</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldMergeField</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_rec" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldMergeRec</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_seq" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldMergeSeq</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_next" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldNext</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_next_if" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldNextIf</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_note_ref" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldNoteRef</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_chars" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldNumChars</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_pages" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldNumPages</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_words" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldNumWords</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_ocx" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldOcx</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_page" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldPage</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_page_ref" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldPageRef</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_print" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldPrint</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_print_date" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldPrintDate</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_private" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldPrivate</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_quote" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldQuote</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_r_d" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldRD</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_ref" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldRef</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_rev_num" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldRevNum</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_save_date" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSaveDate</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_section" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSection</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_section_pages" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSectionPages</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_seq" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSeq</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_set" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSet</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_shape" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldShape</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_skip_if" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSkipIf</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_style_ref" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldStyleRef</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_subject" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSubject</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_symbol" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldSymbol</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_t_a" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldTA</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_t_c" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldTC</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_template" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldTemplate</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_time" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldTime</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_title" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldTitle</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldToa</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldToc</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_unknown" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldUnknown</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_address" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldUserAddress</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_initials" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldUserInitials</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_name" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldUserName</derivedcompoundref>
    <derivedcompoundref refid="class_aspose_1_1_words_1_1_fields_1_1_field_x_e" prot="public" virt="non-virtual">Aspose::Words::Fields::FieldXE</derivedcompoundref>
    <includes refid="_field_8h" local="no">Aspose.Words.Cpp/Fields/Field.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ab6f7a8806638bfacf1e4d48ff153ca52" prot="private" static="no">
        <type><ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref></type>
        <definition>typedef System::Object Aspose::Words::Fields::Field::BaseType</definition>
        <argsstring></argsstring>
        <name>BaseType</name>
        <qualifiedname>Aspose::Words::Fields::Field::BaseType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="121" column="28" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a11982fc5233746441af82f4b93c305a1" prot="private" static="no">
        <type><ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Field</ref></type>
        <definition>typedef Field Aspose::Words::Fields::Field::ThisType</definition>
        <argsstring></argsstring>
        <name>ThisType</name>
        <qualifiedname>Aspose::Words::Fields::Field::ThisType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="120" column="19" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a2dfce8b5638aaa3b871dd77a4eb2ad9a" prot="private" static="no">
        <type><ref refid="class/system.base_types_info/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">::System::BaseTypesInfo</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">BaseType</ref> &gt;</type>
        <definition>typedef ::System::BaseTypesInfo&lt;BaseType&gt; Aspose::Words::Fields::Field::ThisTypeBaseTypesInfo</definition>
        <argsstring></argsstring>
        <name>ThisTypeBaseTypesInfo</name>
        <qualifiedname>Aspose::Words::Fields::Field::ThisTypeBaseTypesInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="123" column="37" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a85905613cf7d1567985c1166338054b3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::Field::mField0</definition>
        <argsstring></argsstring>
        <name>mField0</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1293" column="23" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a58c239f072e42cd6f8be20923f7c8d17" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::Field::mField1</definition>
        <argsstring></argsstring>
        <name>mField1</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1295" column="23" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1af907533053d366499a7346f57d41ace8" prot="private" static="no" mutable="no">
        <type>Aspose::Words::Fields::FieldBundle</type>
        <definition>Aspose::Words::Fields::FieldBundle Aspose::Words::Fields::Field::mField2</definition>
        <argsstring></argsstring>
        <name>mField2</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1297" column="40" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ac63fefc9846a87af474015977787fd43" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::Field::mField3</definition>
        <argsstring></argsstring>
        <name>mField3</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1298" column="23" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a46f42f15997eeeb13fa19bf91f1eec49" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::Field::mField4</definition>
        <argsstring></argsstring>
        <name>mField4</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1299" column="23" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ad63a8b53594788a47dcd44d3eec047d5" prot="private" static="no" mutable="no">
        <type><ref refid="class/system.weak_ptr/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::WeakPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::WeakPtr&lt;System::Object&gt; Aspose::Words::Fields::Field::mField5</definition>
        <argsstring></argsstring>
        <name>mField5</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField5</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1300" column="21" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a488d32f5a2e95e24199f09a7a47ac011" prot="private" static="no" mutable="no">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class/system.object/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Object</ref> &gt;</type>
        <definition>System::SharedPtr&lt;System::Object&gt; Aspose::Words::Fields::Field::mField6</definition>
        <argsstring></argsstring>
        <name>mField6</name>
        <qualifiedname>Aspose::Words::Fields::Field::mField6</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1301" column="23" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="1301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ad86c0cd3e21c1b771f0b911ad52bf8b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::Field::Field</definition>
        <argsstring>()</argsstring>
        <name>Field</name>
        <qualifiedname>Aspose::Words::Fields::Field::Field</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1267" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1acaf2385183a1a0bd6ecddb272b01c909" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual Aspose::Words::Fields::Field::~Field</definition>
        <argsstring>()</argsstring>
        <name>~Field</name>
        <qualifiedname>Aspose::Words::Fields::Field::~Field</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1289" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a8beea0f88f340d5955669d1c8eaeb740" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Aspose::Words::Fields::Field::BeforeUnlink</definition>
        <argsstring>()</argsstring>
        <name>BeforeUnlink</name>
        <qualifiedname>Aspose::Words::Fields::Field::BeforeUnlink</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_text_1ae4adda5c2c4c5520f56fe2b29bc70008">BeforeUnlink</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_hyperlink_1a66f1b03f4311aa3af6579050dcede52b">BeforeUnlink</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_picture_1ab0ea9d7f2a98b1aa2837c8b5d37d6e56">BeforeUnlink</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a8a6a2d4eae268a48d148e9ce4ddc5ac1">BeforeUnlink</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1279" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a6e14601b83c997736fcdecb55bcafdb3" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Aspose::Words::Fields::Field::EndUpdate</definition>
        <argsstring>()</argsstring>
        <name>EndUpdate</name>
        <qualifiedname>Aspose::Words::Fields::Field::EndUpdate</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field_1a406639622b48e91038d218fe67c4a6d7">EndUpdate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1274" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a1bc513fb40420b6d46d983ff6a804c77" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Aspose::Words::Fields::Field::get_SupportsConditionalUpdate</definition>
        <argsstring>()</argsstring>
        <name>get_SupportsConditionalUpdate</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_SupportsConditionalUpdate</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_if_1a12f92277e72928d3eccb8d16c6e75fcd">get_SupportsConditionalUpdate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1265" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9dae9f00016d302428b0e284c0198fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Bidi::IBidiParagraphLevelOverride &gt;</type>
        <definition>virtual System::SharedPtr&lt; Aspose::Bidi::IBidiParagraphLevelOverride &gt; Aspose::Words::Fields::Field::GetBidiParagraphLevelOverride</definition>
        <argsstring>()</argsstring>
        <name>GetBidiParagraphLevelOverride</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetBidiParagraphLevelOverride</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a56904bca6c64d7cef974b86c247d529a">GetBidiParagraphLevelOverride</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field_1a175ed61438844613e52fef4f49d1abb8">GetBidiParagraphLevelOverride</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1282" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1af2ca5299128e70f16f83c5706524f643" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Aspose::Words::Fields::FieldUpdateStrategy</type>
        <definition>virtual Aspose::Words::Fields::FieldUpdateStrategy Aspose::Words::Fields::Field::GetChildFieldsUpdateStrategyInArgument</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Fields::IFieldArgument &gt;)</argsstring>
        <name>GetChildFieldsUpdateStrategyInArgument</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetChildFieldsUpdateStrategyInArgument</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_if_1a188efe8db3f6cd079c49fffa13800c52">GetChildFieldsUpdateStrategyInArgument</reimplementedby>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::IFieldArgument &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1275" column="59"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aeecf41416cbf639ab9e5411702ef8928" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>virtual System::String Aspose::Words::Fields::Field::GetDefaultDateTimeFormat</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultDateTimeFormat</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetDefaultDateTimeFormat</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_date_1ad37e45eac0a01a511d441c5987e273b6">GetDefaultDateTimeFormat</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_time_1a06f7056761a29c50762b1116632d1d04">GetDefaultDateTimeFormat</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1285" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aec0fb24827aecbea0ff27a044ba7c760" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::NodeRange &gt;</type>
        <definition>virtual System::SharedPtr&lt; Aspose::Words::NodeRange &gt; Aspose::Words::Fields::Field::GetFakeResult</definition>
        <argsstring>()</argsstring>
        <name>GetFakeResult</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetFakeResult</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_1ab5987d956167864f035afa420f02eb35">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_lgl_1abeec083b056f77ec75c99c95d7030b4d">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_out_1af696a6bc7889e808398fee38404e2031">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_barcode_1aba4393209eaae5225b57aaeeb7118965">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_display_barcode_1a244ca1b7b30c69c4b5488c40bf39bc82">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_e_q_1a4b947a3dedb4f3720833ce3ec9e1b8e4">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_drop_down_1a91f2b56548a1d2a1ea06a6297fb6fdbe">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_go_to_button_1a4b612fd6d2f23f4e24e4fbcbeb469819">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num_1a59286c052977fbf7f90451cfb463648d">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_macro_button_1a6f84bf7f425584c10a6c7cf332d3ddeb">GetFakeResult</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_symbol_1a9659621fcd5fee756876a9dc5244ef5c">GetFakeResult</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1280" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9dbe3680b4022e78bc06bf302768280" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_section" kindref="compound">Aspose::Words::Section</ref> &gt;</type>
        <definition>virtual System::SharedPtr&lt; Aspose::Words::Section &gt; Aspose::Words::Fields::Field::GetPageNumberFormatSection</definition>
        <argsstring>()</argsstring>
        <name>GetPageNumberFormatSection</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetPageNumberFormatSection</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_page_1af1b1fd433a459555cde6bc4f6847b116">GetPageNumberFormatSection</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_page_ref_1a05e22f7f089529de185863b2edc89282">GetPageNumberFormatSection</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1284" column="34"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aa312d165970a8c453ad49aca355adf8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>Aspose::Words::Fields::FieldUpdateStage</type>
        <definition>virtual Aspose::Words::Fields::FieldUpdateStage Aspose::Words::Fields::Field::GetUpdateStage</definition>
        <argsstring>()</argsstring>
        <name>GetUpdateStage</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetUpdateStage</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_ref_1a2553a866c619d32abd3e6168c40a7688">GetUpdateStage</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_style_ref_1aaf187b5f58e90f70c39fada5eff9b740">GetUpdateStage</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1ab1786daadfaf7a663924254cc8d208ad">GetUpdateStage</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_unknown_1a2691f6709262649dfc919d8163c6db8b">GetUpdateStage</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1276" column="56"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ab53ef8533b2f7220e8ea664367f8a601" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Aspose::Words::Fields::Field::Initialize</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Fields::FieldStart &gt;, System::SharedPtr&lt; Aspose::Words::Fields::FieldSeparator &gt;, System::SharedPtr&lt; Aspose::Words::Fields::FieldEnd &gt;)</argsstring>
        <name>Initialize</name>
        <qualifiedname>Aspose::Words::Fields::Field::Initialize</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field_1a4576937dd479d08196a29592f229c2ec">Initialize</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_t_c_1a9560ca4a1e845e046ef91dc3e0333085">Initialize</reimplementedby>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_start" kindref="compound">Aspose::Words::Fields::FieldStart</ref> &gt;</type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_separator" kindref="compound">Aspose::Words::Fields::FieldSeparator</ref> &gt;</type>
        </param>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_end" kindref="compound">Aspose::Words::Fields::FieldEnd</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1269" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a3804d07aab1a30cdf0ddabaeb737290c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Aspose::Words::Fields::Field::NeedStoreOldResultNodes</definition>
        <argsstring>()</argsstring>
        <name>NeedStoreOldResultNodes</name>
        <qualifiedname>Aspose::Words::Fields::Field::NeedStoreOldResultNodes</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_hyperlink_1a5c51e5c5391acf1ef177c1e28f1a8f46">NeedStoreOldResultNodes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1287" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aff48bb5a80ad13f4e14f79c99cf1fb6d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Aspose::Words::Fields::Field::NotifyChildFieldUpdated</definition>
        <argsstring>(System::SharedPtr&lt; Aspose::Words::Fields::IFieldArgument &gt;)</argsstring>
        <name>NotifyChildFieldUpdated</name>
        <qualifiedname>Aspose::Words::Fields::Field::NotifyChildFieldUpdated</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_if_1ab3ac4f2591f363bd9d387b8c9d1b1551">NotifyChildFieldUpdated</reimplementedby>
        <param>
          <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::IFieldArgument &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1272" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1afd175a349099f9cae71188f36b6666d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Aspose::Words::Fields::Field::ParseFieldCode</definition>
        <argsstring>()</argsstring>
        <name>ParseFieldCode</name>
        <qualifiedname>Aspose::Words::Fields::Field::ParseFieldCode</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_if_1a059f625e4d2db716a4131e5aa50556b0">ParseFieldCode</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field_1a89e9ba33d263ac949d7c9cc497e637ff">ParseFieldCode</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1270" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a5560840ede5a5574e0f4adfd5e23829d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Aspose::Words::Fields::Field::RTTI_INFO_DECL_EX</definition>
        <argsstring>()</argsstring>
        <name>RTTI_INFO_DECL_EX</name>
        <qualifiedname>Aspose::Words::Fields::Field::RTTI_INFO_DECL_EX</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="124" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1afd2f4d29a84550a38375396538654ab8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; Aspose::Words::Fields::FieldUpdateAction &gt;</type>
        <definition>virtual System::SharedPtr&lt; Aspose::Words::Fields::FieldUpdateAction &gt; Aspose::Words::Fields::Field::UpdateCore</definition>
        <argsstring>()</argsstring>
        <name>UpdateCore</name>
        <qualifiedname>Aspose::Words::Fields::Field::UpdateCore</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_address_block_1ace372fef77f6336edbb15d4ac67d45e5">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_ask_1a738f87fe484bbc4be6a02db2cf649324">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_author_1a9e3528b11770ecbf852ac24ef6a5f994">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_text_1a36573ddb9e9581a3c65ae7c2b201a26d">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_comments_1a9e059ae9fb6ba600bc75503158e9c9e2">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_compare_1a0dcb05b177b53e6b248f63291b89fa9c">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_create_date_1aac83d498e2531eb5d107406373f49246">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_database_1abcf8331846840117d7609571efc9d36b">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_date_1a7a18f300fcd2ae559aeacb4ed767b69f">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_property_1a66593db84b804c4ab767e10a2dee977b">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_variable_1ac38a13fda4bb58ba2cf6e226451e81fc">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_edit_time_1a07efd65916dd34a5122bad89922755ce">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_name_1afe18c9eda3e0c70cdb367eaad45260f8">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_size_1a7cef9ab493cb2c4ee763562d12e953d6">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_fill_in_1a160039284bb0478b9f3fa3c5c6c87bc8">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_text_1a5cdbe742b3a08f505161e32c3b97818b">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_formula_1a8b38fb54efb66b855db6ef5197157c7c">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_glossary_1a373103c21ff1f4a5ad4f1250ad9cecdb">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_greeting_line_1ae671cca2719980c8c8592a736cbc4d9b">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_hyperlink_1ac22ff9595c5864c98a949b4becc57cff">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_if_1ae4537ab2a4042021f0608eccd657ff46">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_import_1aaad98edfb59269d0377879451fbd6bae">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_1a383458d43d44b1543978da517281b7ea">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_picture_1ad60e69c7ebd369af6ccc832ec6e66a72">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_text_1ab6d7db58f6f274e8bc46bb43f7ac54de">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_index_1a4e5f9ae23c30f443f616f61137ca36f3">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_info_1a3774ebceed4863420d7ffbe3273fad90">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_keywords_1afe9876f5e8295915d769b53bbe4d6e34">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_last_saved_by_1aa7a130af2ae922180aa87262dcbf09d5">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field_1a41f8e43aeb3a0376f34b3b735a32ecbd">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_rec_1a1844d3c980e597dbca15f71739be1fde">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_seq_1a191840310dfe787cd14b4c00f652c8f3">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_next_1a3e2f3377ba605f451a2a9443e873b9db">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_next_if_1a6843f893a6fc985da8f934c2d339f0ac">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_note_ref_1a76fa2345ebb5ec26462b6d64463ba366">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_chars_1a16f805779e077d7fd5db0b414fc2745a">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_words_1a52d1768e5eec69e001c2b216c90fa49b">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_page_ref_1a209a2ea5b1f84945543908cd8c9360d1">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_print_date_1a03442ada9207bfd567604c056e4b0232">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_quote_1a6a78b0e7caef19a3bb7e0c4b00c0a5e4">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_ref_1a8ba29dd6553bfb7ba2dcbd27eb32c28e">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_rev_num_1a2401aba74ccc41c3865d85d8d6824586">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_save_date_1a7e54487a8be6da9a169833766d7d28d0">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_seq_1a46197852475380a19fcd3de917e87af9">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_set_1aaf4d022647a45a74ce94d7d2f8190016">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_shape_1acaff3789359bbaf1c3158f1d29dd51c0">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_skip_if_1a8547f830f2b5179d364fb4f0cf38bc61">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_style_ref_1a7c5588fd613cb7982dddf727d49c0c52">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_subject_1a635f539eec11a6caaa18d31df58effbf">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_template_1aeba6ddfd12c9303e8098379a8df6d8d0">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_time_1a0b760902bd93c7e9a8e15b5dc4efd7c1">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_title_1a505a18985613dd3e1bc774fd5c7d7498">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa_1aa50a0bf3fa7b9f925a009c0b24c61fe6">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc_1a9b585e6d641cefb6d611262c87aca65b">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_unknown_1a49d200a1491923ac399b9d174985f62a">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_address_1a7a17b146524e5bdce0d2b0e493b7b0d9">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_initials_1a1d3c8bb61b5712d0b3fc2f1fb9c048ce">UpdateCore</reimplementedby>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_name_1ae4a8d0aa6f46c54ad2507dee3102aaf5">UpdateCore</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1277" column="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a5c2d01019c517ea8098f296903e37a34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::Field::get_DisplayResult</definition>
        <argsstring>()</argsstring>
        <name>get_DisplayResult</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_DisplayResult</qualifiedname>
        <briefdescription>
<para>Gets the text that represents the displayed field result. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to get the real text that a field displays in the document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>document<sp/>was<sp/>written<sp/>by<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldAuthor<sp/>=<sp/>System::DynamicCast&lt;FieldAuthor&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca3fb8145fe86828004760321499e8c38b" kindref="member" tooltip="Specifies the AUTHOR field.">FieldType::FieldAuthor</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">fieldAuthor-&gt;set_AuthorName(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>use<sp/>the<sp/>DisplayResult<sp/>property<sp/>to<sp/>verify<sp/>what<sp/>exact<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>field<sp/>would<sp/>display<sp/>in<sp/>its<sp/>place<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(String::Empty,<sp/>fieldAuthor-&gt;get_DisplayResult());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fields<sp/>do<sp/>not<sp/>maintain<sp/>accurate<sp/>result<sp/>values<sp/>in<sp/>real-time.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>make<sp/>sure<sp/>our<sp/>fields<sp/>display<sp/>accurate<sp/>results<sp/>at<sp/>any<sp/>given<sp/>time,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>right<sp/>before<sp/>a<sp/>save<sp/>operation,<sp/>we<sp/>need<sp/>to<sp/>update<sp/>them<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fieldAuthor-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>fieldAuthor-&gt;get_DisplayResult());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.DisplayResult.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="730" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_end" kindref="compound">Aspose::Words::Fields::FieldEnd</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldEnd &gt; Aspose::Words::Fields::Field::get_End</definition>
        <argsstring>() const</argsstring>
        <name>get_End</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_End</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the field end. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a collection of fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldCollection_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>d<sp/>MMMM<sp/>yyyy\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>TIME<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;John<sp/>Doe\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>SUBJECT<sp/>\&quot;My<sp/>Subject\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>QUOTE<sp/>\&quot;Hello<sp/>world!\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldCollection&gt;<sp/>fields<sp/>=<sp/>doc-&gt;get_Range()-&gt;get_Fields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>field<sp/>collection,<sp/>and<sp/>print<sp/>contents<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>every<sp/>field<sp/>using<sp/>a<sp/>custom<sp/>visitor<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldVisitor<sp/>=<sp/>MakeObject&lt;ExField::FieldVisitor&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;Field&gt;&gt;&gt;<sp/>fieldEnumerator<sp/>=<sp/>fields-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Start()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()-&gt;get_Separator()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Separator()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_End()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>fields<sp/>in<sp/>the<sp/>document.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fieldVisitor-&gt;GetText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldVisitor()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldStart(SharedPtr&lt;FieldStart&gt;<sp/>fieldStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Found<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldStart-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tField<sp/>code:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tDisplayed<sp/>as:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldSeparator(SharedPtr&lt;FieldSeparator&gt;<sp/>fieldSeparator)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tFound<sp/>separator:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldSeparator-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldEnd(SharedPtr&lt;FieldEnd&gt;<sp/>fieldEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldEnd-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="447" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a399c14463916724cac0015b430175589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_end" kindref="compound">Aspose::Words::Fields::FieldEnd</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldEnd &gt; Aspose::Words::Fields::Field::get_FieldEnd</definition>
        <argsstring>() const</argsstring>
        <name>get_FieldEnd</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_FieldEnd</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the field end. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a collection of fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldCollection_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>d<sp/>MMMM<sp/>yyyy\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>TIME<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;John<sp/>Doe\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>SUBJECT<sp/>\&quot;My<sp/>Subject\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>QUOTE<sp/>\&quot;Hello<sp/>world!\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldCollection&gt;<sp/>fields<sp/>=<sp/>doc-&gt;get_Range()-&gt;get_Fields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>field<sp/>collection,<sp/>and<sp/>print<sp/>contents<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>every<sp/>field<sp/>using<sp/>a<sp/>custom<sp/>visitor<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldVisitor<sp/>=<sp/>MakeObject&lt;ExField::FieldVisitor&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;Field&gt;&gt;&gt;<sp/>fieldEnumerator<sp/>=<sp/>fields-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Start()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()-&gt;get_Separator()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Separator()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_End()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>fields<sp/>in<sp/>the<sp/>document.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fieldVisitor-&gt;GetText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldVisitor()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldStart(SharedPtr&lt;FieldStart&gt;<sp/>fieldStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Found<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldStart-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tField<sp/>code:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tDisplayed<sp/>as:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldSeparator(SharedPtr&lt;FieldSeparator&gt;<sp/>fieldSeparator)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tFound<sp/>separator:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldSeparator-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldEnd(SharedPtr&lt;FieldEnd&gt;<sp/>fieldEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldEnd-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="661" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1abc40cddc1325f7fec80d8530e5287448" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_start" kindref="compound">Aspose::Words::Fields::FieldStart</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldStart &gt; Aspose::Words::Fields::Field::get_FieldStart</definition>
        <argsstring>() const</argsstring>
        <name>get_FieldStart</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_FieldStart</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the start of the field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a collection of fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldCollection_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>d<sp/>MMMM<sp/>yyyy\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>TIME<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;John<sp/>Doe\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>SUBJECT<sp/>\&quot;My<sp/>Subject\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>QUOTE<sp/>\&quot;Hello<sp/>world!\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldCollection&gt;<sp/>fields<sp/>=<sp/>doc-&gt;get_Range()-&gt;get_Fields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>field<sp/>collection,<sp/>and<sp/>print<sp/>contents<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>every<sp/>field<sp/>using<sp/>a<sp/>custom<sp/>visitor<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldVisitor<sp/>=<sp/>MakeObject&lt;ExField::FieldVisitor&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;Field&gt;&gt;&gt;<sp/>fieldEnumerator<sp/>=<sp/>fields-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Start()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()-&gt;get_Separator()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Separator()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_End()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>fields<sp/>in<sp/>the<sp/>document.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fieldVisitor-&gt;GetText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldVisitor()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldStart(SharedPtr&lt;FieldStart&gt;<sp/>fieldStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Found<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldStart-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tField<sp/>code:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tDisplayed<sp/>as:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldSeparator(SharedPtr&lt;FieldSeparator&gt;<sp/>fieldSeparator)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tFound<sp/>separator:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldSeparator-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldEnd(SharedPtr&lt;FieldEnd&gt;<sp/>fieldEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldEnd-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="554" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a090c5d09915e2ead6cc54fda736dd7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_format" kindref="compound">Aspose::Words::Fields::FieldFormat</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldFormat &gt; Aspose::Words::Fields::Field::get_Format</definition>
        <argsstring>()</argsstring>
        <name>get_Format</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_Format</qualifiedname>
        <briefdescription>
<para>Gets a <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_format" kindref="compound">FieldFormat</ref> object that provides typed access to field&apos;s formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to format field results. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>document<sp/>builder<sp/>to<sp/>insert<sp/>a<sp/>field<sp/>that<sp/>displays<sp/>a<sp/>result<sp/>with<sp/>no<sp/>format<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>apply<sp/>a<sp/>format<sp/>to<sp/>a<sp/>field&apos;s<sp/>result<sp/>using<sp/>the<sp/>field&apos;s<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>types<sp/>of<sp/>formats<sp/>that<sp/>we<sp/>can<sp/>apply<sp/>to<sp/>a<sp/>field&apos;s<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Numeric<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FieldFormat&gt;<sp/>format<sp/>=<sp/>field-&gt;get_Format();</highlight></codeline>
<codeline><highlight class="normal">format-&gt;set_NumericFormat(u</highlight><highlight class="stringliteral">&quot;$###.00&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3<sp/>\\#<sp/>$###.00&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$<sp/><sp/>5.00&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Date/time<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">format<sp/>=<sp/>field-&gt;get_Format();</highlight></codeline>
<codeline><highlight class="normal">format-&gt;set_DateTimeFormat(u</highlight><highlight class="stringliteral">&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Today&apos;s<sp/>date,<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>format-&gt;get_DateTimeFormat()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>format:\n\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>field-&gt;get_Result()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>General<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;=<sp/>25<sp/>+<sp/>33&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">format<sp/>=<sp/>field-&gt;get_Format();</highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;Add(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a039ae374b575c2cf4e150c0cc148d9bc" kindref="member" tooltip="Numeric formatting. Lowercase Roman (i, ii, iii, ...).">GeneralFormat::LowercaseRoman</ref>);</highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;Add(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a19de5b94f7b83900d4b296d9fa491aec" kindref="member" tooltip="Text formatting. All letters are uppercase.">GeneralFormat::Upper</ref>);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;GeneralFormat&gt;&gt;<sp/>generalFormatEnumerator<sp/>=<sp/>format-&gt;get_GeneralFormats()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(generalFormatEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;General<sp/>format<sp/>index<sp/>{0}:<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>index++,<sp/>generalFormatEnumerator-&gt;get_Current())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>25<sp/>+<sp/>33<sp/>\\*<sp/>roman<sp/>\\*<sp/>Upper&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;LVIII&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>format-&gt;get_GeneralFormats()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a039ae374b575c2cf4e150c0cc148d9bc" kindref="member" tooltip="Numeric formatting. Lowercase Roman (i, ii, iii, ...).">GeneralFormat::LowercaseRoman</ref>,<sp/>format-&gt;get_GeneralFormats()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>remove<sp/>our<sp/>formats<sp/>to<sp/>revert<sp/>the<sp/>field&apos;s<sp/>result<sp/>to<sp/>its<sp/>original<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;Remove(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a039ae374b575c2cf4e150c0cc148d9bc" kindref="member" tooltip="Numeric formatting. Lowercase Roman (i, ii, iii, ...).">GeneralFormat::LowercaseRoman</ref>);</highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;RemoveAt(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>format-&gt;get_GeneralFormats()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>25<sp/>+<sp/>33<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;58&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>format-&gt;get_GeneralFormats()-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="889" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::Field::get_IsDirty</definition>
        <argsstring>()</argsstring>
        <name>get_IsDirty</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_IsDirty</qualifiedname>
        <briefdescription>
<para>Gets or sets whether the current result of the field is no longer correct (stale) due to other modifications made to the document. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to use special property for updating field result. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Give<sp/>the<sp/>document&apos;s<sp/>built-in<sp/>&quot;Author&quot;<sp/>property<sp/>value,<sp/>and<sp/>then<sp/>display<sp/>it<sp/>with<sp/>a<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldAuthor&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca3fb8145fe86828004760321499e8c38b" kindref="member" tooltip="Specifies the AUTHOR field.">FieldType::FieldAuthor</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_FALSE(field-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>property.<sp/>The<sp/>field<sp/>still<sp/>displays<sp/>the<sp/>old<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>&amp;<sp/>Jane<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>field&apos;s<sp/>value<sp/>is<sp/>out<sp/>of<sp/>date,<sp/>we<sp/>can<sp/>mark<sp/>it<sp/>as<sp/>&quot;dirty&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>will<sp/>stay<sp/>out<sp/>of<sp/>date<sp/>until<sp/>we<sp/>update<sp/>the<sp/>field<sp/>manually<sp/>with<sp/>the<sp/>Field.Update()<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_IsDirty(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>docStream<sp/>=<sp/>MakeObject&lt;System::IO::MemoryStream&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>save<sp/>without<sp/>calling<sp/>an<sp/>update<sp/>method,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>field<sp/>will<sp/>keep<sp/>displaying<sp/>the<sp/>out<sp/>of<sp/>date<sp/>value<sp/>in<sp/>the<sp/>output<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(docStream,<sp/><ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Saves the document as an Office Open XML WordprocessingML Document (macro-free).">SaveFormat::Docx</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>LoadOptions<sp/>object<sp/>has<sp/>an<sp/>option<sp/>to<sp/>update<sp/>all<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>marked<sp/>as<sp/>&quot;dirty&quot;<sp/>when<sp/>loading<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>options<sp/>=<sp/>MakeObject&lt;Loading::LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>options-&gt;set_UpdateDirtyFields(updateDirtyFields);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream,<sp/>options);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>&amp;<sp/>Jane<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_BuiltInDocumentProperties()-&gt;get_Author());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldAuthor&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Updating<sp/>dirty<sp/>fields<sp/>like<sp/>this<sp/>automatically<sp/>set<sp/>their<sp/>&quot;IsDirty&quot;<sp/>flag<sp/>to<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateDirtyFields)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>&amp;<sp/>Jane<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(field-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(field-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="819" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::Field::get_IsLocked</definition>
        <argsstring>()</argsstring>
        <name>get_IsLocked</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_IsLocked</qualifiedname>
        <briefdescription>
<para>Gets or sets whether the field is locked (should not recalculate its result). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_start" kindref="compound">FieldStart</ref> node. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldDate&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca971f227975af74a7cd530642031cb487" kindref="member" tooltip="Specifies the DATE field.">FieldType::FieldDate</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">field-&gt;get_Format()-&gt;set_DateTimeFormat(u</highlight><highlight class="stringliteral">&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FieldChar&gt;<sp/>fieldStart<sp/>=<sp/>field-&gt;get_Start();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca971f227975af74a7cd530642031cb487" kindref="member" tooltip="Specifies the DATE field.">FieldType::FieldDate</ref>,<sp/>fieldStart-&gt;get_FieldType());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>fieldStart-&gt;get_IsDirty());</highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>fieldStart-&gt;get_IsLocked());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>facade<sp/>object<sp/>which<sp/>represents<sp/>the<sp/>field<sp/>in<sp/>the<sp/>document.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>System::DynamicCast&lt;FieldDate&gt;(fieldStart-&gt;GetField());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASPOSE_ASSERT_EQ(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>field-&gt;get_IsLocked());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/><sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>field<sp/>to<sp/>show<sp/>the<sp/>current<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="760" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t Aspose::Words::Fields::Field::get_LocaleId</definition>
        <argsstring>()</argsstring>
        <name>get_LocaleId</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_LocaleId</qualifiedname>
        <briefdescription>
<para>Gets or sets the LCID of the field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="namespace_aspose_1_1_words_1_1_fields_1ada00fa769416b360482566a3b6aefc8daddf7a4a5576ce625fee6ceb1e3ba650e" kindref="member">Aspose::Words::Fields::FieldUpdateCultureSource::FieldCode</ref></para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a field and work with its locale. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>a<sp/>DATE<sp/>field,<sp/>and<sp/>then<sp/>print<sp/>the<sp/>date<sp/>it<sp/>will<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Your<sp/>thread&apos;s<sp/>current<sp/>culture<sp/>determines<sp/>the<sp/>formatting<sp/>of<sp/>the<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Today&apos;s<sp/>date,<sp/>as<sp/>displayed<sp/>in<sp/>the<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class/system.globalization.culture_info/_1a654f9ef41db5eba355867b38b3d4af35" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::get_CurrentCulture</ref>()-&gt;get_EnglishName()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>culture:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>field-&gt;get_Result()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(1033,<sp/>field-&gt;get_LocaleId());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changing<sp/>the<sp/>culture<sp/>of<sp/>our<sp/>thread<sp/>will<sp/>impact<sp/>the<sp/>result<sp/>of<sp/>the<sp/>DATE<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Another<sp/>way<sp/>to<sp/>get<sp/>the<sp/>DATE<sp/>field<sp/>to<sp/>display<sp/>a<sp/>date<sp/>in<sp/>a<sp/>different<sp/>culture<sp/>is<sp/>to<sp/>use<sp/>its<sp/>LocaleId<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>way<sp/>allows<sp/>us<sp/>to<sp/>avoid<sp/>changing<sp/>the<sp/>thread&apos;s<sp/>culture<sp/>to<sp/>get<sp/>this<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_FieldOptions()-&gt;set_FieldUpdateCultureSource(<ref refid="namespace_aspose_1_1_words_1_1_fields_1ada00fa769416b360482566a3b6aefc8daddf7a4a5576ce625fee6ceb1e3ba650e" kindref="member" tooltip="The culture specified in the field formatting properties via language setting is used.">FieldUpdateCultureSource::FieldCode</ref>);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>de<sp/>=<sp/>MakeObject&lt;System::Globalization::CultureInfo&gt;(u</highlight><highlight class="stringliteral">&quot;de-DE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;set_LocaleId(de-&gt;get_LCID());</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Today&apos;s<sp/>date,<sp/>as<sp/>displayed<sp/>according<sp/>to<sp/>the<sp/>\&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="class/system.globalization.culture_info/_1a5b1038b1eb4ecfef1dfa381c9d2d53e0" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Globalization::CultureInfo::GetCultureInfo</ref>(field-&gt;get_LocaleId())-&gt;get_EnglishName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>culture:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>field-&gt;get_Result()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="922" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::Field::get_Result</definition>
        <argsstring>()</argsstring>
        <name>get_Result</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_Result</qualifiedname>
        <briefdescription>
<para>Gets or sets text that is between the field separator and field end. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a field into a document using a field code. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca971f227975af74a7cd530642031cb487" kindref="member" tooltip="Specifies the DATE field.">FieldType::FieldDate</ref>,<sp/>field-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>overload<sp/>of<sp/>the<sp/>InsertField<sp/>method<sp/>automatically<sp/>updates<sp/>inserted<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_LE(<ref refid="struct/system.math/_1a562e313d90d467f581dfb28b85e6e7fe" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Math::Abs</ref>((<ref refid="class/system.date_time/_1a54eeee79d8f9d970d218cf28702d94de" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::Parse</ref>(field-&gt;get_Result())<sp/>-<sp/><ref refid="class/system.date_time/_1a8b4667cfa17e4aff117188fee6dbd7ed" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Today</ref>()).get_Hours()),<sp/>24);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="699" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_separator" kindref="compound">Aspose::Words::Fields::FieldSeparator</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldSeparator &gt; Aspose::Words::Fields::Field::get_Separator</definition>
        <argsstring>()</argsstring>
        <name>get_Separator</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_Separator</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the field separator. Can be null. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a collection of fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldCollection_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>d<sp/>MMMM<sp/>yyyy\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>TIME<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;John<sp/>Doe\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>SUBJECT<sp/>\&quot;My<sp/>Subject\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>QUOTE<sp/>\&quot;Hello<sp/>world!\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldCollection&gt;<sp/>fields<sp/>=<sp/>doc-&gt;get_Range()-&gt;get_Fields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>field<sp/>collection,<sp/>and<sp/>print<sp/>contents<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>every<sp/>field<sp/>using<sp/>a<sp/>custom<sp/>visitor<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldVisitor<sp/>=<sp/>MakeObject&lt;ExField::FieldVisitor&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;Field&gt;&gt;&gt;<sp/>fieldEnumerator<sp/>=<sp/>fields-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Start()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()-&gt;get_Separator()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Separator()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_End()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>fields<sp/>in<sp/>the<sp/>document.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fieldVisitor-&gt;GetText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldVisitor()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldStart(SharedPtr&lt;FieldStart&gt;<sp/>fieldStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Found<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldStart-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tField<sp/>code:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tDisplayed<sp/>as:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldSeparator(SharedPtr&lt;FieldSeparator&gt;<sp/>fieldSeparator)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tFound<sp/>separator:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldSeparator-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldEnd(SharedPtr&lt;FieldEnd&gt;<sp/>fieldEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldEnd-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="340" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_start" kindref="compound">Aspose::Words::Fields::FieldStart</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Fields::FieldStart &gt; Aspose::Words::Fields::Field::get_Start</definition>
        <argsstring>() const</argsstring>
        <name>get_Start</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_Start</qualifiedname>
        <briefdescription>
<para>Gets the node that represents the start of the field. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to work with a collection of fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldCollection_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>d<sp/>MMMM<sp/>yyyy\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>TIME<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;John<sp/>Doe\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>SUBJECT<sp/>\&quot;My<sp/>Subject\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>QUOTE<sp/>\&quot;Hello<sp/>world!\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;FieldCollection&gt;<sp/>fields<sp/>=<sp/>doc-&gt;get_Range()-&gt;get_Fields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(6,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>field<sp/>collection,<sp/>and<sp/>print<sp/>contents<sp/>and<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>every<sp/>field<sp/>using<sp/>a<sp/>custom<sp/>visitor<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldVisitor<sp/>=<sp/>MakeObject&lt;ExField::FieldVisitor&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;SharedPtr&lt;Field&gt;&gt;&gt;<sp/>fieldEnumerator<sp/>=<sp/>fields-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Start()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnumerator-&gt;get_Current()-&gt;get_Separator()<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_Separator()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnumerator-&gt;get_Current()-&gt;get_End()-&gt;Accept(fieldVisitor);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>fields<sp/>in<sp/>the<sp/>document.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>fieldVisitor-&gt;GetText()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldVisitor<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldVisitor()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder<sp/>=<sp/>MakeObject&lt;System::Text::StringBuilder&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref><sp/>GetText()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mBuilder-&gt;ToString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldStart(SharedPtr&lt;FieldStart&gt;<sp/>fieldStart)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;Found<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldStart-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tField<sp/>code:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tDisplayed<sp/>as:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldStart-&gt;GetField()-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldSeparator(SharedPtr&lt;FieldSeparator&gt;<sp/>fieldSeparator)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;\tFound<sp/>separator:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>fieldSeparator-&gt;GetText());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldEnd(SharedPtr&lt;FieldEnd&gt;<sp/>fieldEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuilder-&gt;AppendLine(<ref refid="namespace_aspose_1_1_words_1_1_properties_1a18e161ff3021eed5f834261f8cbf2108a27118326006d3829667a400ad23d5d98" kindref="member" tooltip="The property is a string value.">String</ref>(u</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>field:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class/system.object_ext/_1a02a47581b14b298ef9da890fb37918da" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::ObjectExt::ToString</ref>(fieldEnd-&gt;get_FieldType()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Text::StringBuilder&gt;<sp/>mBuilder;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="233" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ad68196653db5cfca30c1ba18ed44c76e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edec" kindref="member">Aspose::Words::Fields::FieldType</ref></type>
        <definition>virtual Aspose::Words::Fields::FieldType Aspose::Words::Fields::Field::get_Type</definition>
        <argsstring>() const</argsstring>
        <name>get_Type</name>
        <qualifiedname>Aspose::Words::Fields::Field::get_Type</qualifiedname>
        <reimplementedby refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field_1ab46d6829c186785be80df35b07076ddf">get_Type</reimplementedby>
        <briefdescription>
<para>Gets the Microsoft Word field type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a field into a document using a field code. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca971f227975af74a7cd530642031cb487" kindref="member" tooltip="Specifies the DATE field.">FieldType::FieldDate</ref>,<sp/>field-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>overload<sp/>of<sp/>the<sp/>InsertField<sp/>method<sp/>automatically<sp/>updates<sp/>inserted<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_LE(<ref refid="struct/system.math/_1a562e313d90d467f581dfb28b85e6e7fe" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Math::Abs</ref>((<ref refid="class/system.date_time/_1a54eeee79d8f9d970d218cf28702d94de" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::Parse</ref>(field-&gt;get_Result())<sp/>-<sp/><ref refid="class/system.date_time/_1a8b4667cfa17e4aff117188fee6dbd7ed" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Today</ref>()).get_Hours()),<sp/>24);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="680" column="49"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a578378121cced134f079765f19f64498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::Field::GetFieldCode</definition>
        <argsstring>()</argsstring>
        <name>GetFieldCode</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetFieldCode</qualifiedname>
        <briefdescription>
<para>Returns text between field start and field separator (or field end if there is no separator). Both field code and field result of child fields are included. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a field into a document using a field code. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca971f227975af74a7cd530642031cb487" kindref="member" tooltip="Specifies the DATE field.">FieldType::FieldDate</ref>,<sp/>field-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>overload<sp/>of<sp/>the<sp/>InsertField<sp/>method<sp/>automatically<sp/>updates<sp/>inserted<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_LE(<ref refid="struct/system.math/_1a562e313d90d467f581dfb28b85e6e7fe" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Math::Abs</ref>((<ref refid="class/system.date_time/_1a54eeee79d8f9d970d218cf28702d94de" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::Parse</ref>(field-&gt;get_Result())<sp/>-<sp/><ref refid="class/system.date_time/_1a8b4667cfa17e4aff117188fee6dbd7ed" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Today</ref>()).get_Hours()),<sp/>24);</highlight></codeline>
</programlisting></para>
<para>Shows how to get a field&apos;s field code. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>which<sp/>contains<sp/>a<sp/>MERGEFIELD<sp/>inside<sp/>an<sp/>IF<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Nested<sp/>fields.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldIf<sp/>=<sp/>System::DynamicCast&lt;FieldIf&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>getting<sp/>a<sp/>field&apos;s<sp/>field<sp/>code:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Omit<sp/>its<sp/>inner<sp/>fields:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>IF<sp/><sp/>&gt;<sp/>0<sp/>\&quot;<sp/>(surplus<sp/>of<sp/>)<sp/>\&quot;<sp/>\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>fieldIf-&gt;GetFieldCode(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Include<sp/>its<sp/>inner<sp/>fields:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;<sp/>IF<sp/>\u0013<sp/>MERGEFIELD<sp/>NetIncome<sp/>\u0014\u0015<sp/>&gt;<sp/>0<sp/>\&quot;<sp/>(surplus<sp/>of<sp/>\u0013<sp/>MERGEFIELD<sp/><sp/>NetIncome<sp/>\\f<sp/>$<sp/>\u0014\u0015)<sp/>\&quot;<sp/>\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldIf-&gt;GetFieldCode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>the<sp/>GetFieldCode<sp/>method<sp/>displays<sp/>inner<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(fieldIf-&gt;GetFieldCode(),<sp/>fieldIf-&gt;GetFieldCode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="963" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref></type>
        <definition>System::String Aspose::Words::Fields::Field::GetFieldCode</definition>
        <argsstring>(bool includeChildFieldCodes)</argsstring>
        <name>GetFieldCode</name>
        <qualifiedname>Aspose::Words::Fields::Field::GetFieldCode</qualifiedname>
        <param>
          <type>bool</type>
          <declname>includeChildFieldCodes</declname>
        </param>
        <briefdescription>
<para>Returns text between field start and field separator (or field end if there is no separator). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>includeChildFieldCodes</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>True</computeroutput> if child field codes should be included.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to get a field&apos;s field code. <programlisting><codeline><highlight class="comment">//<sp/>Open<sp/>a<sp/>document<sp/>which<sp/>contains<sp/>a<sp/>MERGEFIELD<sp/>inside<sp/>an<sp/>IF<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Nested<sp/>fields.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fieldIf<sp/>=<sp/>System::DynamicCast&lt;FieldIf&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>two<sp/>ways<sp/>of<sp/>getting<sp/>a<sp/>field&apos;s<sp/>field<sp/>code:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Omit<sp/>its<sp/>inner<sp/>fields:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>IF<sp/><sp/>&gt;<sp/>0<sp/>\&quot;<sp/>(surplus<sp/>of<sp/>)<sp/>\&quot;<sp/>\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>fieldIf-&gt;GetFieldCode(</highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Include<sp/>its<sp/>inner<sp/>fields:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(String::Format(u</highlight><highlight class="stringliteral">&quot;<sp/>IF<sp/>\u0013<sp/>MERGEFIELD<sp/>NetIncome<sp/>\u0014\u0015<sp/>&gt;<sp/>0<sp/>\&quot;<sp/>(surplus<sp/>of<sp/>\u0013<sp/>MERGEFIELD<sp/><sp/>NetIncome<sp/>\\f<sp/>$<sp/>\u0014\u0015)<sp/>\&quot;<sp/>\&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldIf-&gt;GetFieldCode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>By<sp/>default,<sp/>the<sp/>GetFieldCode<sp/>method<sp/>displays<sp/>inner<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(fieldIf-&gt;GetFieldCode(),<sp/>fieldIf-&gt;GetFieldCode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="988" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ad26a8021af3dbdc5bf0a1360a201222f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace/system/_1a6b77ccd8c49df28c153be0462cdfdf49" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::SharedPtr</ref>&lt; <ref refid="class_aspose_1_1_words_1_1_node" kindref="compound">Aspose::Words::Node</ref> &gt;</type>
        <definition>System::SharedPtr&lt; Aspose::Words::Node &gt; Aspose::Words::Fields::Field::Remove</definition>
        <argsstring>()</argsstring>
        <name>Remove</name>
        <qualifiedname>Aspose::Words::Fields::Field::Remove</qualifiedname>
        <briefdescription>
<para>Removes the field from the document. Returns a node right after the field. If the field&apos;s end is the last child of its parent node, returns its parent paragraph. If the field is already removed, returns <bold>null</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to remove fields from a field collection. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>d<sp/>MMMM<sp/>yyyy\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>TIME<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>REVNUM<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/><sp/>\&quot;John<sp/>Doe\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>SUBJECT<sp/>\&quot;My<sp/>Subject\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;<sp/>QUOTE<sp/>\&quot;Hello<sp/>world!\&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FieldCollection&gt;<sp/>fields<sp/>=<sp/>doc-&gt;get_Range()-&gt;get_Fields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(6,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>four<sp/>ways<sp/>of<sp/>removing<sp/>fields<sp/>from<sp/>a<sp/>field<sp/>collection.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Get<sp/>a<sp/>field<sp/>to<sp/>remove<sp/>itself:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fields-&gt;idx_get(0)-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(5,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Get<sp/>the<sp/>collection<sp/>to<sp/>remove<sp/>a<sp/>field<sp/>that<sp/>we<sp/>pass<sp/>to<sp/>its<sp/>removal<sp/>method:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>lastField<sp/>=<sp/>fields-&gt;idx_get(3);</highlight></codeline>
<codeline><highlight class="normal">fields-&gt;Remove(lastField);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(4,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>Remove<sp/>a<sp/>field<sp/>from<sp/>a<sp/>collection<sp/>at<sp/>an<sp/>index:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fields-&gt;RemoveAt(2);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(3,<sp/>fields-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>4<sp/>-<sp/><sp/>Remove<sp/>all<sp/>the<sp/>fields<sp/>from<sp/>the<sp/>collection<sp/>at<sp/>once:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">fields-&gt;Clear();</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>fields-&gt;get_Count());</highlight></codeline>
</programlisting></para>
<para>Shows how to process PRIVATE fields. <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FieldPrivate_()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>a<sp/>Corel<sp/>WordPerfect<sp/>document<sp/>which<sp/>we<sp/>have<sp/>converted<sp/>to<sp/>.docx<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field<sp/>sample<sp/>-<sp/>PRIVATE.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WordPerfect<sp/>5.x/6.x<sp/>documents<sp/>like<sp/>the<sp/>one<sp/>we<sp/>have<sp/>loaded<sp/>may<sp/>contain<sp/>PRIVATE<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Microsoft<sp/>Word<sp/>preserves<sp/>PRIVATE<sp/>fields<sp/>during<sp/>load/save<sp/>operations,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>provides<sp/>no<sp/>functionality<sp/>for<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>System::DynamicCast&lt;FieldPrivate&gt;(doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>PRIVATE<sp/>\&quot;My<sp/>value\&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca25193fb58a0e5b7f45e2e50e75882a07" kindref="member" tooltip="Specifies the PRIVATE field.">FieldType::FieldPrivate</ref>,<sp/>field-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>also<sp/>insert<sp/>PRIVATE<sp/>fields<sp/>using<sp/>a<sp/>document<sp/>builder.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca25193fb58a0e5b7f45e2e50e75882a07" kindref="member" tooltip="Specifies the PRIVATE field.">FieldType::FieldPrivate</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>fields<sp/>are<sp/>not<sp/>a<sp/>viable<sp/>way<sp/>of<sp/>protecting<sp/>sensitive<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unless<sp/>backward<sp/>compatibility<sp/>with<sp/>older<sp/>versions<sp/>of<sp/>WordPerfect<sp/>is<sp/>essential,</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>safely<sp/>remove<sp/>these<sp/>fields.<sp/>We<sp/>can<sp/>do<sp/>this<sp/>using<sp/>a<sp/>DocumentVisiitor<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(2,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>remover<sp/>=<sp/>MakeObject&lt;ExField::FieldPrivateRemover&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Accept(remover);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(2,<sp/>remover-&gt;GetFieldsRemovedCount());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(0,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">FieldPrivateRemover<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>DocumentVisitor</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FieldPrivateRemover()<sp/>:<sp/>mFieldsRemovedCount(0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFieldsRemovedCount<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetFieldsRemovedCount()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mFieldsRemovedCount;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespace_aspose_1_1_words_1a5f2a3902dc32f04b75f7fd27967aa9b2" kindref="member" tooltip="Allows the visitor to control the enumeration of nodes.">VisitorAction</ref><sp/>VisitFieldEnd(SharedPtr&lt;FieldEnd&gt;<sp/>fieldEnd)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldEnd-&gt;get_FieldType()<sp/>==<sp/>FieldType::FieldPrivate)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fieldEnd-&gt;GetField()-&gt;Remove();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFieldsRemovedCount++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VisitorAction::Continue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mFieldsRemovedCount;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1097" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aa637d825865724665fb8ed856e664d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::Field::set_IsDirty</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IsDirty</name>
        <qualifiedname>Aspose::Words::Fields::Field::set_IsDirty</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" kindref="member">Aspose::Words::Fields::Field::get_IsDirty</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="822" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ac70b125adbe7f0ba5b889280cd282c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::Field::set_IsLocked</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_IsLocked</name>
        <qualifiedname>Aspose::Words::Fields::Field::set_IsLocked</qualifiedname>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" kindref="member">Aspose::Words::Fields::Field::get_IsLocked</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="763" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a165f748dd5ba33844f1d765f6c710f88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::Field::set_LocaleId</definition>
        <argsstring>(int32_t value)</argsstring>
        <name>set_LocaleId</name>
        <qualifiedname>Aspose::Words::Fields::Field::set_LocaleId</qualifiedname>
        <param>
          <type>int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" kindref="member">Aspose::Words::Fields::Field::get_LocaleId</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="925" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aa6af1e900c84ae806f071098dfe8f087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::Field::set_Result</definition>
        <argsstring>(const System::String &amp;value)</argsstring>
        <name>set_Result</name>
        <qualifiedname>Aspose::Words::Fields::Field::set_Result</qualifiedname>
        <param>
          <type>const <ref refid="class/system.string/" kindref="compound" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Setter for <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" kindref="member">Aspose::Words::Fields::Field::get_Result</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="702" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9f908becb16b26bed76d58dbcee9929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Aspose::Words::Fields::Field::Unlink</definition>
        <argsstring>()</argsstring>
        <name>Unlink</name>
        <qualifiedname>Aspose::Words::Fields::Field::Unlink</qualifiedname>
        <briefdescription>
<para>Performs the field unlink. </para>
        </briefdescription>
        <detaileddescription>
<para>Replaces the field with its most recent result.</para>
<para>Some fields, such as XE (Index Entry) fields and SEQ (Sequence) fields, cannot be unlinked.</para>
<para><simplesect kind="return"><para><computeroutput>True</computeroutput> if the field has been unlinked, otherwise <computeroutput>false</computeroutput>.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to unlink a field. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(MyDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Linked<sp/>fields.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;Unlink();</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1261" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::Field::Update</definition>
        <argsstring>()</argsstring>
        <name>Update</name>
        <qualifiedname>Aspose::Words::Fields::Field::Update</qualifiedname>
        <briefdescription>
<para>Performs the field update. Throws if the field is being updated already. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a field into a document using FieldType. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Insert<sp/>two<sp/>fields<sp/>while<sp/>passing<sp/>a<sp/>flag<sp/>which<sp/>determines<sp/>whether<sp/>to<sp/>update<sp/>them<sp/>as<sp/>the<sp/>builder<sp/>inserts<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>some<sp/>cases,<sp/>updating<sp/>fields<sp/>could<sp/>be<sp/>computationally<sp/>expensive,<sp/>and<sp/>it<sp/>may<sp/>be<sp/>a<sp/>good<sp/>idea<sp/>to<sp/>defer<sp/>the<sp/>update.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">doc-&gt;get_BuiltInDocumentProperties()-&gt;set_Author(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;This<sp/>document<sp/>was<sp/>written<sp/>by<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca3fb8145fe86828004760321499e8c38b" kindref="member" tooltip="Specifies the AUTHOR field.">FieldType::FieldAuthor</ref>,<sp/>updateInsertedFieldsImmediately);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertParagraph();</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;Write(u</highlight><highlight class="stringliteral">&quot;\nThis<sp/>is<sp/>page<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca4bd5b1f60d1aecd481edfd68a8f486ef" kindref="member" tooltip="Specifies the PAGE field.">FieldType::FieldPage</ref>,<sp/>updateInsertedFieldsImmediately);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>AUTHOR<sp/>&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;<sp/>PAGE<sp/>&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateInsertedFieldsImmediately)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(String::Empty,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>need<sp/>to<sp/>update<sp/>these<sp/>fields<sp/>using<sp/>the<sp/>update<sp/>methods<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(0)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">,<sp/>doc-&gt;get_Range()-&gt;get_Fields()-&gt;idx_get(1)-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Shows how to format field results. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>document<sp/>builder<sp/>to<sp/>insert<sp/>a<sp/>field<sp/>that<sp/>displays<sp/>a<sp/>result<sp/>with<sp/>no<sp/>format<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;5&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>apply<sp/>a<sp/>format<sp/>to<sp/>a<sp/>field&apos;s<sp/>result<sp/>using<sp/>the<sp/>field&apos;s<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Below<sp/>are<sp/>three<sp/>types<sp/>of<sp/>formats<sp/>that<sp/>we<sp/>can<sp/>apply<sp/>to<sp/>a<sp/>field&apos;s<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/><sp/>Numeric<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;FieldFormat&gt;<sp/>format<sp/>=<sp/>field-&gt;get_Format();</highlight></codeline>
<codeline><highlight class="normal">format-&gt;set_NumericFormat(u</highlight><highlight class="stringliteral">&quot;$###.00&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>2<sp/>+<sp/>3<sp/>\\#<sp/>$###.00&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;$<sp/><sp/>5.00&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>-<sp/><sp/>Date/time<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">format<sp/>=<sp/>field-&gt;get_Format();</highlight></codeline>
<codeline><highlight class="normal">format-&gt;set_DateTimeFormat(u</highlight><highlight class="stringliteral">&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Today&apos;s<sp/>date,<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>format-&gt;get_DateTimeFormat()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>format:\n\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>field-&gt;get_Result()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>3<sp/>-<sp/><sp/>General<sp/>format:</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;=<sp/>25<sp/>+<sp/>33&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">format<sp/>=<sp/>field-&gt;get_Format();</highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;Add(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a039ae374b575c2cf4e150c0cc148d9bc" kindref="member" tooltip="Numeric formatting. Lowercase Roman (i, ii, iii, ...).">GeneralFormat::LowercaseRoman</ref>);</highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;Add(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a19de5b94f7b83900d4b296d9fa491aec" kindref="member" tooltip="Text formatting. All letters are uppercase.">GeneralFormat::Upper</ref>);</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SharedPtr&lt;System::Collections::Generic::IEnumerator&lt;GeneralFormat&gt;&gt;<sp/>generalFormatEnumerator<sp/>=<sp/>format-&gt;get_GeneralFormats()-&gt;GetEnumerator();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(generalFormatEnumerator-&gt;MoveNext())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>String::Format(u</highlight><highlight class="stringliteral">&quot;General<sp/>format<sp/>index<sp/>{0}:<sp/>{1}&quot;</highlight><highlight class="normal">,<sp/>index++,<sp/>generalFormatEnumerator-&gt;get_Current())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>25<sp/>+<sp/>33<sp/>\\*<sp/>roman<sp/>\\*<sp/>Upper&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;LVIII&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(2,<sp/>format-&gt;get_GeneralFormats()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a039ae374b575c2cf4e150c0cc148d9bc" kindref="member" tooltip="Numeric formatting. Lowercase Roman (i, ii, iii, ...).">GeneralFormat::LowercaseRoman</ref>,<sp/>format-&gt;get_GeneralFormats()-&gt;idx_get(0));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>remove<sp/>our<sp/>formats<sp/>to<sp/>revert<sp/>the<sp/>field&apos;s<sp/>result<sp/>to<sp/>its<sp/>original<sp/>form.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;Remove(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a0d0235ded9818cb6a812f3a506d6f960a039ae374b575c2cf4e150c0cc148d9bc" kindref="member" tooltip="Numeric formatting. Lowercase Roman (i, ii, iii, ...).">GeneralFormat::LowercaseRoman</ref>);</highlight></codeline>
<codeline><highlight class="normal">format-&gt;get_GeneralFormats()-&gt;RemoveAt(0);</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>format-&gt;get_GeneralFormats()-&gt;get_Count());</highlight></codeline>
<codeline><highlight class="normal">field-&gt;Update();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;=<sp/>25<sp/>+<sp/>33<sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;58&quot;</highlight><highlight class="normal">,<sp/>field-&gt;get_Result());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(0,<sp/>format-&gt;get_GeneralFormats()-&gt;get_Count());</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1203" column="13"/>
      </memberdef>
      <memberdef kind="function" id="class_aspose_1_1_words_1_1_fields_1_1_field_1a1298d7daa07c863bf97cb3f37a4d7a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Aspose::Words::Fields::Field::Update</definition>
        <argsstring>(bool ignoreMergeFormat)</argsstring>
        <name>Update</name>
        <qualifiedname>Aspose::Words::Fields::Field::Update</qualifiedname>
        <param>
          <type>bool</type>
          <declname>ignoreMergeFormat</declname>
        </param>
        <briefdescription>
<para>Performs a field update. Throws if the field is being updated already. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ignoreMergeFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>true</computeroutput> then direct field result formatting is abandoned, regardless of the MERGEFORMAT switch, otherwise normal update is performed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to preserve or discard INCLUDEPICTURE fields when loading a document. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>includePicture<sp/>=<sp/>System::DynamicCast&lt;FieldIncludePicture&gt;(builder-&gt;InsertField(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca04b6c3fde546a94093163717cbe6cee8" kindref="member" tooltip="Specifies the INCLUDEPICTURE field.">FieldType::FieldIncludePicture</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline><highlight class="normal">includePicture-&gt;set_SourceFullName(ImageDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Transparent<sp/>background<sp/>logo.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal">includePicture-&gt;Update(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>docStream<sp/>=<sp/>MakeObject&lt;System::IO::MemoryStream&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc-&gt;Save(docStream,<sp/>MakeObject&lt;OoxmlSaveOptions&gt;(<ref refid="namespace_aspose_1_1_words_1a115f4c887d1fbaa2cbe273d422f7e847a21c22cc98b22ad080d57e7d8d847d8cb" kindref="member" tooltip="Saves the document as an Office Open XML WordprocessingML Document (macro-free).">SaveFormat::Docx</ref>));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>set<sp/>a<sp/>flag<sp/>in<sp/>a<sp/>LoadOptions<sp/>object<sp/>to<sp/>decide<sp/>whether<sp/>to<sp/>convert<sp/>all<sp/>INCLUDEPICTURE<sp/>fields</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>image<sp/>shapes<sp/>when<sp/>loading<sp/>a<sp/>document<sp/>that<sp/>contains<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>loadOptions<sp/>=<sp/>MakeObject&lt;Loading::LoadOptions&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>loadOptions-&gt;set_PreserveIncludePictureField(preserveIncludePictureField);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;(docStream,<sp/>loadOptions);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preserveIncludePictureField)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_TRUE(doc-&gt;get_Range()-&gt;get_Fields()-&gt;LINQ_Any([](SharedPtr&lt;Field&gt;<sp/>f)<sp/>{<sp/>return<sp/>f-&gt;get_Type()<sp/>==<sp/>FieldType::FieldIncludePicture;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;UpdateFields();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doc-&gt;Save(ArtifactsDir<sp/>+<sp/>u</highlight><highlight class="stringliteral">&quot;Field.PreserveIncludePicture.docx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT_FALSE(doc-&gt;get_Range()-&gt;get_Fields()-&gt;LINQ_Any([](SharedPtr&lt;Field&gt;<sp/>f)<sp/>{<sp/>return<sp/>f-&gt;get_Type()<sp/>==<sp/>FieldType::FieldIncludePicture;<sp/>}));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Aspose.Words.Cpp/Fields/Field.h" line="1244" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a Microsoft Word document field. </para>
    </briefdescription>
    <detaileddescription>
<para>A field in a Word document is a complex structure consisting of multiple nodes that include field start, field code, field separator, field result and field end. <ref refid="namespace_aspose_1_1_words_1_1_fields" kindref="compound">Fields</ref> can be nested, contain rich content and span multiple paragraphs or sections in a document. The <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Field</ref> class is a &quot;facade&quot; object that provides properties and methods that allow to work with a field as a single object.</para>
<para>The <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" kindref="member">Start</ref>, <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" kindref="member">Separator</ref> and <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" kindref="member">End</ref> properties point to the field start, separator and end nodes of the field respectively.</para>
<para>The content between the field start and separator is the field code. The content between the field separator and field end is the field result. The field code typically consists of one or more <ref refid="class_aspose_1_1_words_1_1_run" kindref="compound">Run</ref> objects that specify instructions. The processing application is expected to execute the field code to calculate the field result.</para>
<para>The process of calculating field results is called the field update. Aspose.Words can update field results of most of the field types in exactly the same way as Microsoft Word does it. Most notably, Aspose.Words can calculate results of even the most complex formula fields. To calculate the field result of a single field use the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" kindref="member">Update</ref> method. To update fields in the whole document use <ref refid="class_aspose_1_1_words_1_1_document_1a9c2187d845fae7a8dd8a6a5241d69d25" kindref="member">UpdateFields</ref>.</para>
<para>You can get the plain text version of the field code using the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" kindref="member">GetFieldCode()</ref> method. You can get and set the plain text version of the field result using the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" kindref="member">Result</ref> property. Both the field code and field result can contain complex content, such as nested fields, paragraphs, shapes, tables and in this case you might want to work with the field nodes directly if you need more control.</para>
<para>You do not create instances of the <ref refid="class_aspose_1_1_words_1_1_fields_1_1_field" kindref="compound">Field</ref> class directly. To create a new field use the <ref refid="" kindref="compound">InsertField()</ref> method.</para>
<para><simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
Shows how to insert a field into a document using a field code. <programlisting><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>doc<sp/>=<sp/>MakeObject&lt;Document&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>builder<sp/>=<sp/>MakeObject&lt;DocumentBuilder&gt;(doc);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">SharedPtr&lt;Field&gt;<sp/>field<sp/>=<sp/>builder-&gt;InsertField(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(<ref refid="namespace_aspose_1_1_words_1_1_fields_1a07fe44a4500c375e409bae0f72c9edeca971f227975af74a7cd530642031cb487" kindref="member" tooltip="Specifies the DATE field.">FieldType::FieldDate</ref>,<sp/>field-&gt;get_Type());</highlight></codeline>
<codeline><highlight class="normal">ASSERT_EQ(u</highlight><highlight class="stringliteral">&quot;DATE<sp/>\\@<sp/>\&quot;dddd,<sp/>MMMM<sp/>dd,<sp/>yyyy\&quot;&quot;</highlight><highlight class="normal">,<sp/>field-&gt;GetFieldCode());</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>overload<sp/>of<sp/>the<sp/>InsertField<sp/>method<sp/>automatically<sp/>updates<sp/>inserted<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">ASSERT_LE(<ref refid="struct/system.math/_1a562e313d90d467f581dfb28b85e6e7fe" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::Math::Abs</ref>((<ref refid="class/system.date_time/_1a54eeee79d8f9d970d218cf28702d94de" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::Parse</ref>(field-&gt;get_Result())<sp/>-<sp/><ref refid="class/system.date_time/_1a8b4667cfa17e4aff117188fee6dbd7ed" kindref="member" external="X:/temp/apireference/asposecpplib.containerize.api.tag">System::DateTime::get_Today</ref>()).get_Hours()),<sp/>24);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Aspose::Words::Fields::FieldAddIn</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_add_in"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Aspose::Words::Fields::FieldAddressBlock</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_address_block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Aspose::Words::Fields::FieldAdvance</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_advance"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>Aspose::Words::Fields::FieldAsk</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_ask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Aspose::Words::Fields::FieldAuthor</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_author"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>Aspose::Words::Fields::FieldAutoNum</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>Aspose::Words::Fields::FieldAutoNumLgl</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_lgl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>Aspose::Words::Fields::FieldAutoNumOut</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_num_out"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>Aspose::Words::Fields::FieldAutoText</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_text"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>Aspose::Words::Fields::FieldAutoTextList</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_auto_text_list"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>Aspose::Words::Fields::FieldBarcode</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_barcode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>Aspose::Words::Fields::FieldBibliography</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_bibliography"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>Aspose::Words::Fields::FieldBidiOutline</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_bidi_outline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>Aspose::Words::Fields::FieldCitation</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_citation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>Aspose::Words::Fields::FieldComments</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_comments"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>Aspose::Words::Fields::FieldCompare</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_compare"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>Aspose::Words::Fields::FieldCreateDate</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_create_date"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>Aspose::Words::Fields::FieldData</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_data"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>Aspose::Words::Fields::FieldDatabase</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_database"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>Aspose::Words::Fields::FieldDate</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_date"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>Aspose::Words::Fields::FieldDde</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_dde"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>Aspose::Words::Fields::FieldDdeAuto</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_dde_auto"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>Aspose::Words::Fields::FieldDisplayBarcode</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_display_barcode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>Aspose::Words::Fields::FieldDocProperty</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_property"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>Aspose::Words::Fields::FieldDocVariable</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_doc_variable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>Aspose::Words::Fields::FieldEQ</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_e_q"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>Aspose::Words::Fields::FieldEditTime</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_edit_time"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>Aspose::Words::Fields::FieldEmbed</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_embed"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>Aspose::Words::Fields::FieldFileName</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_name"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>Aspose::Words::Fields::FieldFileSize</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_file_size"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>Aspose::Words::Fields::FieldFillIn</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_fill_in"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>Aspose::Words::Fields::FieldFootnoteRef</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_footnote_ref"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>Aspose::Words::Fields::FieldFormCheckBox</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_check_box"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>Aspose::Words::Fields::FieldFormDropDown</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_drop_down"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>Aspose::Words::Fields::FieldFormText</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_form_text"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>Aspose::Words::Fields::FieldFormula</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_formula"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>Aspose::Words::Fields::FieldGlossary</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_glossary"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>Aspose::Words::Fields::FieldGoToButton</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_go_to_button"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>Aspose::Words::Fields::FieldGreetingLine</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_greeting_line"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>Aspose::Words::Fields::FieldHyperlink</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_hyperlink"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>Aspose::Words::Fields::FieldIf</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_if"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>Aspose::Words::Fields::FieldImport</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_import"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>Aspose::Words::Fields::FieldInclude</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_include"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>Aspose::Words::Fields::FieldIncludePicture</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_picture"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>Aspose::Words::Fields::FieldIncludeText</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_include_text"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>Aspose::Words::Fields::FieldIndex</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>Aspose::Words::Fields::FieldInfo</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_info"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>Aspose::Words::Fields::FieldKeywords</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_keywords"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>Aspose::Words::Fields::FieldLastSavedBy</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_last_saved_by"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>Aspose::Words::Fields::FieldLink</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_link"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>Aspose::Words::Fields::FieldListNum</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_list_num"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>Aspose::Words::Fields::FieldMacroButton</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_macro_button"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>Aspose::Words::Fields::FieldMergeBarcode</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_barcode"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>Aspose::Words::Fields::FieldMergeField</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_field"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>Aspose::Words::Fields::FieldMergeRec</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_rec"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>Aspose::Words::Fields::FieldMergeSeq</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_merge_seq"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>Aspose::Words::Fields::FieldNext</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_next"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>Aspose::Words::Fields::FieldNextIf</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_next_if"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>Aspose::Words::Fields::FieldNoteRef</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_note_ref"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>Aspose::Words::Fields::FieldNumChars</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_chars"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>Aspose::Words::Fields::FieldNumPages</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_pages"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>Aspose::Words::Fields::FieldNumWords</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_num_words"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>Aspose::Words::Fields::FieldOcx</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_ocx"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>Aspose::Words::Fields::FieldPage</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_page"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>Aspose::Words::Fields::FieldPageRef</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_page_ref"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>Aspose::Words::Fields::FieldPrint</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_print"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>Aspose::Words::Fields::FieldPrintDate</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_print_date"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>Aspose::Words::Fields::FieldPrivate</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_private"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>Aspose::Words::Fields::FieldQuote</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>Aspose::Words::Fields::FieldRD</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_r_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>Aspose::Words::Fields::FieldRef</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_ref"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>Aspose::Words::Fields::FieldRevNum</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_rev_num"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>Aspose::Words::Fields::FieldSaveDate</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_save_date"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>Aspose::Words::Fields::FieldSection</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>Aspose::Words::Fields::FieldSectionPages</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_section_pages"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>Aspose::Words::Fields::FieldSeq</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_seq"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>Aspose::Words::Fields::FieldSet</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_set"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>Aspose::Words::Fields::FieldShape</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_shape"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>Aspose::Words::Fields::FieldSkipIf</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_skip_if"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>Aspose::Words::Fields::FieldStyleRef</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_style_ref"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>Aspose::Words::Fields::FieldSubject</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_subject"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>Aspose::Words::Fields::FieldSymbol</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_symbol"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>Aspose::Words::Fields::FieldTA</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_t_a"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>Aspose::Words::Fields::FieldTC</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_t_c"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>Aspose::Words::Fields::FieldTemplate</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_template"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>Aspose::Words::Fields::FieldTime</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_time"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>Aspose::Words::Fields::FieldTitle</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_title"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>Aspose::Words::Fields::FieldToa</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_toa"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>Aspose::Words::Fields::FieldToc</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_toc"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>Aspose::Words::Fields::FieldUnknown</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_unknown"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>Aspose::Words::Fields::FieldUserAddress</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_address"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>Aspose::Words::Fields::FieldUserInitials</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_initials"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>Aspose::Words::Fields::FieldUserName</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_user_name"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>Aspose::Words::Fields::FieldXE</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field_x_e"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Aspose::Words::Fields::Field</label>
        <link refid="class_aspose_1_1_words_1_1_fields_1_1_field"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>System::Object</label>
      </node>
    </collaborationgraph>
    <location file="Aspose.Words.Cpp/Fields/Field.h" line="118" column="1" bodyfile="Aspose.Words.Cpp/Fields/Field.h" bodystart="119" bodyend="1303"/>
    <listofallmembers>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab6f7a8806638bfacf1e4d48ff153ca52" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>BaseType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a8beea0f88f340d5955669d1c8eaeb740" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>BeforeUnlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a6e14601b83c997736fcdecb55bcafdb3" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>EndUpdate</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad86c0cd3e21c1b771f0b911ad52bf8b8" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>Field</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a5c2d01019c517ea8098f296903e37a34" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_DisplayResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad5f0995c85cce833806e847cf25809b7" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_End</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a399c14463916724cac0015b430175589" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_FieldEnd</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abc40cddc1325f7fec80d8530e5287448" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_FieldStart</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a090c5d09915e2ead6cc54fda736dd7c2" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_Format</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ae68851d4a88a1fc867d3ddee2e4e88c4" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afda4c46db80761545c89e21aae5b717d" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a93719d071099487b6aea1eaa241dd6e8" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a012c93472901dc077815970a9b2ab650" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1abbc83ad66d5fb391a21980126ea96847" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_Separator</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afa7cd5d4cf1a87b05058982f26786456" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_Start</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a1bc513fb40420b6d46d983ff6a804c77" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_SupportsConditionalUpdate</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad68196653db5cfca30c1ba18ed44c76e" prot="public" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>get_Type</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9dae9f00016d302428b0e284c0198fd" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetBidiParagraphLevelOverride</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1af2ca5299128e70f16f83c5706524f643" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetChildFieldsUpdateStrategyInArgument</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aeecf41416cbf639ab9e5411702ef8928" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetDefaultDateTimeFormat</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aec0fb24827aecbea0ff27a044ba7c760" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetFakeResult</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a578378121cced134f079765f19f64498" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa40bc0e4a5be11f0df785cc8bb2ff042" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9dbe3680b4022e78bc06bf302768280" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetPageNumberFormatSection</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa312d165970a8c453ad49aca355adf8a" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>GetUpdateStage</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab53ef8533b2f7220e8ea664367f8a601" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>Initialize</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a85905613cf7d1567985c1166338054b3" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField0</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a58c239f072e42cd6f8be20923f7c8d17" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField1</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1af907533053d366499a7346f57d41ace8" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField2</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ac63fefc9846a87af474015977787fd43" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField3</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a46f42f15997eeeb13fa19bf91f1eec49" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField4</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad63a8b53594788a47dcd44d3eec047d5" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField5</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a488d32f5a2e95e24199f09a7a47ac011" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>mField6</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a3804d07aab1a30cdf0ddabaeb737290c" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>NeedStoreOldResultNodes</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aff48bb5a80ad13f4e14f79c99cf1fb6d" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>NotifyChildFieldUpdated</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afd175a349099f9cae71188f36b6666d0" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>ParseFieldCode</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ad26a8021af3dbdc5bf0a1360a201222f" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>Remove</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a5560840ede5a5574e0f4adfd5e23829d" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>RTTI_INFO_DECL_EX</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa637d825865724665fb8ed856e664d95" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>set_IsDirty</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ac70b125adbe7f0ba5b889280cd282c47" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>set_IsLocked</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a165f748dd5ba33844f1d765f6c710f88" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>set_LocaleId</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aa6af1e900c84ae806f071098dfe8f087" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>set_Result</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a11982fc5233746441af82f4b93c305a1" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>ThisType</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a2dfce8b5638aaa3b871dd77a4eb2ad9a" prot="private" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>ThisTypeBaseTypesInfo</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1ab9f908becb16b26bed76d58dbcee9929" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>Unlink</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1aaec82418b2b6493aa2827b8e282b2e82" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1a1298d7daa07c863bf97cb3f37a4d7a99" prot="public" virt="non-virtual"><scope>Aspose::Words::Fields::Field</scope><name>Update</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1afd2f4d29a84550a38375396538654ab8" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>UpdateCore</name></member>
      <member refid="class_aspose_1_1_words_1_1_fields_1_1_field_1acaf2385183a1a0bd6ecddb272b01c909" prot="private" virt="virtual"><scope>Aspose::Words::Fields::Field</scope><name>~Field</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
